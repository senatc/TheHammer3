//TH-Header
//*****************************************************************************************
// Copyright (c)  2001 Michael Kurz
// All rights reserved.
// If you want to use this source in your applications conatct: <MichaelKurz@gmx.at> 
//
// $FileName    : WinError.pkg
// $ProjectName : Shared 
// $Author      : Michael Kurz
// $Created     : 01.05.2001  19:54
//
// Contents:
//  -Error constants for WinAPI Calls.
//  -FormatIntegerAsUnsigned integer iVal   // Formats an Integer value as an unsigned Integer.
//
//
//*****************************************************************************************
//TH-RevisionStart
//TH-RevisionEnd

    // Converts an Integer to unsigned by using number.
Function UInteger Global Integer iNr Returns Number
    If iNr Lt 0 Function_Return (2^32+Number(iNr))
    Function_Return iNr
End_Function

    // Formats an DF integer as an unsigned value.
Function FormatIntegerAsUnsigned Global Integer iNr Returns String
    Function_Return (UInteger(iNr))
End_Function


#COMMAND C_Define
    Define !1 For !2
#ENDCOMMAND

C_Define FACILITY_WINDOWS                 8
C_Define FACILITY_STORAGE                 3
C_Define FACILITY_SSPI                    9
C_Define FACILITY_SETUPAPI                15
C_Define FACILITY_RPC                     1
C_Define FACILITY_WIN32                   7
C_Define FACILITY_CONTROL                 10
C_Define FACILITY_NULL                    0
C_Define FACILITY_MSMQ                    14
C_Define FACILITY_MEDIASERVER             13
C_Define FACILITY_INTERNET                12
C_Define FACILITY_ITF                     4
C_Define FACILITY_DISPATCH                2
C_Define FACILITY_CERT                    11


C_Define ERROR_SUCCESS                    0

C_Define NO_ERROR 0                                                 // dderror

//
// MessageId: ERROR_INVALID_FUNCTION
//
// MessageText:
//
//  Incorrect function.
//
C_Define ERROR_INVALID_FUNCTION           1    // dderror

//
// MessageId: ERROR_FILE_NOT_FOUND
//
// MessageText:
//
//  The system cannot find the file specified.
//
C_Define ERROR_FILE_NOT_FOUND             2

//
// MessageId: ERROR_PATH_NOT_FOUND
//
// MessageText:
//
//  The system cannot find the path specified.
//
C_Define ERROR_PATH_NOT_FOUND             3

//
// MessageId: ERROR_TOO_MANY_OPEN_FILES
//
// MessageText:
//
//  The system cannot open the file.
//
C_Define ERROR_TOO_MANY_OPEN_FILES        4

//
// MessageId: ERROR_ACCESS_DENIED
//
// MessageText:
//
//  Access is denied.
//
C_Define ERROR_ACCESS_DENIED              5

//
// MessageId: ERROR_INVALID_HANDLE
//
// MessageText:
//
//  The handle is invalid.
//
C_Define ERROR_INVALID_HANDLE             6

//
// MessageId: ERROR_ARENA_TRASHED
//
// MessageText:
//
//  The storage control blocks were destroyed.
//
C_Define ERROR_ARENA_TRASHED              7

//
// MessageId: ERROR_NOT_ENOUGH_MEMORY
//
// MessageText:
//
//  Not enough storage is available to process this command.
//
C_Define ERROR_NOT_ENOUGH_MEMORY          8    // dderror

//
// MessageId: ERROR_INVALID_BLOCK
//
// MessageText:
//
//  The storage control block address is invalid.
//
C_Define ERROR_INVALID_BLOCK              9

//
// MessageId: ERROR_BAD_ENVIRONMENT
//
// MessageText:
//
//  The environment is incorrect.
//
C_Define ERROR_BAD_ENVIRONMENT              10

//
// MessageId: ERROR_BAD_FORMAT
//
// MessageText:
//
//  An attempt was made to load a program with an
//  incorrect format.
//
C_Define ERROR_BAD_FORMAT                  11

//
// MessageId: ERROR_INVALID_ACCESS
//
// MessageText:
//
//  The access code is invalid.
//
C_Define ERROR_INVALID_ACCESS              12

//
// MessageId: ERROR_INVALID_DATA
//
// MessageText:
//
//  The data is invalid.
//
C_Define ERROR_INVALID_DATA                13

//
// MessageId: ERROR_OUTOFMEMORY
//
// MessageText:
//
//  Not enough storage is available to complete this operation.
//
C_Define ERROR_OUTOFMEMORY                 14

//
// MessageId: ERROR_INVALID_DRIVE
//
// MessageText:
//
//  The system cannot find the drive specified.
//
C_Define ERROR_INVALID_DRIVE               15

//
// MessageId: ERROR_CURRENT_DIRECTORY
//
// MessageText:
//
//  The directory cannot be removed.
//
C_Define ERROR_CURRENT_DIRECTORY           16

//
// MessageId: ERROR_NOT_SAME_DEVICE
//
// MessageText:
//
//  The system cannot move the file
//  to a different disk drive.
//
C_Define ERROR_NOT_SAME_DEVICE             17

//
// MessageId: ERROR_NO_MORE_FILES
//
// MessageText:
//
//  There are no more files.
//
C_Define ERROR_NO_MORE_FILES               18

//
// MessageId: ERROR_WRITE_PROTECT
//
// MessageText:
//
//  The media is write protected.
//
C_Define ERROR_WRITE_PROTECT              19

//
// MessageId: ERROR_BAD_UNIT
//
// MessageText:
//
//  The system cannot find the device specified.
//
C_Define ERROR_BAD_UNIT                   20

//
// MessageId: ERROR_NOT_READY
//
// MessageText:
//
//  The device is not ready.
//
C_Define ERROR_NOT_READY                  21

//
// MessageId: ERROR_BAD_COMMAND
//
// MessageText:
//
//  The device does not recognize the command.
//
C_Define ERROR_BAD_COMMAND                22

//
// MessageId: ERROR_CRC
//
// MessageText:
//
//  Data error (cyclic redundancy check .
//
C_Define ERROR_CRC                        23

//
// MessageId: ERROR_BAD_LENGTH
//
// MessageText:
//
//  The program issued a command but the
//  command length is incorrect.
//
C_Define ERROR_BAD_LENGTH                 24

//
// MessageId: ERROR_SEEK
//
// MessageText:
//
//  The drive cannot locate a specific
//  area or track on the disk.
//
C_Define ERROR_SEEK                       25

//
// MessageId: ERROR_NOT_DOS_DISK
//
// MessageText:
//
//  The specified disk or diskette cannot be accessed.
//
C_Define ERROR_NOT_DOS_DISK               26

//
// MessageId: ERROR_SECTOR_NOT_FOUND
//
// MessageText:
//
//  The drive cannot find the sector requested.
//
C_Define ERROR_SECTOR_NOT_FOUND           27

//
// MessageId: ERROR_OUT_OF_PAPER
//
// MessageText:
//
//  The printer is out of paper.
//
C_Define ERROR_OUT_OF_PAPER               28

//
// MessageId: ERROR_WRITE_FAULT
//
// MessageText:
//
//  The system cannot write to the specified device.
//
C_Define ERROR_WRITE_FAULT                29

//
// MessageId: ERROR_READ_FAULT
//
// MessageText:
//
//  The system cannot read from the specified device.
//
C_Define ERROR_READ_FAULT                 30

//
// MessageId: ERROR_GEN_FAILURE
//
// MessageText:
//
//  A device attached to the system is not functioning.
//
C_Define ERROR_GEN_FAILURE                31

//
// MessageId: ERROR_SHARING_VIOLATION
//
// MessageText:
//
//  The process cannot access the file because
//  it is being used by another process.
//
C_Define ERROR_SHARING_VIOLATION          32

//
// MessageId: ERROR_LOCK_VIOLATION
//
// MessageText:
//
//  The process cannot access the file because
//  another process has locked a portion of the file.
//
C_Define ERROR_LOCK_VIOLATION             33

//
// MessageId: ERROR_WRONG_DISK
//
// MessageText:
//
//  The wrong diskette is in the drive.
//  Insert %2 (Volume Serial Number: %3 
//  into drive %1.
//
C_Define ERROR_WRONG_DISK                 34

//
// MessageId: ERROR_SHARING_BUFFER_EXCEEDED
//
// MessageText:
//
//  Too many files opened for sharing.
//
C_Define ERROR_SHARING_BUFFER_EXCEEDED    36

//
// MessageId: ERROR_HANDLE_EOF
//
// MessageText:
//
//  Reached the end of the file.
//
C_Define ERROR_HANDLE_EOF                 38

//
// MessageId: ERROR_HANDLE_DISK_FULL
//
// MessageText:
//
//  The disk is full.
//
C_Define ERROR_HANDLE_DISK_FULL           39

//
// MessageId: ERROR_NOT_SUPPORTED
//
// MessageText:
//
//  The network request is not supported.
//
C_Define ERROR_NOT_SUPPORTED              50

//
// MessageId: ERROR_REM_NOT_LIST
//
// MessageText:
//
//  The remote computer is not available.
//
C_Define ERROR_REM_NOT_LIST               51

//
// MessageId: ERROR_DUP_NAME
//
// MessageText:
//
//  A duplicate name exists on the network.
//
C_Define ERROR_DUP_NAME                   52

//
// MessageId: ERROR_BAD_NETPATH
//
// MessageText:
//
//  The network path was not found.
//
C_Define ERROR_BAD_NETPATH                53

//
// MessageId: ERROR_NETWORK_BUSY
//
// MessageText:
//
//  The network is busy.
//
C_Define ERROR_NETWORK_BUSY               54

//
// MessageId: ERROR_DEV_NOT_EXIST
//
// MessageText:
//
//  The specified network resource or device is no longer
//  available.
//
C_Define ERROR_DEV_NOT_EXIST              55    // dderror

//
// MessageId: ERROR_TOO_MANY_CMDS
//
// MessageText:
//
//  The network BIOS command limit has been reached.
//
C_Define ERROR_TOO_MANY_CMDS              56

//
// MessageId: ERROR_ADAP_HDW_ERR
//
// MessageText:
//
//  A network adapter hardware error occurred.
//
C_Define ERROR_ADAP_HDW_ERR               57

//
// MessageId: ERROR_BAD_NET_RESP
//
// MessageText:
//
//  The specified server cannot perform the requested
//  operation.
//
C_Define ERROR_BAD_NET_RESP               58

//
// MessageId: ERROR_UNEXP_NET_ERR
//
// MessageText:
//
//  An unexpected network error occurred.
//
C_Define ERROR_UNEXP_NET_ERR              59

//
// MessageId: ERROR_BAD_REM_ADAP
//
// MessageText:
//
//  The remote adapter is not compatible.
//
C_Define ERROR_BAD_REM_ADAP               60

//
// MessageId: ERROR_PRINTQ_FULL
//
// MessageText:
//
//  The printer queue is full.
//
C_Define ERROR_PRINTQ_FULL                61

//
// MessageId: ERROR_NO_SPOOL_SPACE
//
// MessageText:
//
//  Space to store the file waiting to be printed is
//  not available on the server.
//
C_Define ERROR_NO_SPOOL_SPACE             62

//
// MessageId: ERROR_PRINT_CANCELLED
//
// MessageText:
//
//  Your file waiting to be printed was deleted.
//
C_Define ERROR_PRINT_CANCELLED            63

//
// MessageId: ERROR_NETNAME_DELETED
//
// MessageText:
//
//  The specified network name is no longer available.
//
C_Define ERROR_NETNAME_DELETED            64

//
// MessageId: ERROR_NETWORK_ACCESS_DENIED
//
// MessageText:
//
//  Network access is denied.
//
C_Define ERROR_NETWORK_ACCESS_DENIED      65

//
// MessageId: ERROR_BAD_DEV_TYPE
//
// MessageText:
//
//  The network resource type is not correct.
//
C_Define ERROR_BAD_DEV_TYPE               66

//
// MessageId: ERROR_BAD_NET_NAME
//
// MessageText:
//
//  The network name cannot be found.
//
C_Define ERROR_BAD_NET_NAME               67

//
// MessageId: ERROR_TOO_MANY_NAMES
//
// MessageText:
//
//  The name limit for the local computer network
//  adapter card was exceeded.
//
C_Define ERROR_TOO_MANY_NAMES             68

//
// MessageId: ERROR_TOO_MANY_SESS
//
// MessageText:
//
//  The network BIOS session limit was exceeded.
//
C_Define ERROR_TOO_MANY_SESS              69

//
// MessageId: ERROR_SHARING_PAUSED
//
// MessageText:
//
//  The remote server has been paused or is in the
//  process of being started.
//
C_Define ERROR_SHARING_PAUSED             70

//
// MessageId: ERROR_REQ_NOT_ACCEP
//
// MessageText:
//
//  No more connections can be made to this remote computer at this time
//  because there are already as many connections as the computer can accept.
//
C_Define ERROR_REQ_NOT_ACCEP              71

//
// MessageId: ERROR_REDIR_PAUSED
//
// MessageText:
//
//  The specified printer or disk device has been paused.
//
C_Define ERROR_REDIR_PAUSED               72

//
// MessageId: ERROR_FILE_EXISTS
//
// MessageText:
//
//  The file exists.
//
C_Define ERROR_FILE_EXISTS                80

//
// MessageId: ERROR_CANNOT_MAKE
//
// MessageText:
//
//  The directory or file cannot be created.
//
C_Define ERROR_CANNOT_MAKE                82

//
// MessageId: ERROR_FAIL_I24
//
// MessageText:
//
//  Fail on INT 24.
//
C_Define ERROR_FAIL_I24                   83

//
// MessageId: ERROR_OUT_OF_STRUCTURES
//
// MessageText:
//
//  Storage to process this request is not available.
//
C_Define ERROR_OUT_OF_STRUCTURES          84

//
// MessageId: ERROR_ALREADY_ASSIGNED
//
// MessageText:
//
//  The local device name is already in use.
//
C_Define ERROR_ALREADY_ASSIGNED           85

//
// MessageId: ERROR_INVALID_PASSWORD
//
// MessageText:
//
//  The specified network password is not correct.
//
C_Define ERROR_INVALID_PASSWORD           86

//
// MessageId: ERROR_INVALID_PARAMETER
//
// MessageText:
//
//  The parameter is incorrect.
//
C_Define ERROR_INVALID_PARAMETER          87    // dderror

//
// MessageId: ERROR_NET_WRITE_FAULT
//
// MessageText:
//
//  A write fault occurred on the network.
//
C_Define ERROR_NET_WRITE_FAULT            88

//
// MessageId: ERROR_NO_PROC_SLOTS
//
// MessageText:
//
//  The system cannot start another process at
//  this time.
//
C_Define ERROR_NO_PROC_SLOTS              89

//
// MessageId: ERROR_TOO_MANY_SEMAPHORES
//
// MessageText:
//
//  Cannot create another system semaphore.
//
C_Define ERROR_TOO_MANY_SEMAPHORES        100

//
// MessageId: ERROR_EXCL_SEM_ALREADY_OWNED
//
// MessageText:
//
//  The exclusive semaphore is owned by another process.
//
C_Define ERROR_EXCL_SEM_ALREADY_OWNED     101

//
// MessageId: ERROR_SEM_IS_SET
//
// MessageText:
//
//  The semaphore is set and cannot be closed.
//
C_Define ERROR_SEM_IS_SET                 102

//
// MessageId: ERROR_TOO_MANY_SEM_REQUESTS
//
// MessageText:
//
//  The semaphore cannot be set again.
//
C_Define ERROR_TOO_MANY_SEM_REQUESTS      103

//
// MessageId: ERROR_INVALID_AT_INTERRUPT_TIME
//
// MessageText:
//
//  Cannot request exclusive semaphores at interrupt time.
//
C_Define ERROR_INVALID_AT_INTERRUPT_TIME  104

//
// MessageId: ERROR_SEM_OWNER_DIED
//
// MessageText:
//
//  The previous ownership of this semaphore has ended.
//
C_Define ERROR_SEM_OWNER_DIED             105

//
// MessageId: ERROR_SEM_USER_LIMIT
//
// MessageText:
//
//  Insert the diskette for drive %1.
//
C_Define ERROR_SEM_USER_LIMIT             106

//
// MessageId: ERROR_DISK_CHANGE
//
// MessageText:
//
//  The program stopped because an alternate diskette was not inserted.
//
C_Define ERROR_DISK_CHANGE                107

//
// MessageId: ERROR_DRIVE_LOCKED
//
// MessageText:
//
//  The disk is in use or locked by
//  another process.
//
C_Define ERROR_DRIVE_LOCKED               108

//
// MessageId: ERROR_BROKEN_PIPE
//
// MessageText:
//
//  The pipe has been ended.
//
C_Define ERROR_BROKEN_PIPE                109

//
// MessageId: ERROR_OPEN_FAILED
//
// MessageText:
//
//  The system cannot open the
//  device or file specified.
//
C_Define ERROR_OPEN_FAILED                110

//
// MessageId: ERROR_BUFFER_OVERFLOW
//
// MessageText:
//
//  The file name is too long.
//
C_Define ERROR_BUFFER_OVERFLOW            111

//
// MessageId: ERROR_DISK_FULL
//
// MessageText:
//
//  There is not enough space on the disk.
//
C_Define ERROR_DISK_FULL                  112

//
// MessageId: ERROR_NO_MORE_SEARCH_HANDLES
//
// MessageText:
//
//  No more internal file identifiers available.
//
C_Define ERROR_NO_MORE_SEARCH_HANDLES     113

//
// MessageId: ERROR_INVALID_TARGET_HANDLE
//
// MessageText:
//
//  The target internal file identifier is incorrect.
//
C_Define ERROR_INVALID_TARGET_HANDLE      114

//
// MessageId: ERROR_INVALID_CATEGORY
//
// MessageText:
//
//  The IOCTL call made by the application program is
//  not correct.
//
C_Define ERROR_INVALID_CATEGORY           117

//
// MessageId: ERROR_INVALID_VERIFY_SWITCH
//
// MessageText:
//
//  The verify-on-write switch parameter value is not
//  correct.
//
C_Define ERROR_INVALID_VERIFY_SWITCH      118

//
// MessageId: ERROR_BAD_DRIVER_LEVEL
//
// MessageText:
//
//  The system does not support the command requested.
//
C_Define ERROR_BAD_DRIVER_LEVEL           119

//
// MessageId: ERROR_CALL_NOT_IMPLEMENTED
//
// MessageText:
//
//  This function is not supported on this system.
//
C_Define ERROR_CALL_NOT_IMPLEMENTED       120

//
// MessageId: ERROR_SEM_TIMEOUT
//
// MessageText:
//
//  The semaphore timeout period has expired.
//
C_Define ERROR_SEM_TIMEOUT                121

//
// MessageId: ERROR_INSUFFICIENT_BUFFER
//
// MessageText:
//
//  The data area passed to a system call is too
//  small.
//
C_Define ERROR_INSUFFICIENT_BUFFER        122    // dderror

//
// MessageId: ERROR_INVALID_NAME
//
// MessageText:
//
//  The filename, directory name, or volume label syntax is incorrect.
//
C_Define ERROR_INVALID_NAME               123

//
// MessageId: ERROR_INVALID_LEVEL
//
// MessageText:
//
//  The system call level is not correct.
//
C_Define ERROR_INVALID_LEVEL              124

//
// MessageId: ERROR_NO_VOLUME_LABEL
//
// MessageText:
//
//  The disk has no volume label.
//
C_Define ERROR_NO_VOLUME_LABEL            125

//
// MessageId: ERROR_MOD_NOT_FOUND
//
// MessageText:
//
//  The specified module could not be found.
//
C_Define ERROR_MOD_NOT_FOUND              126

//
// MessageId: ERROR_PROC_NOT_FOUND
//
// MessageText:
//
//  The specified procedure could not be found.
//
C_Define ERROR_PROC_NOT_FOUND             127

//
// MessageId: ERROR_WAIT_NO_CHILDREN
//
// MessageText:
//
//  There are no child processes to wait for.
//
C_Define ERROR_WAIT_NO_CHILDREN           128

//
// MessageId: ERROR_CHILD_NOT_COMPLETE
//
// MessageText:
//
//  The %1 application cannot be run in Win32 mode.
//
C_Define ERROR_CHILD_NOT_COMPLETE         129

//
// MessageId: ERROR_DIRECT_ACCESS_HANDLE
//
// MessageText:
//
//  Attempt to use a file handle to an open disk partition for an
//  operation other than raw disk I/O.
//
C_Define ERROR_DIRECT_ACCESS_HANDLE       130

//
// MessageId: ERROR_NEGATIVE_SEEK
//
// MessageText:
//
//  An attempt was made to move the file pointer before the beginning of the file.
//
C_Define ERROR_NEGATIVE_SEEK              131

//
// MessageId: ERROR_SEEK_ON_DEVICE
//
// MessageText:
//
//  The file pointer cannot be set on the specified device or file.
//
C_Define ERROR_SEEK_ON_DEVICE             132

//
// MessageId: ERROR_IS_JOIN_TARGET
//
// MessageText:
//
//  A JOIN or SUBST command
//  cannot be used for a drive that
//  contains previously joined drives.
//
C_Define ERROR_IS_JOIN_TARGET             133

//
// MessageId: ERROR_IS_JOINED
//
// MessageText:
//
//  An attempt was made to use a
//  JOIN or SUBST command on a drive that has
//  already been joined.
//
C_Define ERROR_IS_JOINED                  134

//
// MessageId: ERROR_IS_SUBSTED
//
// MessageText:
//
//  An attempt was made to use a
//  JOIN or SUBST command on a drive that has
//  already been substituted.
//
C_Define ERROR_IS_SUBSTED                 135

//
// MessageId: ERROR_NOT_JOINED
//
// MessageText:
//
//  The system tried to delete
//  the JOIN of a drive that is not joined.
//
C_Define ERROR_NOT_JOINED                 136

//
// MessageId: ERROR_NOT_SUBSTED
//
// MessageText:
//
//  The system tried to delete the
//  substitution of a drive that is not substituted.
//
C_Define ERROR_NOT_SUBSTED                137

//
// MessageId: ERROR_JOIN_TO_JOIN
//
// MessageText:
//
//  The system tried to join a drive
//  to a directory on a joined drive.
//
C_Define ERROR_JOIN_TO_JOIN               138

//
// MessageId: ERROR_SUBST_TO_SUBST
//
// MessageText:
//
//  The system tried to substitute a
//  drive to a directory on a substituted drive.
//
C_Define ERROR_SUBST_TO_SUBST             139

//
// MessageId: ERROR_JOIN_TO_SUBST
//
// MessageText:
//
//  The system tried to join a drive to
//  a directory on a substituted drive.
//
C_Define ERROR_JOIN_TO_SUBST              140

//
// MessageId: ERROR_SUBST_TO_JOIN
//
// MessageText:
//
//  The system tried to SUBST a drive
//  to a directory on a joined drive.
//
C_Define ERROR_SUBST_TO_JOIN              141

//
// MessageId: ERROR_BUSY_DRIVE
//
// MessageText:
//
//  The system cannot perform a JOIN or SUBST at this time.
//
C_Define ERROR_BUSY_DRIVE                 142

//
// MessageId: ERROR_SAME_DRIVE
//
// MessageText:
//
//  The system cannot join or substitute a
//  drive to or for a directory on the same drive.
//
C_Define ERROR_SAME_DRIVE                 143

//
// MessageId: ERROR_DIR_NOT_ROOT
//
// MessageText:
//
//  The directory is not a subdirectory of the root directory.
//
C_Define ERROR_DIR_NOT_ROOT               144

//
// MessageId: ERROR_DIR_NOT_EMPTY
//
// MessageText:
//
//  The directory is not empty.
//
C_Define ERROR_DIR_NOT_EMPTY              145

//
// MessageId: ERROR_IS_SUBST_PATH
//
// MessageText:
//
//  The path specified is being used in
//  a substitute.
//
C_Define ERROR_IS_SUBST_PATH              146

//
// MessageId: ERROR_IS_JOIN_PATH
//
// MessageText:
//
//  Not enough resources are available to
//  process this command.
//
C_Define ERROR_IS_JOIN_PATH               147

//
// MessageId: ERROR_PATH_BUSY
//
// MessageText:
//
//  The path specified cannot be used at this time.
//
C_Define ERROR_PATH_BUSY                  148

//
// MessageId: ERROR_IS_SUBST_TARGET
//
// MessageText:
//
//  An attempt was made to join
//  or substitute a drive for which a directory
//  on the drive is the target of a previous
//  substitute.
//
C_Define ERROR_IS_SUBST_TARGET            149

//
// MessageId: ERROR_SYSTEM_TRACE
//
// MessageText:
//
//  System trace information was not specified in your
//  CONFIG.SYS file, or tracing is disallowed.
//
C_Define ERROR_SYSTEM_TRACE               150

//
// MessageId: ERROR_INVALID_EVENT_COUNT
//
// MessageText:
//
//  The number of specified semaphore events for
//  DosMuxSemWait is not correct.
//
C_Define ERROR_INVALID_EVENT_COUNT        151

//
// MessageId: ERROR_TOO_MANY_MUXWAITERS
//
// MessageText:
//
//  DosMuxSemWait did not execute; too many semaphores
//  are already set.
//
C_Define ERROR_TOO_MANY_MUXWAITERS        152

//
// MessageId: ERROR_INVALID_LIST_FORMAT
//
// MessageText:
//
//  The DosMuxSemWait list is not correct.
//
C_Define ERROR_INVALID_LIST_FORMAT        153

//
// MessageId: ERROR_LABEL_TOO_LONG
//
// MessageText:
//
//  The volume label you entered exceeds the label character
//  limit of the target file system.
//
C_Define ERROR_LABEL_TOO_LONG             154

//
// MessageId: ERROR_TOO_MANY_TCBS
//
// MessageText:
//
//  Cannot create another thread.
//
C_Define ERROR_TOO_MANY_TCBS              155

//
// MessageId: ERROR_SIGNAL_REFUSED
//
// MessageText:
//
//  The recipient process has refused the signal.
//
C_Define ERROR_SIGNAL_REFUSED             156

//
// MessageId: ERROR_DISCARDED
//
// MessageText:
//
//  The segment is already discarded and cannot be locked.
//
C_Define ERROR_DISCARDED                  157

//
// MessageId: ERROR_NOT_LOCKED
//
// MessageText:
//
//  The segment is already unlocked.
//
C_Define ERROR_NOT_LOCKED                 158

//
// MessageId: ERROR_BAD_THREADID_ADDR
//
// MessageText:
//
//  The address for the thread ID is not correct.
//
C_Define ERROR_BAD_THREADID_ADDR          159

//
// MessageId: ERROR_BAD_ARGUMENTS
//
// MessageText:
//
//  The argument string passed to DosExecPgm is not correct.
//
C_Define ERROR_BAD_ARGUMENTS              160

//
// MessageId: ERROR_BAD_PATHNAME
//
// MessageText:
//
//  The specified path is invalid.
//
C_Define ERROR_BAD_PATHNAME               161

//
// MessageId: ERROR_SIGNAL_PENDING
//
// MessageText:
//
//  A signal is already pending.
//
C_Define ERROR_SIGNAL_PENDING             162

//
// MessageId: ERROR_MAX_THRDS_REACHED
//
// MessageText:
//
//  No more threads can be created in the system.
//
C_Define ERROR_MAX_THRDS_REACHED          164

//
// MessageId: ERROR_LOCK_FAILED
//
// MessageText:
//
//  Unable to lock a region of a file.
//
C_Define ERROR_LOCK_FAILED                167

//
// MessageId: ERROR_BUSY
//
// MessageText:
//
//  The requested resource is in use.
//
C_Define ERROR_BUSY                       170

//
// MessageId: ERROR_CANCEL_VIOLATION
//
// MessageText:
//
//  A lock request was not outstanding for the supplied cancel region.
//
C_Define ERROR_CANCEL_VIOLATION           173

//
// MessageId: ERROR_ATOMIC_LOCKS_NOT_SUPPORTED
//
// MessageText:
//
//  The file system does not support atomic changes to the lock type.
//
C_Define ERROR_ATOMIC_LOCKS_NOT_SUPPORTED 174

//
// MessageId: ERROR_INVALID_SEGMENT_NUMBER
//
// MessageText:
//
//  The system detected a segment number that was not correct.
//
C_Define ERROR_INVALID_SEGMENT_NUMBER     180

//
// MessageId: ERROR_INVALID_ORDINAL
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_INVALID_ORDINAL            182

//
// MessageId: ERROR_ALREADY_EXISTS
//
// MessageText:
//
//  Cannot create a file when that file already exists.
//
C_Define ERROR_ALREADY_EXISTS             183

//
// MessageId: ERROR_INVALID_FLAG_NUMBER
//
// MessageText:
//
//  The flag passed is not correct.
//
C_Define ERROR_INVALID_FLAG_NUMBER        186

//
// MessageId: ERROR_SEM_NOT_FOUND
//
// MessageText:
//
//  The specified system semaphore name was not found.
//
C_Define ERROR_SEM_NOT_FOUND              187

//
// MessageId: ERROR_INVALID_STARTING_CODESEG
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_INVALID_STARTING_CODESEG   188

//
// MessageId: ERROR_INVALID_STACKSEG
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_INVALID_STACKSEG           189

//
// MessageId: ERROR_INVALID_MODULETYPE
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_INVALID_MODULETYPE         190

//
// MessageId: ERROR_INVALID_EXE_SIGNATURE
//
// MessageText:
//
//  Cannot run %1 in Win32 mode.
//
C_Define ERROR_INVALID_EXE_SIGNATURE      191

//
// MessageId: ERROR_EXE_MARKED_INVALID
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_EXE_MARKED_INVALID         192

//
// MessageId: ERROR_BAD_EXE_FORMAT
//
// MessageText:
//
//  %1 is not a valid Win32 application.
//
C_Define ERROR_BAD_EXE_FORMAT             193

//
// MessageId: ERROR_ITERATED_DATA_EXCEEDS_64k
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_ITERATED_DATA_EXCEEDS_64k  194

//
// MessageId: ERROR_INVALID_MINALLOCSIZE
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_INVALID_MINALLOCSIZE       195

//
// MessageId: ERROR_DYNLINK_FROM_INVALID_RING
//
// MessageText:
//
//  The operating system cannot run this
//  application program.
//
C_Define ERROR_DYNLINK_FROM_INVALID_RING  196

//
// MessageId: ERROR_IOPL_NOT_ENABLED
//
// MessageText:
//
//  The operating system is not presently
//  configured to run this application.
//
C_Define ERROR_IOPL_NOT_ENABLED           197

//
// MessageId: ERROR_INVALID_SEGDPL
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_INVALID_SEGDPL             198

//
// MessageId: ERROR_AUTODATASEG_EXCEEDS_64k
//
// MessageText:
//
//  The operating system cannot run this
//  application program.
//
C_Define ERROR_AUTODATASEG_EXCEEDS_64k    199

//
// MessageId: ERROR_RING2SEG_MUST_BE_MOVABLE
//
// MessageText:
//
//  The code segment cannot be greater than or equal to 64K.
//
C_Define ERROR_RING2SEG_MUST_BE_MOVABLE   200

//
// MessageId: ERROR_RELOC_CHAIN_XEEDS_SEGLIM
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_RELOC_CHAIN_XEEDS_SEGLIM   201

//
// MessageId: ERROR_INFLOOP_IN_RELOC_CHAIN
//
// MessageText:
//
//  The operating system cannot run %1.
//
C_Define ERROR_INFLOOP_IN_RELOC_CHAIN     202

//
// MessageId: ERROR_ENVVAR_NOT_FOUND
//
// MessageText:
//
//  The system could not find the environment
//  option that was entered.
//
C_Define ERROR_ENVVAR_NOT_FOUND           203

//
// MessageId: ERROR_NO_SIGNAL_SENT
//
// MessageText:
//
//  No process in the command subtree has a
//  signal handler.
//
C_Define ERROR_NO_SIGNAL_SENT             205

//
// MessageId: ERROR_FILENAME_EXCED_RANGE
//
// MessageText:
//
//  The filename or extension is too long.
//
C_Define ERROR_FILENAME_EXCED_RANGE       206

//
// MessageId: ERROR_RING2_STACK_IN_USE
//
// MessageText:
//
//  The ring 2 stack is in use.
//
C_Define ERROR_RING2_STACK_IN_USE         207

//
// MessageId: ERROR_META_EXPANSION_TOO_LONG
//
// MessageText:
//
//  The global filename characters, * or ?, are entered
//  incorrectly or too many global filename characters are specified.
//
C_Define ERROR_META_EXPANSION_TOO_LONG    208

//
// MessageId: ERROR_INVALID_SIGNAL_NUMBER
//
// MessageText:
//
//  The signal being posted is not correct.
//
C_Define ERROR_INVALID_SIGNAL_NUMBER      209

//
// MessageId: ERROR_THREAD_1_INACTIVE
//
// MessageText:
//
//  The signal handler cannot be set.
//
C_Define ERROR_THREAD_1_INACTIVE          210

//
// MessageId: ERROR_LOCKED
//
// MessageText:
//
//  The segment is locked and cannot be reallocated.
//
C_Define ERROR_LOCKED                     212

//
// MessageId: ERROR_TOO_MANY_MODULES
//
// MessageText:
//
//  Too many dynamic-link modules are attached to this
//  program or dynamic-link module.
//
C_Define ERROR_TOO_MANY_MODULES           214

//
// MessageId: ERROR_NESTING_NOT_ALLOWED
//
// MessageText:
//
//  Can't nest calls to LoadModule.
//
C_Define ERROR_NESTING_NOT_ALLOWED        215

//
// MessageId: ERROR_EXE_MACHINE_TYPE_MISMATCH
//
// MessageText:
//
//  The image file %1 is valid, but is for a machine type other
//  than the current machine.
//
C_Define ERROR_EXE_MACHINE_TYPE_MISMATCH  216

//
// MessageId: ERROR_BAD_PIPE
//
// MessageText:
//
//  The pipe state is invalid.
//
C_Define ERROR_BAD_PIPE                   230

//
// MessageId: ERROR_PIPE_BUSY
//
// MessageText:
//
//  All pipe instances are busy.
//
C_Define ERROR_PIPE_BUSY                  231

//
// MessageId: ERROR_NO_DATA
//
// MessageText:
//
//  The pipe is being closed.
//
C_Define ERROR_NO_DATA                    232

//
// MessageId: ERROR_PIPE_NOT_CONNECTED
//
// MessageText:
//
//  No process is on the other end of the pipe.
//
C_Define ERROR_PIPE_NOT_CONNECTED         233

//
// MessageId: ERROR_MORE_DATA
//
// MessageText:
//
//  More data is available.
//
C_Define ERROR_MORE_DATA                  234    // dderror

//
// MessageId: ERROR_VC_DISCONNECTED
//
// MessageText:
//
//  The session was canceled.
//
C_Define ERROR_VC_DISCONNECTED            240

//
// MessageId: ERROR_INVALID_EA_NAME
//
// MessageText:
//
//  The specified extended attribute name was invalid.
//
C_Define ERROR_INVALID_EA_NAME            254

//
// MessageId: ERROR_EA_LIST_INCONSISTENT
//
// MessageText:
//
//  The extended attributes are inconsistent.
//
C_Define ERROR_EA_LIST_INCONSISTENT       255

//
// MessageId: ERROR_NO_MORE_ITEMS
//
// MessageText:
//
//  No more data is available.
//
C_Define ERROR_NO_MORE_ITEMS              259

//
// MessageId: ERROR_CANNOT_COPY
//
// MessageText:
//
//  The copy functions cannot be used.
//
C_Define ERROR_CANNOT_COPY                266

//
// MessageId: ERROR_DIRECTORY
//
// MessageText:
//
//  The directory name is invalid.
//
C_Define ERROR_DIRECTORY                  267

//
// MessageId: ERROR_EAS_DIDNT_FIT
//
// MessageText:
//
//  The extended attributes did not fit in the buffer.
//
C_Define ERROR_EAS_DIDNT_FIT              275

//
// MessageId: ERROR_EA_FILE_CORRUPT
//
// MessageText:
//
//  The extended attribute file on the mounted file system is corrupt.
//
C_Define ERROR_EA_FILE_CORRUPT            276

//
// MessageId: ERROR_EA_TABLE_FULL
//
// MessageText:
//
//  The extended attribute table file is full.
//
C_Define ERROR_EA_TABLE_FULL              277

//
// MessageId: ERROR_INVALID_EA_HANDLE
//
// MessageText:
//
//  The specified extended attribute handle is invalid.
//
C_Define ERROR_INVALID_EA_HANDLE          278

//
// MessageId: ERROR_EAS_NOT_SUPPORTED
//
// MessageText:
//
//  The mounted file system does not support extended attributes.
//
C_Define ERROR_EAS_NOT_SUPPORTED          282

//
// MessageId: ERROR_NOT_OWNER
//
// MessageText:
//
//  Attempt to release mutex not owned by caller.
//
C_Define ERROR_NOT_OWNER                  288

//
// MessageId: ERROR_TOO_MANY_POSTS
//
// MessageText:
//
//  Too many posts were made to a semaphore.
//
C_Define ERROR_TOO_MANY_POSTS             298

//
// MessageId: ERROR_PARTIAL_COPY
//
// MessageText:
//
//  Only part of a ReadProcessMemoty or WriteProcessMemory request was completed.
//
C_Define ERROR_PARTIAL_COPY               299

//
// MessageId: ERROR_OPLOCK_NOT_GRANTED
//
// MessageText:
//
//  The oplock request is denied.
//
C_Define ERROR_OPLOCK_NOT_GRANTED         300

//
// MessageId: ERROR_INVALID_OPLOCK_PROTOCOL
//
// MessageText:
//
//  An invalid oplock acknowledgment was received by the system.
//
C_Define ERROR_INVALID_OPLOCK_PROTOCOL    301

//
// MessageId: ERROR_MR_MID_NOT_FOUND
//
// MessageText:
//
//  The system cannot find message text for message number |CI$%1
//  in the message file for %2.
//
C_Define ERROR_MR_MID_NOT_FOUND           317

//
// MessageId: ERROR_INVALID_ADDRESS
//
// MessageText:
//
//  Attempt to access invalid address.
//
C_Define ERROR_INVALID_ADDRESS            487

//
// MessageId: ERROR_ARITHMETIC_OVERFLOW
//
// MessageText:
//
//  Arithmetic result exceeded 32 bits.
//
C_Define ERROR_ARITHMETIC_OVERFLOW        534

//
// MessageId: ERROR_PIPE_CONNECTED
//
// MessageText:
//
//  There is a process on other end of the pipe.
//
C_Define ERROR_PIPE_CONNECTED             535

//
// MessageId: ERROR_PIPE_LISTENING
//
// MessageText:
//
//  Waiting for a process to open the other end of the pipe.
//
C_Define ERROR_PIPE_LISTENING             536

//
// MessageId: ERROR_EA_ACCESS_DENIED
//
// MessageText:
//
//  Access to the extended attribute was denied.
//
C_Define ERROR_EA_ACCESS_DENIED           994

//
// MessageId: ERROR_OPERATION_ABORTED
//
// MessageText:
//
//  The I/O operation has been aborted because of either a thread exit
//  or an application request.
//
C_Define ERROR_OPERATION_ABORTED          995

//
// MessageId: ERROR_IO_INCOMPLETE
//
// MessageText:
//
//  Overlapped I/O event is not in a signaled state.
//
C_Define ERROR_IO_INCOMPLETE              996

//
// MessageId: ERROR_IO_PENDING
//
// MessageText:
//
//  Overlapped I/O operation is in progress.
//
C_Define ERROR_IO_PENDING                 997    // dderror

//
// MessageId: ERROR_NOACCESS
//
// MessageText:
//
//  Invalid access to memory location.
//
C_Define ERROR_NOACCESS                   998

//
// MessageId: ERROR_SWAPERROR
//
// MessageText:
//
//  Error performing inpage operation.
//
C_Define ERROR_SWAPERROR                  999

//
// MessageId: ERROR_STACK_OVERFLOW
//
// MessageText:
//
//  Recursion too deep; the stack overflowed.
//
C_Define ERROR_STACK_OVERFLOW             1001

//
// MessageId: ERROR_INVALID_MESSAGE
//
// MessageText:
//
//  The window cannot act on the sent message.
//
C_Define ERROR_INVALID_MESSAGE            1002

//
// MessageId: ERROR_CAN_NOT_COMPLETE
//
// MessageText:
//
//  Cannot complete this function.
//
C_Define ERROR_CAN_NOT_COMPLETE           1003

//
// MessageId: ERROR_INVALID_FLAGS
//
// MessageText:
//
//  Invalid flags.
//
C_Define ERROR_INVALID_FLAGS              1004

//
// MessageId: ERROR_UNRECOGNIZED_VOLUME
//
// MessageText:
//
//  The volume does not contain a recognized file system.
//  Please make sure that all required file system drivers are loaded and that the
//  volume is not corrupted.
//
C_Define ERROR_UNRECOGNIZED_VOLUME        1005

//
// MessageId: ERROR_FILE_INVALID
//
// MessageText:
//
//  The volume for a file has been externally altered so that the
//  opened file is no longer valid.
//
C_Define ERROR_FILE_INVALID               1006

//
// MessageId: ERROR_FULLSCREEN_MODE
//
// MessageText:
//
//  The requested operation cannot be performed in full-screen mode.
//
C_Define ERROR_FULLSCREEN_MODE            1007

//
// MessageId: ERROR_NO_TOKEN
//
// MessageText:
//
//  An attempt was made to reference a token that does not exist.
//
C_Define ERROR_NO_TOKEN                   1008

//
// MessageId: ERROR_BADDB
//
// MessageText:
//
//  The configuration registry database is corrupt.
//
C_Define ERROR_BADDB                      1009

//
// MessageId: ERROR_BADKEY
//
// MessageText:
//
//  The configuration registry key is invalid.
//
C_Define ERROR_BADKEY                     1010

//
// MessageId: ERROR_CANTOPEN
//
// MessageText:
//
//  The configuration registry key could not be opened.
//
C_Define ERROR_CANTOPEN                   1011

//
// MessageId: ERROR_CANTREAD
//
// MessageText:
//
//  The configuration registry key could not be read.
//
C_Define ERROR_CANTREAD                   1012

//
// MessageId: ERROR_CANTWRITE
//
// MessageText:
//
//  The configuration registry key could not be written.
//
C_Define ERROR_CANTWRITE                  1013

//
// MessageId: ERROR_REGISTRY_RECOVERED
//
// MessageText:
//
//  One of the files in the registry database had to be recovered
//  by use of a log or alternate copy.  The recovery was successful.
//
C_Define ERROR_REGISTRY_RECOVERED         1014

//
// MessageId: ERROR_REGISTRY_CORRUPT
//
// MessageText:
//
//  The registry is corrupted. The structure of one of the files that contains
//  registry data is corrupted, or the system's image of the file in memory
//  is corrupted, or the file could not be recovered because the alternate
//  copy or log was absent or corrupted.
//
C_Define ERROR_REGISTRY_CORRUPT           1015

//
// MessageId: ERROR_REGISTRY_IO_FAILED
//
// MessageText:
//
//  An I/O operation initiated by the registry failed unrecoverably.
//  The registry could not read in, or write out, or flush, one of the files
//  that contain the system's image of the registry.
//
C_Define ERROR_REGISTRY_IO_FAILED         1016

//
// MessageId: ERROR_NOT_REGISTRY_FILE
//
// MessageText:
//
//  The system has attempted to load or restore a file into the registry, but the
//  specified file is not in a registry file format.
//
C_Define ERROR_NOT_REGISTRY_FILE          1017

//
// MessageId: ERROR_KEY_DELETED
//
// MessageText:
//
//  Illegal operation attempted on a registry key that has been marked for deletion.
//
C_Define ERROR_KEY_DELETED                1018

//
// MessageId: ERROR_NO_LOG_SPACE
//
// MessageText:
//
//  System could not allocate the required space in a registry log.
//
C_Define ERROR_NO_LOG_SPACE               1019

//
// MessageId: ERROR_KEY_HAS_CHILDREN
//
// MessageText:
//
//  Cannot create a symbolic link in a registry key that already
//  has subkeys or values.
//
C_Define ERROR_KEY_HAS_CHILDREN           1020

//
// MessageId: ERROR_CHILD_MUST_BE_VOLATILE
//
// MessageText:
//
//  Cannot create a stable subkey under a volatile parent key.
//
C_Define ERROR_CHILD_MUST_BE_VOLATILE     1021

//
// MessageId: ERROR_NOTIFY_ENUM_DIR
//
// MessageText:
//
//  A notify change request is being completed and the information
//  is not being returned in the caller's buffer. The caller now
//  needs to enumerate the files to find the changes.
//
C_Define ERROR_NOTIFY_ENUM_DIR            1022

//
// MessageId: ERROR_DEPENDENT_SERVICES_RUNNING
//
// MessageText:
//
//  A stop control has been sent to a service that other running services
//  are dependent on.
//
C_Define ERROR_DEPENDENT_SERVICES_RUNNING 1051

//
// MessageId: ERROR_INVALID_SERVICE_CONTROL
//
// MessageText:
//
//  The requested control is not valid for this service.
//
C_Define ERROR_INVALID_SERVICE_CONTROL    1052

//
// MessageId: ERROR_SERVICE_REQUEST_TIMEOUT
//
// MessageText:
//
//  The service did not respond to the start or control request in a timely
//  fashion.
//
C_Define ERROR_SERVICE_REQUEST_TIMEOUT    1053

//
// MessageId: ERROR_SERVICE_NO_THREAD
//
// MessageText:
//
//  A thread could not be created for the service.
//
C_Define ERROR_SERVICE_NO_THREAD          1054

//
// MessageId: ERROR_SERVICE_DATABASE_LOCKED
//
// MessageText:
//
//  The service database is locked.
//
C_Define ERROR_SERVICE_DATABASE_LOCKED    1055

//
// MessageId: ERROR_SERVICE_ALREADY_RUNNING
//
// MessageText:
//
//  An instance of the service is already running.
//
C_Define ERROR_SERVICE_ALREADY_RUNNING    1056

//
// MessageId: ERROR_INVALID_SERVICE_ACCOUNT
//
// MessageText:
//
//  The account name is invalid or does not exist.
//
C_Define ERROR_INVALID_SERVICE_ACCOUNT    1057

//
// MessageId: ERROR_SERVICE_DISABLED
//
// MessageText:
//
//  The service cannot be started, either because it is disabled or because
//  it has no enabled devices associated with it.
//
C_Define ERROR_SERVICE_DISABLED           1058

//
// MessageId: ERROR_CIRCULAR_DEPENDENCY
//
// MessageText:
//
//  Circular service dependency was specified.
//
C_Define ERROR_CIRCULAR_DEPENDENCY        1059

//
// MessageId: ERROR_SERVICE_DOES_NOT_EXIST
//
// MessageText:
//
//  The specified service does not exist as an installed service.
//
C_Define ERROR_SERVICE_DOES_NOT_EXIST     1060

//
// MessageId: ERROR_SERVICE_CANNOT_ACCEPT_CTRL
//
// MessageText:
//
//  The service cannot accept control messages at this time.
//
C_Define ERROR_SERVICE_CANNOT_ACCEPT_CTRL 1061

//
// MessageId: ERROR_SERVICE_NOT_ACTIVE
//
// MessageText:
//
//  The service has not been started.
//
C_Define ERROR_SERVICE_NOT_ACTIVE         1062

//
// MessageId: ERROR_FAILED_SERVICE_CONTROLLER_CONNECT
//
// MessageText:
//
//  The service process could not connect to the service controller.
//
C_Define ERROR_FAILED_SERVICE_CONTROLLER_CONNECT 1063

//
// MessageId: ERROR_EXCEPTION_IN_SERVICE
//
// MessageText:
//
//  An exception occurred in the service when handling the control request.
//
C_Define ERROR_EXCEPTION_IN_SERVICE       1064

//
// MessageId: ERROR_DATABASE_DOES_NOT_EXIST
//
// MessageText:
//
//  The database specified does not exist.
//
C_Define ERROR_DATABASE_DOES_NOT_EXIST    1065

//
// MessageId: ERROR_SERVICE_SPECIFIC_ERROR
//
// MessageText:
//
//  The service has returned a service-specific error code.
//
C_Define ERROR_SERVICE_SPECIFIC_ERROR     1066

//
// MessageId: ERROR_PROCESS_ABORTED
//
// MessageText:
//
//  The process terminated unexpectedly.
//
C_Define ERROR_PROCESS_ABORTED            1067

//
// MessageId: ERROR_SERVICE_DEPENDENCY_FAIL
//
// MessageText:
//
//  The dependency service or group failed to start.
//
C_Define ERROR_SERVICE_DEPENDENCY_FAIL    1068

//
// MessageId: ERROR_SERVICE_LOGON_FAILED
//
// MessageText:
//
//  The service did not start due to a logon failure.
//
C_Define ERROR_SERVICE_LOGON_FAILED       1069

//
// MessageId: ERROR_SERVICE_START_HANG
//
// MessageText:
//
//  After starting, the service hung in a start-pending state.
//
C_Define ERROR_SERVICE_START_HANG         1070

//
// MessageId: ERROR_INVALID_SERVICE_LOCK
//
// MessageText:
//
//  The specified service database lock is invalid.
//
C_Define ERROR_INVALID_SERVICE_LOCK       1071

//
// MessageId: ERROR_SERVICE_MARKED_FOR_DELETE
//
// MessageText:
//
//  The specified service has been marked for deletion.
//
C_Define ERROR_SERVICE_MARKED_FOR_DELETE  1072

//
// MessageId: ERROR_SERVICE_EXISTS
//
// MessageText:
//
//  The specified service already exists.
//
C_Define ERROR_SERVICE_EXISTS             1073

//
// MessageId: ERROR_ALREADY_RUNNING_LKG
//
// MessageText:
//
//  The system is currently running with the last-known-good configuration.
//
C_Define ERROR_ALREADY_RUNNING_LKG        1074

//
// MessageId: ERROR_SERVICE_DEPENDENCY_DELETED
//
// MessageText:
//
//  The dependency service does not exist or has been marked for
//  deletion.
//
C_Define ERROR_SERVICE_DEPENDENCY_DELETED 1075

//
// MessageId: ERROR_BOOT_ALREADY_ACCEPTED
//
// MessageText:
//
//  The current boot has already been accepted for use as the
//  last-known-good control set.
//
C_Define ERROR_BOOT_ALREADY_ACCEPTED      1076

//
// MessageId: ERROR_SERVICE_NEVER_STARTED
//
// MessageText:
//
//  No attempts to start the service have been made since the last boot.
//
C_Define ERROR_SERVICE_NEVER_STARTED      1077

//
// MessageId: ERROR_DUPLICATE_SERVICE_NAME
//
// MessageText:
//
//  The name is already in use as either a service name or a service display
//  name.
//
C_Define ERROR_DUPLICATE_SERVICE_NAME     1078

//
// MessageId: ERROR_DIFFERENT_SERVICE_ACCOUNT
//
// MessageText:
//
//  The account specified for this service is different from the account
//  specified for other services running in the same process.
//
C_Define ERROR_DIFFERENT_SERVICE_ACCOUNT  1079

//
// MessageId: ERROR_CANNOT_DETECT_DRIVER_FAILURE
//
// MessageText:
//
//  Failure actions can only be set for Win32 services, not for drivers.
//
C_Define ERROR_CANNOT_DETECT_DRIVER_FAILURE 1080

//
// MessageId: ERROR_CANNOT_DETECT_PROCESS_ABORT
//
// MessageText:
//
//  This service runs in the same process as the service control manager.
//  Therefore, the service control manager cannot take action if this
//  service's process terminates unexpectedly.
//
C_Define ERROR_CANNOT_DETECT_PROCESS_ABORT 1081

//
// MessageId: ERROR_NO_RECOVERY_PROGRAM
//
// MessageText:
//
//  No recovery program has been configured for this service.
//
C_Define ERROR_NO_RECOVERY_PROGRAM        1082

//
// MessageId: ERROR_END_OF_MEDIA
//
// MessageText:
//
//  The physical end of the tape has been reached.
//
C_Define ERROR_END_OF_MEDIA               1100

//
// MessageId: ERROR_FILEMARK_DETECTED
//
// MessageText:
//
//  A tape access reached a filemark.
//
C_Define ERROR_FILEMARK_DETECTED          1101

//
// MessageId: ERROR_BEGINNING_OF_MEDIA
//
// MessageText:
//
//  The beginning of the tape or a partition was encountered.
//
C_Define ERROR_BEGINNING_OF_MEDIA         1102

//
// MessageId: ERROR_SETMARK_DETECTED
//
// MessageText:
//
//  A tape access reached the end of a set of files.
//
C_Define ERROR_SETMARK_DETECTED           1103

//
// MessageId: ERROR_NO_DATA_DETECTED
//
// MessageText:
//
//  No more data is on the tape.
//
C_Define ERROR_NO_DATA_DETECTED           1104

//
// MessageId: ERROR_PARTITION_FAILURE
//
// MessageText:
//
//  Tape could not be partitioned.
//
C_Define ERROR_PARTITION_FAILURE          1105

//
// MessageId: ERROR_INVALID_BLOCK_LENGTH
//
// MessageText:
//
//  When accessing a new tape of a multivolume partition, the current
//  blocksize is incorrect.
//
C_Define ERROR_INVALID_BLOCK_LENGTH       1106

//
// MessageId: ERROR_DEVICE_NOT_PARTITIONED
//
// MessageText:
//
//  Tape partition information could not be found when loading a tape.
//
C_Define ERROR_DEVICE_NOT_PARTITIONED     1107

//
// MessageId: ERROR_UNABLE_TO_LOCK_MEDIA
//
// MessageText:
//
//  Unable to lock the media eject mechanism.
//
C_Define ERROR_UNABLE_TO_LOCK_MEDIA       1108

//
// MessageId: ERROR_UNABLE_TO_UNLOAD_MEDIA
//
// MessageText:
//
//  Unable to unload the media.
//
C_Define ERROR_UNABLE_TO_UNLOAD_MEDIA     1109

//
// MessageId: ERROR_MEDIA_CHANGED
//
// MessageText:
//
//  The media in the drive may have changed.
//
C_Define ERROR_MEDIA_CHANGED              1110

//
// MessageId: ERROR_BUS_RESET
//
// MessageText:
//
//  The I/O bus was reset.
//
C_Define ERROR_BUS_RESET                  1111

//
// MessageId: ERROR_NO_MEDIA_IN_DRIVE
//
// MessageText:
//
//  No media in drive.
//
C_Define ERROR_NO_MEDIA_IN_DRIVE          1112

//
// MessageId: ERROR_NO_UNICODE_TRANSLATION
//
// MessageText:
//
//  No mapping for the Unicode character exists in the target multi-byte code page.
//
C_Define ERROR_NO_UNICODE_TRANSLATION     1113

//
// MessageId: ERROR_DLL_INIT_FAILED
//
// MessageText:
//
//  A dynamic link library (DL initialization routine failed.
//
C_Define ERROR_DLL_INIT_FAILED            1114

//
// MessageId: ERROR_SHUTDOWN_IN_PROGRESS
//
// MessageText:
//
//  A system shutdown is in progress.
//
C_Define ERROR_SHUTDOWN_IN_PROGRESS       1115

//
// MessageId: ERROR_NO_SHUTDOWN_IN_PROGRESS
//
// MessageText:
//
//  Unable to abort the system shutdown because no shutdown was in progress.
//
C_Define ERROR_NO_SHUTDOWN_IN_PROGRESS    1116

//
// MessageId: ERROR_IO_DEVICE
//
// MessageText:
//
//  The request could not be performed because of an I/O device error.
//
C_Define ERROR_IO_DEVICE                  1117

//
// MessageId: ERROR_SERIAL_NO_DEVICE
//
// MessageText:
//
//  No serial device was successfully initialized.  The serial driver will unload.
//
C_Define ERROR_SERIAL_NO_DEVICE           1118

//
// MessageId: ERROR_IRQ_BUSY
//
// MessageText:
//
//  Unable to open a device that was sharing an interrupt request (IRQ 
//  with other devices. At least one other device that uses that IRQ
//  was already opened.
//
C_Define ERROR_IRQ_BUSY                   1119

//
// MessageId: ERROR_MORE_WRITES
//
// MessageText:
//
//  A serial I/O operation was completed by another write to the serial port.
//  (The IOCTL_SERIAL_XOFF_COUNTER reached zero. 
//
C_Define ERROR_MORE_WRITES                1120

//
// MessageId: ERROR_COUNTER_TIMEOUT
//
// MessageText:
//
//  A serial I/O operation completed because the timeout period expired.
//  (The IOCTL_SERIAL_XOFF_COUNTER did not reach zero. 
//
C_Define ERROR_COUNTER_TIMEOUT            1121

//
// MessageId: ERROR_FLOPPY_ID_MARK_NOT_FOUND
//
// MessageText:
//
//  No ID address mark was found on the floppy disk.
//
C_Define ERROR_FLOPPY_ID_MARK_NOT_FOUND   1122

//
// MessageId: ERROR_FLOPPY_WRONG_CYLINDER
//
// MessageText:
//
//  Mismatch between the floppy disk sector ID field and the floppy disk
//  controller track address.
//
C_Define ERROR_FLOPPY_WRONG_CYLINDER      1123

//
// MessageId: ERROR_FLOPPY_UNKNOWN_ERROR
//
// MessageText:
//
//  The floppy disk controller reported an error that is not recognized
//  by the floppy disk driver.
//
C_Define ERROR_FLOPPY_UNKNOWN_ERROR       1124

//
// MessageId: ERROR_FLOPPY_BAD_REGISTERS
//
// MessageText:
//
//  The floppy disk controller returned inconsistent results in its registers.
//
C_Define ERROR_FLOPPY_BAD_REGISTERS       1125

//
// MessageId: ERROR_DISK_RECALIBRATE_FAILED
//
// MessageText:
//
//  While accessing the hard disk, a recalibrate operation failed, even after retries.
//
C_Define ERROR_DISK_RECALIBRATE_FAILED    1126

//
// MessageId: ERROR_DISK_OPERATION_FAILED
//
// MessageText:
//
//  While accessing the hard disk, a disk operation failed even after retries.
//
C_Define ERROR_DISK_OPERATION_FAILED      1127

//
// MessageId: ERROR_DISK_RESET_FAILED
//
// MessageText:
//
//  While accessing the hard disk, a disk controller reset was needed, but
//  even that failed.
//
C_Define ERROR_DISK_RESET_FAILED          1128

//
// MessageId: ERROR_EOM_OVERFLOW
//
// MessageText:
//
//  Physical end of tape encountered.
//
C_Define ERROR_EOM_OVERFLOW               1129

//
// MessageId: ERROR_NOT_ENOUGH_SERVER_MEMORY
//
// MessageText:
//
//  Not enough server storage is available to process this command.
//
C_Define ERROR_NOT_ENOUGH_SERVER_MEMORY   1130

//
// MessageId: ERROR_POSSIBLE_DEADLOCK
//
// MessageText:
//
//  A potential deadlock condition has been detected.
//
C_Define ERROR_POSSIBLE_DEADLOCK          1131

//
// MessageId: ERROR_MAPPED_ALIGNMENT
//
// MessageText:
//
//  The base address or the file offset specified does not have the proper
//  alignment.
//
C_Define ERROR_MAPPED_ALIGNMENT           1132

//
// MessageId: ERROR_SET_POWER_STATE_VETOED
//
// MessageText:
//
//  An attempt to change the system power state was vetoed by another
//  application or driver.
//
C_Define ERROR_SET_POWER_STATE_VETOED     1140

//
// MessageId: ERROR_SET_POWER_STATE_FAILED
//
// MessageText:
//
//  The system BIOS failed an attempt to change the system power state.
//
C_Define ERROR_SET_POWER_STATE_FAILED     1141

//
// MessageId: ERROR_TOO_MANY_LINKS
//
// MessageText:
//
//  An attempt was made to create more links on a file than
//  the file system supports.
//
C_Define ERROR_TOO_MANY_LINKS             1142

//
// MessageId: ERROR_OLD_WIN_VERSION
//
// MessageText:
//
//  The specified program requires a newer version of Windows.
//
C_Define ERROR_OLD_WIN_VERSION            1150

//
// MessageId: ERROR_APP_WRONG_OS
//
// MessageText:
//
//  The specified program is not a Windows or MS-DOS program.
//
C_Define ERROR_APP_WRONG_OS               1151

//
// MessageId: ERROR_SINGLE_INSTANCE_APP
//
// MessageText:
//
//  Cannot start more than one instance of the specified program.
//
C_Define ERROR_SINGLE_INSTANCE_APP        1152

//
// MessageId: ERROR_RMODE_APP
//
// MessageText:
//
//  The specified program was written for an earlier version of Windows.
//
C_Define ERROR_RMODE_APP                  1153

//
// MessageId: ERROR_INVALID_DLL
//
// MessageText:
//
//  One of the library files needed to run this application is damaged.
//
C_Define ERROR_INVALID_DLL                1154

//
// MessageId: ERROR_NO_ASSOCIATION
//
// MessageText:
//
//  No application is associated with the specified file for this operation.
//
C_Define ERROR_NO_ASSOCIATION             1155

//
// MessageId: ERROR_DDE_FAIL
//
// MessageText:
//
//  An error occurred in sending the command to the application.
//
C_Define ERROR_DDE_FAIL                   1156

//
// MessageId: ERROR_DLL_NOT_FOUND
//
// MessageText:
//
//  One of the library files needed to run this application cannot be found.
//
C_Define ERROR_DLL_NOT_FOUND              1157

//
// MessageId: ERROR_NO_MORE_USER_HANDLES
//
// MessageText:
//
//  The current process has used all of its system allowance of handles for Window Manager objects.
//
C_Define ERROR_NO_MORE_USER_HANDLES       1158

//
// MessageId: ERROR_MESSAGE_SYNC_ONLY
//
// MessageText:
//
//  The message can be used only with synchronous operations.
//
C_Define ERROR_MESSAGE_SYNC_ONLY          1159

//
// MessageId: ERROR_SOURCE_ELEMENT_EMPTY
//
// MessageText:
//
//  The indicated source element has no media.
//
C_Define ERROR_SOURCE_ELEMENT_EMPTY       1160

//
// MessageId: ERROR_DESTINATION_ELEMENT_FULL
//
// MessageText:
//
//  The indicated destination element already contains media.
//
C_Define ERROR_DESTINATION_ELEMENT_FULL   1161

//
// MessageId: ERROR_ILLEGAL_ELEMENT_ADDRESS
//
// MessageText:
//
//  The indicated element does not exist.
//
C_Define ERROR_ILLEGAL_ELEMENT_ADDRESS    1162

//
// MessageId: ERROR_MAGAZINE_NOT_PRESENT
//
// MessageText:
//
//  The indicated element is part of a magazine that is not present.
//
C_Define ERROR_MAGAZINE_NOT_PRESENT       1163

//
// MessageId: ERROR_DEVICE_REINITIALIZATION_NEEDED
//
// MessageText:
//
//  The indicated device requires reinitialization due to hardware errors.
//
C_Define ERROR_DEVICE_REINITIALIZATION_NEEDED 1164    // dderror

//
// MessageId: ERROR_DEVICE_REQUIRES_CLEANING
//
// MessageText:
//
//  The device has indicated that cleaning is required before further operations are attempted.
//
C_Define ERROR_DEVICE_REQUIRES_CLEANING   1165

//
// MessageId: ERROR_DEVICE_DOOR_OPEN
//
// MessageText:
//
//  The device has indicated that its door is open.
//
C_Define ERROR_DEVICE_DOOR_OPEN           1166

//
// MessageId: ERROR_DEVICE_NOT_CONNECTED
//
// MessageText:
//
//  The device is not connected.
//
C_Define ERROR_DEVICE_NOT_CONNECTED       1167

//
// MessageId: ERROR_NOT_FOUND
//
// MessageText:
//
//  Element not found.
//
C_Define ERROR_NOT_FOUND                  1168

//
// MessageId: ERROR_NO_MATCH
//
// MessageText:
//
//  There was no match for the specified key in the index.
//
C_Define ERROR_NO_MATCH                   1169

//
// MessageId: ERROR_SET_NOT_FOUND
//
// MessageText:
//
//  The property set specified does not exist on the object.
//
C_Define ERROR_SET_NOT_FOUND              1170

//
// MessageId: ERROR_POINT_NOT_FOUND
//
// MessageText:
//
//  The point passed to GetMouseMovePoints is not in the buffer.
//
C_Define ERROR_POINT_NOT_FOUND            1171

//
// MessageId: ERROR_NO_TRACKING_SERVICE
//
// MessageText:
//
//  The tracking (workstation  service is not running.
//
C_Define ERROR_NO_TRACKING_SERVICE        1172

//
// MessageId: ERROR_NO_VOLUME_ID
//
// MessageText:
//
//  The Volume ID could not be found.
//
C_Define ERROR_NO_VOLUME_ID               1173




///////////////////////////
//                       //
// Winnet32 Status Codes //
//                       //
///////////////////////////


//
// MessageId: ERROR_CONNECTED_OTHER_PASSWORD
//
// MessageText:
//
//  The network connection was made successfully, but the user had to be prompted
//  for a password other than the one originally specified.
//
C_Define ERROR_CONNECTED_OTHER_PASSWORD   2108

//
// MessageId: ERROR_BAD_USERNAME
//
// MessageText:
//
//  The specified username is invalid.
//
C_Define ERROR_BAD_USERNAME               2202

//
// MessageId: ERROR_NOT_CONNECTED
//
// MessageText:
//
//  This network connection does not exist.
//
C_Define ERROR_NOT_CONNECTED              2250

//
// MessageId: ERROR_OPEN_FILES
//
// MessageText:
//
//  This network connection has files open or requests pending.
//
C_Define ERROR_OPEN_FILES                 2401

//
// MessageId: ERROR_ACTIVE_CONNECTIONS
//
// MessageText:
//
//  Active connections still exist.
//
C_Define ERROR_ACTIVE_CONNECTIONS         2402

//
// MessageId: ERROR_DEVICE_IN_USE
//
// MessageText:
//
//  The device is in use by an active process and cannot be disconnected.
//
C_Define ERROR_DEVICE_IN_USE              2404

//
// MessageId: ERROR_BAD_DEVICE
//
// MessageText:
//
//  The specified device name is invalid.
//
C_Define ERROR_BAD_DEVICE                 1200

//
// MessageId: ERROR_CONNECTION_UNAVAIL
//
// MessageText:
//
//  The device is not currently connected but it is a remembered connection.
//
C_Define ERROR_CONNECTION_UNAVAIL         1201

//
// MessageId: ERROR_DEVICE_ALREADY_REMEMBERED
//
// MessageText:
//
//  An attempt was made to remember a device that had previously been remembered.
//
C_Define ERROR_DEVICE_ALREADY_REMEMBERED  1202

//
// MessageId: ERROR_NO_NET_OR_BAD_PATH
//
// MessageText:
//
//  No network provider accepted the given network path.
//
C_Define ERROR_NO_NET_OR_BAD_PATH         1203

//
// MessageId: ERROR_BAD_PROVIDER
//
// MessageText:
//
//  The specified network provider name is invalid.
//
C_Define ERROR_BAD_PROVIDER               1204

//
// MessageId: ERROR_CANNOT_OPEN_PROFILE
//
// MessageText:
//
//  Unable to open the network connection profile.
//
C_Define ERROR_CANNOT_OPEN_PROFILE        1205

//
// MessageId: ERROR_BAD_PROFILE
//
// MessageText:
//
//  The network connection profile is corrupted.
//
C_Define ERROR_BAD_PROFILE                1206

//
// MessageId: ERROR_NOT_CONTAINER
//
// MessageText:
//
//  Cannot enumerate a noncontainer.
//
C_Define ERROR_NOT_CONTAINER              1207

//
// MessageId: ERROR_EXTENDED_ERROR
//
// MessageText:
//
//  An extended error has occurred.
//
C_Define ERROR_EXTENDED_ERROR             1208

//
// MessageId: ERROR_INVALID_GROUPNAME
//
// MessageText:
//
//  The format of the specified group name is invalid.
//
C_Define ERROR_INVALID_GROUPNAME          1209

//
// MessageId: ERROR_INVALID_COMPUTERNAME
//
// MessageText:
//
//  The format of the specified computer name is invalid.
//
C_Define ERROR_INVALID_COMPUTERNAME       1210

//
// MessageId: ERROR_INVALID_EVENTNAME
//
// MessageText:
//
//  The format of the specified event name is invalid.
//
C_Define ERROR_INVALID_EVENTNAME          1211

//
// MessageId: ERROR_INVALID_DOMAINNAME
//
// MessageText:
//
//  The format of the specified domain name is invalid.
//
C_Define ERROR_INVALID_DOMAINNAME         1212

//
// MessageId: ERROR_INVALID_SERVICENAME
//
// MessageText:
//
//  The format of the specified service name is invalid.
//
C_Define ERROR_INVALID_SERVICENAME        1213

//
// MessageId: ERROR_INVALID_NETNAME
//
// MessageText:
//
//  The format of the specified network name is invalid.
//
C_Define ERROR_INVALID_NETNAME            1214

//
// MessageId: ERROR_INVALID_SHARENAME
//
// MessageText:
//
//  The format of the specified share name is invalid.
//
C_Define ERROR_INVALID_SHARENAME          1215

//
// MessageId: ERROR_INVALID_PASSWORDNAME
//
// MessageText:
//
//  The format of the specified password is invalid.
//
C_Define ERROR_INVALID_PASSWORDNAME       1216

//
// MessageId: ERROR_INVALID_MESSAGENAME
//
// MessageText:
//
//  The format of the specified message name is invalid.
//
C_Define ERROR_INVALID_MESSAGENAME        1217

//
// MessageId: ERROR_INVALID_MESSAGEDEST
//
// MessageText:
//
//  The format of the specified message destination is invalid.
//
C_Define ERROR_INVALID_MESSAGEDEST        1218

//
// MessageId: ERROR_SESSION_CREDENTIAL_CONFLICT
//
// MessageText:
//
//  The credentials supplied conflict with an existing set of credentials.
//
C_Define ERROR_SESSION_CREDENTIAL_CONFLICT 1219

//
// MessageId: ERROR_REMOTE_SESSION_LIMIT_EXCEEDED
//
// MessageText:
//
//  An attempt was made to establish a session to a network server, but there
//  are already too many sessions established to that server.
//
C_Define ERROR_REMOTE_SESSION_LIMIT_EXCEEDED 1220

//
// MessageId: ERROR_DUP_DOMAINNAME
//
// MessageText:
//
//  The workgroup or domain name is already in use by another computer on the
//  network.
//
C_Define ERROR_DUP_DOMAINNAME             1221

//
// MessageId: ERROR_NO_NETWORK
//
// MessageText:
//
//  The network is not present or not started.
//
C_Define ERROR_NO_NETWORK                 1222

//
// MessageId: ERROR_CANCELLED
//
// MessageText:
//
//  The operation was canceled by the user.
//
C_Define ERROR_CANCELLED                  1223

//
// MessageId: ERROR_USER_MAPPED_FILE
//
// MessageText:
//
//  The requested operation cannot be performed on a file with a user-mapped section open.
//
C_Define ERROR_USER_MAPPED_FILE           1224

//
// MessageId: ERROR_CONNECTION_REFUSED
//
// MessageText:
//
//  The remote system refused the network connection.
//
C_Define ERROR_CONNECTION_REFUSED         1225

//
// MessageId: ERROR_GRACEFUL_DISCONNECT
//
// MessageText:
//
//  The network connection was gracefully closed.
//
C_Define ERROR_GRACEFUL_DISCONNECT        1226

//
// MessageId: ERROR_ADDRESS_ALREADY_ASSOCIATED
//
// MessageText:
//
//  The network transport endpoint already has an address associated with it.
//
C_Define ERROR_ADDRESS_ALREADY_ASSOCIATED 1227

//
// MessageId: ERROR_ADDRESS_NOT_ASSOCIATED
//
// MessageText:
//
//  An address has not yet been associated with the network endpoint.
//
C_Define ERROR_ADDRESS_NOT_ASSOCIATED     1228

//
// MessageId: ERROR_CONNECTION_INVALID
//
// MessageText:
//
//  An operation was attempted on a nonexistent network connection.
//
C_Define ERROR_CONNECTION_INVALID         1229

//
// MessageId: ERROR_CONNECTION_ACTIVE
//
// MessageText:
//
//  An invalid operation was attempted on an active network connection.
//
C_Define ERROR_CONNECTION_ACTIVE          1230

//
// MessageId: ERROR_NETWORK_UNREACHABLE
//
// MessageText:
//
//  The remote network is not reachable by the transport.
//
C_Define ERROR_NETWORK_UNREACHABLE        1231

//
// MessageId: ERROR_HOST_UNREACHABLE
//
// MessageText:
//
//  The remote system is not reachable by the transport.
//
C_Define ERROR_HOST_UNREACHABLE           1232

//
// MessageId: ERROR_PROTOCOL_UNREACHABLE
//
// MessageText:
//
//  The remote system does not support the transport protocol.
//
C_Define ERROR_PROTOCOL_UNREACHABLE       1233

//
// MessageId: ERROR_PORT_UNREACHABLE
//
// MessageText:
//
//  No service is operating at the destination network endpoint
//  on the remote system.
//
C_Define ERROR_PORT_UNREACHABLE           1234

//
// MessageId: ERROR_REQUEST_ABORTED
//
// MessageText:
//
//  The request was aborted.
//
C_Define ERROR_REQUEST_ABORTED            1235

//
// MessageId: ERROR_CONNECTION_ABORTED
//
// MessageText:
//
//  The network connection was aborted by the local system.
//
C_Define ERROR_CONNECTION_ABORTED         1236

//
// MessageId: ERROR_RETRY
//
// MessageText:
//
//  The operation could not be completed.  A retry should be performed.
//
C_Define ERROR_RETRY                      1237

//
// MessageId: ERROR_CONNECTION_COUNT_LIMIT
//
// MessageText:
//
//  A connection to the server could not be made because the limit on the number of
//  concurrent connections for this account has been reached.
//
C_Define ERROR_CONNECTION_COUNT_LIMIT     1238

//
// MessageId: ERROR_LOGIN_TIME_RESTRICTION
//
// MessageText:
//
//  Attempting to log in during an unauthorized time of day for this account.
//
C_Define ERROR_LOGIN_TIME_RESTRICTION     1239

//
// MessageId: ERROR_LOGIN_WKSTA_RESTRICTION
//
// MessageText:
//
//  The account is not authorized to log in from this station.
//
C_Define ERROR_LOGIN_WKSTA_RESTRICTION    1240

//
// MessageId: ERROR_INCORRECT_ADDRESS
//
// MessageText:
//
//  The network address could not be used for the operation requested.
//
C_Define ERROR_INCORRECT_ADDRESS          1241

//
// MessageId: ERROR_ALREADY_REGISTERED
//
// MessageText:
//
//  The service is already registered.
//
C_Define ERROR_ALREADY_REGISTERED         1242

//
// MessageId: ERROR_SERVICE_NOT_FOUND
//
// MessageText:
//
//  The specified service does not exist.
//
C_Define ERROR_SERVICE_NOT_FOUND          1243

//
// MessageId: ERROR_NOT_AUTHENTICATED
//
// MessageText:
//
//  The operation being requested was not performed because the user
//  has not been authenticated.
//
C_Define ERROR_NOT_AUTHENTICATED          1244

//
// MessageId: ERROR_NOT_LOGGED_ON
//
// MessageText:
//
//  The operation being requested was not performed because the user
//  has not logged on to the network.
//  The specified service does not exist.
//
C_Define ERROR_NOT_LOGGED_ON              1245

//
// MessageId: ERROR_CONTINUE
//
// MessageText:
//
//  Continue with work in progress.
//
C_Define ERROR_CONTINUE                   1246

//
// MessageId: ERROR_ALREADY_INITIALIZED
//
// MessageText:
//
//  An attempt was made to perform an initialization operation when
//  initialization has already been completed.
//
C_Define ERROR_ALREADY_INITIALIZED        1247

//
// MessageId: ERROR_NO_MORE_DEVICES
//
// MessageText:
//
//  No more local devices.
//
C_Define ERROR_NO_MORE_DEVICES            1248

//
// MessageId: ERROR_NO_SUCH_SITE
//
// MessageText:
//
//  The specified site does not exist.
//
C_Define ERROR_NO_SUCH_SITE               1249

//
// MessageId: ERROR_DOMAIN_CONTROLLER_EXISTS
//
// MessageText:
//
//  A domain controller with the specified name already exists.
//
C_Define ERROR_DOMAIN_CONTROLLER_EXISTS   1250

//
// MessageId: ERROR_DS_NOT_INSTALLED
//
// MessageText:
//
//  An error occurred while installing the Windows NT directory service. Please view the event log for more information.
//
C_Define ERROR_DS_NOT_INSTALLED           1251




///////////////////////////
//                       //
// Security Status Codes //
//                       //
///////////////////////////


//
// MessageId: ERROR_NOT_ALL_ASSIGNED
//
// MessageText:
//
//  Not all privileges referenced are assigned to the caller.
//
C_Define ERROR_NOT_ALL_ASSIGNED           1300

//
// MessageId: ERROR_SOME_NOT_MAPPED
//
// MessageText:
//
//  Some mapping between account names and security IDs was not done.
//
C_Define ERROR_SOME_NOT_MAPPED            1301

//
// MessageId: ERROR_NO_QUOTAS_FOR_ACCOUNT
//
// MessageText:
//
//  No system quota limits are specifically set for this account.
//
C_Define ERROR_NO_QUOTAS_FOR_ACCOUNT      1302

//
// MessageId: ERROR_LOCAL_USER_SESSION_KEY
//
// MessageText:
//
//  No encryption key is available.  A well-known encryption key was returned.
//
C_Define ERROR_LOCAL_USER_SESSION_KEY     1303

//
// MessageId: ERROR_NULL_LM_PASSWORD
//
// MessageText:
//
//  The Windows NT password is too complex to be converted to a LAN Manager
//  password.  The LAN Manager password returned is a NULL string.
//
C_Define ERROR_NULL_LM_PASSWORD           1304

//
// MessageId: ERROR_UNKNOWN_REVISION
//
// MessageText:
//
//  The revision level is unknown.
//
C_Define ERROR_UNKNOWN_REVISION           1305

//
// MessageId: ERROR_REVISION_MISMATCH
//
// MessageText:
//
//  Indicates two revision levels are incompatible.
//
C_Define ERROR_REVISION_MISMATCH          1306

//
// MessageId: ERROR_INVALID_OWNER
//
// MessageText:
//
//  This security ID may not be assigned as the owner of this object.
//
C_Define ERROR_INVALID_OWNER              1307

//
// MessageId: ERROR_INVALID_PRIMARY_GROUP
//
// MessageText:
//
//  This security ID may not be assigned as the primary group of an object.
//
C_Define ERROR_INVALID_PRIMARY_GROUP      1308

//
// MessageId: ERROR_NO_IMPERSONATION_TOKEN
//
// MessageText:
//
//  An attempt has been made to operate on an impersonation token
//  by a thread that is not currently impersonating a client.
//
C_Define ERROR_NO_IMPERSONATION_TOKEN     1309

//
// MessageId: ERROR_CANT_DISABLE_MANDATORY
//
// MessageText:
//
//  The group may not be disabled.
//
C_Define ERROR_CANT_DISABLE_MANDATORY     1310

//
// MessageId: ERROR_NO_LOGON_SERVERS
//
// MessageText:
//
//  There are currently no logon servers available to service the logon
//  request.
//
C_Define ERROR_NO_LOGON_SERVERS           1311

//
// MessageId: ERROR_NO_SUCH_LOGON_SESSION
//
// MessageText:
//
//   A specified logon session does not exist.  It may already have
//   been terminated.
//
C_Define ERROR_NO_SUCH_LOGON_SESSION      1312

//
// MessageId: ERROR_NO_SUCH_PRIVILEGE
//
// MessageText:
//
//   A specified privilege does not exist.
//
C_Define ERROR_NO_SUCH_PRIVILEGE          1313

//
// MessageId: ERROR_PRIVILEGE_NOT_HELD
//
// MessageText:
//
//   A required privilege is not held by the client.
//
C_Define ERROR_PRIVILEGE_NOT_HELD         1314

//
// MessageId: ERROR_INVALID_ACCOUNT_NAME
//
// MessageText:
//
//  The name provided is not a properly formed account name.
//
C_Define ERROR_INVALID_ACCOUNT_NAME       1315

//
// MessageId: ERROR_USER_EXISTS
//
// MessageText:
//
//  The specified user already exists.
//
C_Define ERROR_USER_EXISTS                1316

//
// MessageId: ERROR_NO_SUCH_USER
//
// MessageText:
//
//  The specified user does not exist.
//
C_Define ERROR_NO_SUCH_USER               1317

//
// MessageId: ERROR_GROUP_EXISTS
//
// MessageText:
//
//  The specified group already exists.
//
C_Define ERROR_GROUP_EXISTS               1318

//
// MessageId: ERROR_NO_SUCH_GROUP
//
// MessageText:
//
//  The specified group does not exist.
//
C_Define ERROR_NO_SUCH_GROUP              1319

//
// MessageId: ERROR_MEMBER_IN_GROUP
//
// MessageText:
//
//  Either the specified user account is already a member of the specified
//  group, or the specified group cannot be deleted because it contains
//  a member.
//
C_Define ERROR_MEMBER_IN_GROUP            1320

//
// MessageId: ERROR_MEMBER_NOT_IN_GROUP
//
// MessageText:
//
//  The specified user account is not a member of the specified group account.
//
C_Define ERROR_MEMBER_NOT_IN_GROUP        1321

//
// MessageId: ERROR_LAST_ADMIN
//
// MessageText:
//
//  The last remaining administration account cannot be disabled
//  or deleted.
//
C_Define ERROR_LAST_ADMIN                 1322

//
// MessageId: ERROR_WRONG_PASSWORD
//
// MessageText:
//
//  Unable to update the password.  The value provided as the current
//  password is incorrect.
//
C_Define ERROR_WRONG_PASSWORD             1323

//
// MessageId: ERROR_ILL_FORMED_PASSWORD
//
// MessageText:
//
//  Unable to update the password.  The value provided for the new password
//  contains values that are not allowed in passwords.
//
C_Define ERROR_ILL_FORMED_PASSWORD        1324

//
// MessageId: ERROR_PASSWORD_RESTRICTION
//
// MessageText:
//
//  Unable to update the password because a password update rule has been
//  violated.
//
C_Define ERROR_PASSWORD_RESTRICTION       1325

//
// MessageId: ERROR_LOGON_FAILURE
//
// MessageText:
//
//  Logon failure: unknown user name or bad password.
//
C_Define ERROR_LOGON_FAILURE              1326

//
// MessageId: ERROR_ACCOUNT_RESTRICTION
//
// MessageText:
//
//  Logon failure: user account restriction.
//
C_Define ERROR_ACCOUNT_RESTRICTION        1327

//
// MessageId: ERROR_INVALID_LOGON_HOURS
//
// MessageText:
//
//  Logon failure: account logon time restriction violation.
//
C_Define ERROR_INVALID_LOGON_HOURS        1328

//
// MessageId: ERROR_INVALID_WORKSTATION
//
// MessageText:
//
//  Logon failure: user not allowed to log on to this computer.
//
C_Define ERROR_INVALID_WORKSTATION        1329

//
// MessageId: ERROR_PASSWORD_EXPIRED
//
// MessageText:
//
//  Logon failure: the specified account password has expired.
//
C_Define ERROR_PASSWORD_EXPIRED           1330

//
// MessageId: ERROR_ACCOUNT_DISABLED
//
// MessageText:
//
//  Logon failure: account currently disabled.
//
C_Define ERROR_ACCOUNT_DISABLED           1331

//
// MessageId: ERROR_NONE_MAPPED
//
// MessageText:
//
//  No mapping between account names and security IDs was done.
//
C_Define ERROR_NONE_MAPPED                1332

//
// MessageId: ERROR_TOO_MANY_LUIDS_REQUESTED
//
// MessageText:
//
//  Too many local user identifiers (LUIDs  were requested at one time.
//
C_Define ERROR_TOO_MANY_LUIDS_REQUESTED   1333

//
// MessageId: ERROR_LUIDS_EXHAUSTED
//
// MessageText:
//
//  No more local user identifiers (LUIDs  are available.
//
C_Define ERROR_LUIDS_EXHAUSTED            1334

//
// MessageId: ERROR_INVALID_SUB_AUTHORITY
//
// MessageText:
//
//  The subauthority part of a security ID is invalid for this particular use.
//
C_Define ERROR_INVALID_SUB_AUTHORITY      1335

//
// MessageId: ERROR_INVALID_ACL
//
// MessageText:
//
//  The access control list (AC structure is invalid.
//
C_Define ERROR_INVALID_ACL                1336

//
// MessageId: ERROR_INVALID_SID
//
// MessageText:
//
//  The security ID structure is invalid.
//
C_Define ERROR_INVALID_SID                1337

//
// MessageId: ERROR_INVALID_SECURITY_DESCR
//
// MessageText:
//
//  The security descriptor structure is invalid.
//
C_Define ERROR_INVALID_SECURITY_DESCR     1338

//
// MessageId: ERROR_BAD_INHERITANCE_ACL
//
// MessageText:
//
//  The inherited access control list (AC or access control entry (ACE 
//  could not be built.
//
C_Define ERROR_BAD_INHERITANCE_ACL        1340

//
// MessageId: ERROR_SERVER_DISABLED
//
// MessageText:
//
//  The server is currently disabled.
//
C_Define ERROR_SERVER_DISABLED            1341

//
// MessageId: ERROR_SERVER_NOT_DISABLED
//
// MessageText:
//
//  The server is currently enabled.
//
C_Define ERROR_SERVER_NOT_DISABLED        1342

//
// MessageId: ERROR_INVALID_ID_AUTHORITY
//
// MessageText:
//
//  The value provided was an invalid value for an identifier authority.
//
C_Define ERROR_INVALID_ID_AUTHORITY       1343

//
// MessageId: ERROR_ALLOTTED_SPACE_EXCEEDED
//
// MessageText:
//
//  No more memory is available for security information updates.
//
C_Define ERROR_ALLOTTED_SPACE_EXCEEDED    1344

//
// MessageId: ERROR_INVALID_GROUP_ATTRIBUTES
//
// MessageText:
//
//  The specified attributes are invalid, or incompatible with the
//  attributes for the group as a whole.
//
C_Define ERROR_INVALID_GROUP_ATTRIBUTES   1345

//
// MessageId: ERROR_BAD_IMPERSONATION_LEVEL
//
// MessageText:
//
//  Either a required impersonation level was not provided, or the
//  provided impersonation level is invalid.
//
C_Define ERROR_BAD_IMPERSONATION_LEVEL    1346

//
// MessageId: ERROR_CANT_OPEN_ANONYMOUS
//
// MessageText:
//
//  Cannot open an anonymous level security token.
//
C_Define ERROR_CANT_OPEN_ANONYMOUS        1347

//
// MessageId: ERROR_BAD_VALIDATION_CLASS
//
// MessageText:
//
//  The validation information class requested was invalid.
//
C_Define ERROR_BAD_VALIDATION_CLASS       1348

//
// MessageId: ERROR_BAD_TOKEN_TYPE
//
// MessageText:
//
//  The type of the token is inappropriate for its attempted use.
//
C_Define ERROR_BAD_TOKEN_TYPE             1349

//
// MessageId: ERROR_NO_SECURITY_ON_OBJECT
//
// MessageText:
//
//  Unable to perform a security operation on an object
//  that has no associated security.
//
C_Define ERROR_NO_SECURITY_ON_OBJECT      1350

//
// MessageId: ERROR_CANT_ACCESS_DOMAIN_INFO
//
// MessageText:
//
//  Indicates a Windows NT Server could not be contacted or that
//  objects within the domain are protected such that necessary
//  information could not be retrieved.
//
C_Define ERROR_CANT_ACCESS_DOMAIN_INFO    1351

//
// MessageId: ERROR_INVALID_SERVER_STATE
//
// MessageText:
//
//  The security account manager (SAM  or local security
//  authority (LSA  server was in the wrong state to perform
//  the security operation.
//
C_Define ERROR_INVALID_SERVER_STATE       1352

//
// MessageId: ERROR_INVALID_DOMAIN_STATE
//
// MessageText:
//
//  The domain was in the wrong state to perform the security operation.
//
C_Define ERROR_INVALID_DOMAIN_STATE       1353

//
// MessageId: ERROR_INVALID_DOMAIN_ROLE
//
// MessageText:
//
//  This operation is only allowed for the Primary Domain Controller of the domain.
//
C_Define ERROR_INVALID_DOMAIN_ROLE        1354

//
// MessageId: ERROR_NO_SUCH_DOMAIN
//
// MessageText:
//
//  The specified domain did not exist.
//
C_Define ERROR_NO_SUCH_DOMAIN             1355

//
// MessageId: ERROR_DOMAIN_EXISTS
//
// MessageText:
//
//  The specified domain already exists.
//
C_Define ERROR_DOMAIN_EXISTS              1356

//
// MessageId: ERROR_DOMAIN_LIMIT_EXCEEDED
//
// MessageText:
//
//  An attempt was made to exceed the limit on the number of domains per server.
//
C_Define ERROR_DOMAIN_LIMIT_EXCEEDED      1357

//
// MessageId: ERROR_INTERNAL_DB_CORRUPTION
//
// MessageText:
//
//  Unable to complete the requested operation because of either a
//  catastrophic media failure or a data structure corruption on the disk.
//
C_Define ERROR_INTERNAL_DB_CORRUPTION     1358

//
// MessageId: ERROR_INTERNAL_ERROR
//
// MessageText:
//
//  The security account database contains an internal inconsistency.
//
C_Define ERROR_INTERNAL_ERROR             1359

//
// MessageId: ERROR_GENERIC_NOT_MAPPED
//
// MessageText:
//
//  Generic access types were contained in an access mask which should
//  already be mapped to nongeneric types.
//
C_Define ERROR_GENERIC_NOT_MAPPED         1360

//
// MessageId: ERROR_BAD_DESCRIPTOR_FORMAT
//
// MessageText:
//
//  A security descriptor is not in the right format (absolute or self-relative .
//
C_Define ERROR_BAD_DESCRIPTOR_FORMAT      1361

//
// MessageId: ERROR_NOT_LOGON_PROCESS
//
// MessageText:
//
//  The requested action is restricted for use by logon processes
//  only.  The calling process has not registered as a logon process.
//
C_Define ERROR_NOT_LOGON_PROCESS          1362

//
// MessageId: ERROR_LOGON_SESSION_EXISTS
//
// MessageText:
//
//  Cannot start a new logon session with an ID that is already in use.
//
C_Define ERROR_LOGON_SESSION_EXISTS       1363

//
// MessageId: ERROR_NO_SUCH_PACKAGE
//
// MessageText:
//
//  A specified authentication package is unknown.
//
C_Define ERROR_NO_SUCH_PACKAGE            1364

//
// MessageId: ERROR_BAD_LOGON_SESSION_STATE
//
// MessageText:
//
//  The logon session is not in a state that is consistent with the
//  requested operation.
//
C_Define ERROR_BAD_LOGON_SESSION_STATE    1365

//
// MessageId: ERROR_LOGON_SESSION_COLLISION
//
// MessageText:
//
//  The logon session ID is already in use.
//
C_Define ERROR_LOGON_SESSION_COLLISION    1366

//
// MessageId: ERROR_INVALID_LOGON_TYPE
//
// MessageText:
//
//  A logon request contained an invalid logon type value.
//
C_Define ERROR_INVALID_LOGON_TYPE         1367

//
// MessageId: ERROR_CANNOT_IMPERSONATE
//
// MessageText:
//
//  Unable to impersonate using a named pipe until data has been read
//  from that pipe.
//
C_Define ERROR_CANNOT_IMPERSONATE         1368

//
// MessageId: ERROR_RXACT_INVALID_STATE
//
// MessageText:
//
//  The transaction state of a registry subtree is incompatible with the
//  requested operation.
//
C_Define ERROR_RXACT_INVALID_STATE        1369

//
// MessageId: ERROR_RXACT_COMMIT_FAILURE
//
// MessageText:
//
//  An internal security database corruption has been encountered.
//
C_Define ERROR_RXACT_COMMIT_FAILURE       1370

//
// MessageId: ERROR_SPECIAL_ACCOUNT
//
// MessageText:
//
//  Cannot perform this operation on built-in accounts.
//
C_Define ERROR_SPECIAL_ACCOUNT            1371

//
// MessageId: ERROR_SPECIAL_GROUP
//
// MessageText:
//
//  Cannot perform this operation on this built-in special group.
//
C_Define ERROR_SPECIAL_GROUP              1372

//
// MessageId: ERROR_SPECIAL_USER
//
// MessageText:
//
//  Cannot perform this operation on this built-in special user.
//
C_Define ERROR_SPECIAL_USER               1373

//
// MessageId: ERROR_MEMBERS_PRIMARY_GROUP
//
// MessageText:
//
//  The user cannot be removed from a group because the group
//  is currently the user's primary group.
//
C_Define ERROR_MEMBERS_PRIMARY_GROUP      1374

//
// MessageId: ERROR_TOKEN_ALREADY_IN_USE
//
// MessageText:
//
//  The token is already in use as a primary token.
//
C_Define ERROR_TOKEN_ALREADY_IN_USE       1375

//
// MessageId: ERROR_NO_SUCH_ALIAS
//
// MessageText:
//
//  The specified local group does not exist.
//
C_Define ERROR_NO_SUCH_ALIAS              1376

//
// MessageId: ERROR_MEMBER_NOT_IN_ALIAS
//
// MessageText:
//
//  The specified account name is not a member of the local group.
//
C_Define ERROR_MEMBER_NOT_IN_ALIAS        1377

//
// MessageId: ERROR_MEMBER_IN_ALIAS
//
// MessageText:
//
//  The specified account name is already a member of the local group.
//
C_Define ERROR_MEMBER_IN_ALIAS            1378

//
// MessageId: ERROR_ALIAS_EXISTS
//
// MessageText:
//
//  The specified local group already exists.
//
C_Define ERROR_ALIAS_EXISTS               1379

//
// MessageId: ERROR_LOGON_NOT_GRANTED
//
// MessageText:
//
//  Logon failure: the user has not been granted the requested
//  logon type at this computer.
//
C_Define ERROR_LOGON_NOT_GRANTED          1380

//
// MessageId: ERROR_TOO_MANY_SECRETS
//
// MessageText:
//
//  The maximum number of secrets that may be stored in a single system has been
//  exceeded.
//
C_Define ERROR_TOO_MANY_SECRETS           1381

//
// MessageId: ERROR_SECRET_TOO_LONG
//
// MessageText:
//
//  The length of a secret exceeds the maximum length allowed.
//
C_Define ERROR_SECRET_TOO_LONG            1382

//
// MessageId: ERROR_INTERNAL_DB_ERROR
//
// MessageText:
//
//  The local security authority database contains an internal inconsistency.
//
C_Define ERROR_INTERNAL_DB_ERROR          1383

//
// MessageId: ERROR_TOO_MANY_CONTEXT_IDS
//
// MessageText:
//
//  During a logon attempt, the user's security context accumulated too many
//  security IDs.
//
C_Define ERROR_TOO_MANY_CONTEXT_IDS       1384

//
// MessageId: ERROR_LOGON_TYPE_NOT_GRANTED
//
// MessageText:
//
//  Logon failure: the user has not been granted the requested logon type
//  at this computer.
//
C_Define ERROR_LOGON_TYPE_NOT_GRANTED     1385

//
// MessageId: ERROR_NT_CROSS_ENCRYPTION_REQUIRED
//
// MessageText:
//
//  A cross-encrypted password is necessary to change a user password.
//
C_Define ERROR_NT_CROSS_ENCRYPTION_REQUIRED 1386

//
// MessageId: ERROR_NO_SUCH_MEMBER
//
// MessageText:
//
//  A new member could not be added to a local group because the member does
//  not exist.
//
C_Define ERROR_NO_SUCH_MEMBER             1387

//
// MessageId: ERROR_INVALID_MEMBER
//
// MessageText:
//
//  A new member could not be added to a local group because the member has the
//  wrong account type.
//
C_Define ERROR_INVALID_MEMBER             1388

//
// MessageId: ERROR_TOO_MANY_SIDS
//
// MessageText:
//
//  Too many security IDs have been specified.
//
C_Define ERROR_TOO_MANY_SIDS              1389

//
// MessageId: ERROR_LM_CROSS_ENCRYPTION_REQUIRED
//
// MessageText:
//
//  A cross-encrypted password is necessary to change this user password.
//
C_Define ERROR_LM_CROSS_ENCRYPTION_REQUIRED 1390

//
// MessageId: ERROR_NO_INHERITANCE
//
// MessageText:
//
//  Indicates an ACL contains no inheritable components.
//
C_Define ERROR_NO_INHERITANCE             1391

//
// MessageId: ERROR_FILE_CORRUPT
//
// MessageText:
//
//  The file or directory is corrupted and unreadable.
//
C_Define ERROR_FILE_CORRUPT               1392

//
// MessageId: ERROR_DISK_CORRUPT
//
// MessageText:
//
//  The disk structure is corrupted and unreadable.
//
C_Define ERROR_DISK_CORRUPT               1393

//
// MessageId: ERROR_NO_USER_SESSION_KEY
//
// MessageText:
//
//  There is no user session key for the specified logon session.
//
C_Define ERROR_NO_USER_SESSION_KEY        1394

//
// MessageId: ERROR_LICENSE_QUOTA_EXCEEDED
//
// MessageText:
//
//  The service being accessed is licensed for a particular number of connections.
//  No more connections can be made to the service at this time
//  because there are already as many connections as the service can accept.
//
C_Define ERROR_LICENSE_QUOTA_EXCEEDED     1395

// End of security error codes



///////////////////////////
//                       //
// WinUser Error Codes   //
//                       //
///////////////////////////


//
// MessageId: ERROR_INVALID_WINDOW_HANDLE
//
// MessageText:
//
//  Invalid window handle.
//
C_Define ERROR_INVALID_WINDOW_HANDLE      1400

//
// MessageId: ERROR_INVALID_MENU_HANDLE
//
// MessageText:
//
//  Invalid menu handle.
//
C_Define ERROR_INVALID_MENU_HANDLE        1401

//
// MessageId: ERROR_INVALID_CURSOR_HANDLE
//
// MessageText:
//
//  Invalid cursor handle.
//
C_Define ERROR_INVALID_CURSOR_HANDLE      1402

//
// MessageId: ERROR_INVALID_ACCEL_HANDLE
//
// MessageText:
//
//  Invalid accelerator table handle.
//
C_Define ERROR_INVALID_ACCEL_HANDLE       1403

//
// MessageId: ERROR_INVALID_HOOK_HANDLE
//
// MessageText:
//
//  Invalid hook handle.
//
C_Define ERROR_INVALID_HOOK_HANDLE        1404

//
// MessageId: ERROR_INVALID_DWP_HANDLE
//
// MessageText:
//
//  Invalid handle to a multiple-window position structure.
//
C_Define ERROR_INVALID_DWP_HANDLE         1405

//
// MessageId: ERROR_TLW_WITH_WSCHILD
//
// MessageText:
//
//  Cannot create a top-level child window.
//
C_Define ERROR_TLW_WITH_WSCHILD           1406

//
// MessageId: ERROR_CANNOT_FIND_WND_CLASS
//
// MessageText:
//
//  Cannot find window class.
//
C_Define ERROR_CANNOT_FIND_WND_CLASS      1407

//
// MessageId: ERROR_WINDOW_OF_OTHER_THREAD
//
// MessageText:
//
//  Invalid window; it belongs to other thread.
//
C_Define ERROR_WINDOW_OF_OTHER_THREAD     1408

//
// MessageId: ERROR_HOTKEY_ALREADY_REGISTERED
//
// MessageText:
//
//  Hot key is already registered.
//
C_Define ERROR_HOTKEY_ALREADY_REGISTERED  1409

//
// MessageId: ERROR_CLASS_ALREADY_EXISTS
//
// MessageText:
//
//  Class already exists.
//
C_Define ERROR_CLASS_ALREADY_EXISTS       1410

//
// MessageId: ERROR_CLASS_DOES_NOT_EXIST
//
// MessageText:
//
//  Class does not exist.
//
C_Define ERROR_CLASS_DOES_NOT_EXIST       1411

//
// MessageId: ERROR_CLASS_HAS_WINDOWS
//
// MessageText:
//
//  Class still has open windows.
//
C_Define ERROR_CLASS_HAS_WINDOWS          1412

//
// MessageId: ERROR_INVALID_INDEX
//
// MessageText:
//
//  Invalid index.
//
C_Define ERROR_INVALID_INDEX              1413

//
// MessageId: ERROR_INVALID_ICON_HANDLE
//
// MessageText:
//
//  Invalid icon handle.
//
C_Define ERROR_INVALID_ICON_HANDLE        1414

//
// MessageId: ERROR_PRIVATE_DIALOG_INDEX
//
// MessageText:
//
//  Using private DIALOG window words.
//
C_Define ERROR_PRIVATE_DIALOG_INDEX       1415

//
// MessageId: ERROR_LISTBOX_ID_NOT_FOUND
//
// MessageText:
//
//  The list box identifier was not found.
//
C_Define ERROR_LISTBOX_ID_NOT_FOUND       1416

//
// MessageId: ERROR_NO_WILDCARD_CHARACTERS
//
// MessageText:
//
//  No wildcards were found.
//
C_Define ERROR_NO_WILDCARD_CHARACTERS     1417

//
// MessageId: ERROR_CLIPBOARD_NOT_OPEN
//
// MessageText:
//
//  Thread does not have a clipboard open.
//
C_Define ERROR_CLIPBOARD_NOT_OPEN         1418

//
// MessageId: ERROR_HOTKEY_NOT_REGISTERED
//
// MessageText:
//
//  Hot key is not registered.
//
C_Define ERROR_HOTKEY_NOT_REGISTERED      1419

//
// MessageId: ERROR_WINDOW_NOT_DIALOG
//
// MessageText:
//
//  The window is not a valid dialog window.
//
C_Define ERROR_WINDOW_NOT_DIALOG          1420

//
// MessageId: ERROR_CONTROL_ID_NOT_FOUND
//
// MessageText:
//
//  Control ID not found.
//
C_Define ERROR_CONTROL_ID_NOT_FOUND       1421

//
// MessageId: ERROR_INVALID_COMBOBOX_MESSAGE
//
// MessageText:
//
//  Invalid message for a combo box because it does not have an edit control.
//
C_Define ERROR_INVALID_COMBOBOX_MESSAGE   1422

//
// MessageId: ERROR_WINDOW_NOT_COMBOBOX
//
// MessageText:
//
//  The window is not a combo box.
//
C_Define ERROR_WINDOW_NOT_COMBOBOX        1423

//
// MessageId: ERROR_INVALID_EDIT_HEIGHT
//
// MessageText:
//
//  Height must be less than 256.
//
C_Define ERROR_INVALID_EDIT_HEIGHT        1424

//
// MessageId: ERROR_DC_NOT_FOUND
//
// MessageText:
//
//  Invalid device context (DC  handle.
//
C_Define ERROR_DC_NOT_FOUND               1425

//
// MessageId: ERROR_INVALID_HOOK_FILTER
//
// MessageText:
//
//  Invalid hook procedure type.
//
C_Define ERROR_INVALID_HOOK_FILTER        1426

//
// MessageId: ERROR_INVALID_FILTER_PROC
//
// MessageText:
//
//  Invalid hook procedure.
//
C_Define ERROR_INVALID_FILTER_PROC        1427

//
// MessageId: ERROR_HOOK_NEEDS_HMOD
//
// MessageText:
//
//  Cannot set nonlocal hook without a module handle.
//
C_Define ERROR_HOOK_NEEDS_HMOD            1428

//
// MessageId: ERROR_GLOBAL_ONLY_HOOK
//
// MessageText:
//
//  This hook procedure can only be set globally.
//
C_Define ERROR_GLOBAL_ONLY_HOOK           1429

//
// MessageId: ERROR_JOURNAL_HOOK_SET
//
// MessageText:
//
//  The journal hook procedure is already installed.
//
C_Define ERROR_JOURNAL_HOOK_SET           1430

//
// MessageId: ERROR_HOOK_NOT_INSTALLED
//
// MessageText:
//
//  The hook procedure is not installed.
//
C_Define ERROR_HOOK_NOT_INSTALLED         1431

//
// MessageId: ERROR_INVALID_LB_MESSAGE
//
// MessageText:
//
//  Invalid message for single-selection list box.
//
C_Define ERROR_INVALID_LB_MESSAGE         1432

//
// MessageId: ERROR_SETCOUNT_ON_BAD_LB
//
// MessageText:
//
//  LB_SETCOUNT sent to non-lazy list box.
//
C_Define ERROR_SETCOUNT_ON_BAD_LB         1433

//
// MessageId: ERROR_LB_WITHOUT_TABSTOPS
//
// MessageText:
//
//  This list box does not support tab stops.
//
C_Define ERROR_LB_WITHOUT_TABSTOPS        1434

//
// MessageId: ERROR_DESTROY_OBJECT_OF_OTHER_THREAD
//
// MessageText:
//
//  Cannot destroy object created by another thread.
//
C_Define ERROR_DESTROY_OBJECT_OF_OTHER_THREAD 1435

//
// MessageId: ERROR_CHILD_WINDOW_MENU
//
// MessageText:
//
//  Child windows cannot have menus.
//
C_Define ERROR_CHILD_WINDOW_MENU          1436

//
// MessageId: ERROR_NO_SYSTEM_MENU
//
// MessageText:
//
//  The window does not have a system menu.
//
C_Define ERROR_NO_SYSTEM_MENU             1437

//
// MessageId: ERROR_INVALID_MSGBOX_STYLE
//
// MessageText:
//
//  Invalid message box style.
//
C_Define ERROR_INVALID_MSGBOX_STYLE       1438

//
// MessageId: ERROR_INVALID_SPI_VALUE
//
// MessageText:
//
//  Invalid system-wide (SPI_*  parameter.
//
C_Define ERROR_INVALID_SPI_VALUE          1439

//
// MessageId: ERROR_SCREEN_ALREADY_LOCKED
//
// MessageText:
//
//  Screen already locked.
//
C_Define ERROR_SCREEN_ALREADY_LOCKED      1440

//
// MessageId: ERROR_HWNDS_HAVE_DIFF_PARENT
//
// MessageText:
//
//  All handles to windows in a multiple-window position structure must
//  have the same parent.
//
C_Define ERROR_HWNDS_HAVE_DIFF_PARENT     1441

//
// MessageId: ERROR_NOT_CHILD_WINDOW
//
// MessageText:
//
//  The window is not a child window.
//
C_Define ERROR_NOT_CHILD_WINDOW           1442

//
// MessageId: ERROR_INVALID_GW_COMMAND
//
// MessageText:
//
//  Invalid GW_* command.
//
C_Define ERROR_INVALID_GW_COMMAND         1443

//
// MessageId: ERROR_INVALID_THREAD_ID
//
// MessageText:
//
//  Invalid thread identifier.
//
C_Define ERROR_INVALID_THREAD_ID          1444

//
// MessageId: ERROR_NON_MDICHILD_WINDOW
//
// MessageText:
//
//  Cannot process a message from a window that is not a multiple document
//  interface (MDI  window.
//
C_Define ERROR_NON_MDICHILD_WINDOW        1445

//
// MessageId: ERROR_POPUP_ALREADY_ACTIVE
//
// MessageText:
//
//  Popup menu already active.
//
C_Define ERROR_POPUP_ALREADY_ACTIVE       1446

//
// MessageId: ERROR_NO_SCROLLBARS
//
// MessageText:
//
//  The window does not have scroll bars.
//
C_Define ERROR_NO_SCROLLBARS              1447

//
// MessageId: ERROR_INVALID_SCROLLBAR_RANGE
//
// MessageText:
//
//  Scroll bar range cannot be greater than |CI$7FFF.
//
C_Define ERROR_INVALID_SCROLLBAR_RANGE    1448

//
// MessageId: ERROR_INVALID_SHOWWIN_COMMAND
//
// MessageText:
//
//  Cannot show or remove the window in the way specified.
//
C_Define ERROR_INVALID_SHOWWIN_COMMAND    1449

//
// MessageId: ERROR_NO_SYSTEM_RESOURCES
//
// MessageText:
//
//  Insufficient system resources exist to complete the requested service.
//
C_Define ERROR_NO_SYSTEM_RESOURCES        1450

//
// MessageId: ERROR_NONPAGED_SYSTEM_RESOURCES
//
// MessageText:
//
//  Insufficient system resources exist to complete the requested service.
//
C_Define ERROR_NONPAGED_SYSTEM_RESOURCES  1451

//
// MessageId: ERROR_PAGED_SYSTEM_RESOURCES
//
// MessageText:
//
//  Insufficient system resources exist to complete the requested service.
//
C_Define ERROR_PAGED_SYSTEM_RESOURCES     1452

//
// MessageId: ERROR_WORKING_SET_QUOTA
//
// MessageText:
//
//  Insufficient quota to complete the requested service.
//
C_Define ERROR_WORKING_SET_QUOTA          1453

//
// MessageId: ERROR_PAGEFILE_QUOTA
//
// MessageText:
//
//  Insufficient quota to complete the requested service.
//
C_Define ERROR_PAGEFILE_QUOTA             1454

//
// MessageId: ERROR_COMMITMENT_LIMIT
//
// MessageText:
//
//  The paging file is too small for this operation to complete.
//
C_Define ERROR_COMMITMENT_LIMIT           1455

//
// MessageId: ERROR_MENU_ITEM_NOT_FOUND
//
// MessageText:
//
//  A menu item was not found.
//
C_Define ERROR_MENU_ITEM_NOT_FOUND        1456

//
// MessageId: ERROR_INVALID_KEYBOARD_HANDLE
//
// MessageText:
//
//  Invalid keyboard layout handle.
//
C_Define ERROR_INVALID_KEYBOARD_HANDLE    1457

//
// MessageId: ERROR_HOOK_TYPE_NOT_ALLOWED
//
// MessageText:
//
//  Hook type not allowed.
//
C_Define ERROR_HOOK_TYPE_NOT_ALLOWED      1458

//
// MessageId: ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION
//
// MessageText:
//
//  This operation requires an interactive window station.
//
C_Define ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION 1459

//
// MessageId: ERROR_TIMEOUT
//
// MessageText:
//
//  This operation returned because the timeout period expired.
//
C_Define ERROR_TIMEOUT                    1460

//
// MessageId: ERROR_INVALID_MONITOR_HANDLE
//
// MessageText:
//
//  Invalid monitor handle.
//
C_Define ERROR_INVALID_MONITOR_HANDLE     1461

// End of WinUser error codes



///////////////////////////
//                       //
// Eventlog Status Codes //
//                       //
///////////////////////////


//
// MessageId: ERROR_EVENTLOG_FILE_CORRUPT
//
// MessageText:
//
//  The event log file is corrupted.
//
C_Define ERROR_EVENTLOG_FILE_CORRUPT      1500

//
// MessageId: ERROR_EVENTLOG_CANT_START
//
// MessageText:
//
//  No event log file could be opened, so the event logging service did not start.
//
C_Define ERROR_EVENTLOG_CANT_START        1501

//
// MessageId: ERROR_LOG_FILE_FULL
//
// MessageText:
//
//  The event log file is full.
//
C_Define ERROR_LOG_FILE_FULL              1502

//
// MessageId: ERROR_EVENTLOG_FILE_CHANGED
//
// MessageText:
//
//  The event log file has changed between read operations.
//
C_Define ERROR_EVENTLOG_FILE_CHANGED      1503

// End of eventlog error codes



///////////////////////////
//                       //
// MSI Error Codes       //
//                       //
///////////////////////////


//
// MessageId: ERROR_INSTALL_SERVICE
//
// MessageText:
//
//  Failure accessing install service.
//
C_Define ERROR_INSTALL_SERVICE            1601

//
// MessageId: ERROR_INSTALL_USEREXIT
//
// MessageText:
//
//  The user canceled the installation.
//
C_Define ERROR_INSTALL_USEREXIT           1602

//
// MessageId: ERROR_INSTALL_FAILURE
//
// MessageText:
//
//  Fatal error during installation.
//
C_Define ERROR_INSTALL_FAILURE            1603

//
// MessageId: ERROR_INSTALL_SUSPEND
//
// MessageText:
//
//  Installation suspended, incomplete.
//
C_Define ERROR_INSTALL_SUSPEND            1604

//
// MessageId: ERROR_UNKNOWN_PRODUCT
//
// MessageText:
//
//  Product code not registered.
//
C_Define ERROR_UNKNOWN_PRODUCT            1605

//
// MessageId: ERROR_UNKNOWN_FEATURE
//
// MessageText:
//
//  Feature ID not registered.
//
C_Define ERROR_UNKNOWN_FEATURE            1606

//
// MessageId: ERROR_UNKNOWN_COMPONENT
//
// MessageText:
//
//  Component ID not registered.
//
C_Define ERROR_UNKNOWN_COMPONENT          1607

//
// MessageId: ERROR_UNKNOWN_PROPERTY
//
// MessageText:
//
//  Unknown property.
//
C_Define ERROR_UNKNOWN_PROPERTY           1608

//
// MessageId: ERROR_INVALID_HANDLE_STATE
//
// MessageText:
//
//  Handle is in an invalid state.
//
C_Define ERROR_INVALID_HANDLE_STATE       1609

//
// MessageId: ERROR_BAD_CONFIGURATION
//
// MessageText:
//
//  Configuration data corrupt.
//
C_Define ERROR_BAD_CONFIGURATION          1610

//
// MessageId: ERROR_INDEX_ABSENT
//
// MessageText:
//
//  Language not available.
//
C_Define ERROR_INDEX_ABSENT               1611

//
// MessageId: ERROR_INSTALL_SOURCE_ABSENT
//
// MessageText:
//
//  Install source unavailable.
//
C_Define ERROR_INSTALL_SOURCE_ABSENT      1612

//
// MessageId: ERROR_BAD_DATABASE_VERSION
//
// MessageText:
//
//  Database version unsupported.
//
C_Define ERROR_BAD_DATABASE_VERSION       1613

//
// MessageId: ERROR_PRODUCT_UNINSTALLED
//
// MessageText:
//
//  Product is uninstalled.
//
C_Define ERROR_PRODUCT_UNINSTALLED        1614

//
// MessageId: ERROR_BAD_QUERY_SYNTAX
//
// MessageText:
//
//  SQL query syntax invalid or unsupported.
//
C_Define ERROR_BAD_QUERY_SYNTAX           1615

//
// MessageId: ERROR_INVALID_FIELD
//
// MessageText:
//
//  Record field does not exist.
//
C_Define ERROR_INVALID_FIELD              1616

// End of MSI error codes



///////////////////////////
//                       //
//   RPC Status Codes    //
//                       //
///////////////////////////


//
// MessageId: RPC_S_INVALID_STRING_BINDING
//
// MessageText:
//
//  The string binding is invalid.
//
C_Define RPC_S_INVALID_STRING_BINDING     1700

//
// MessageId: RPC_S_WRONG_KIND_OF_BINDING
//
// MessageText:
//
//  The binding handle is not the correct type.
//
C_Define RPC_S_WRONG_KIND_OF_BINDING      1701

//
// MessageId: RPC_S_INVALID_BINDING
//
// MessageText:
//
//  The binding handle is invalid.
//
C_Define RPC_S_INVALID_BINDING            1702

//
// MessageId: RPC_S_PROTSEQ_NOT_SUPPORTED
//
// MessageText:
//
//  The RPC protocol sequence is not supported.
//
C_Define RPC_S_PROTSEQ_NOT_SUPPORTED      1703

//
// MessageId: RPC_S_INVALID_RPC_PROTSEQ
//
// MessageText:
//
//  The RPC protocol sequence is invalid.
//
C_Define RPC_S_INVALID_RPC_PROTSEQ        1704

//
// MessageId: RPC_S_INVALID_STRING_UUID
//
// MessageText:
//
//  The string universal unique identifier (UUID  is invalid.
//
C_Define RPC_S_INVALID_STRING_UUID        1705

//
// MessageId: RPC_S_INVALID_ENDPOINT_FORMAT
//
// MessageText:
//
//  The endpoint format is invalid.
//
C_Define RPC_S_INVALID_ENDPOINT_FORMAT    1706

//
// MessageId: RPC_S_INVALID_NET_ADDR
//
// MessageText:
//
//  The network address is invalid.
//
C_Define RPC_S_INVALID_NET_ADDR           1707

//
// MessageId: RPC_S_NO_ENDPOINT_FOUND
//
// MessageText:
//
//  No endpoint was found.
//
C_Define RPC_S_NO_ENDPOINT_FOUND          1708

//
// MessageId: RPC_S_INVALID_TIMEOUT
//
// MessageText:
//
//  The timeout value is invalid.
//
C_Define RPC_S_INVALID_TIMEOUT            1709

//
// MessageId: RPC_S_OBJECT_NOT_FOUND
//
// MessageText:
//
//  The object universal unique identifier (UUID  was not found.
//
C_Define RPC_S_OBJECT_NOT_FOUND           1710

//
// MessageId: RPC_S_ALREADY_REGISTERED
//
// MessageText:
//
//  The object universal unique identifier (UUID  has already been registered.
//
C_Define RPC_S_ALREADY_REGISTERED         1711

//
// MessageId: RPC_S_TYPE_ALREADY_REGISTERED
//
// MessageText:
//
//  The type universal unique identifier (UUID  has already been registered.
//
C_Define RPC_S_TYPE_ALREADY_REGISTERED    1712

//
// MessageId: RPC_S_ALREADY_LISTENING
//
// MessageText:
//
//  The RPC server is already listening.
//
C_Define RPC_S_ALREADY_LISTENING          1713

//
// MessageId: RPC_S_NO_PROTSEQS_REGISTERED
//
// MessageText:
//
//  No protocol sequences have been registered.
//
C_Define RPC_S_NO_PROTSEQS_REGISTERED     1714

//
// MessageId: RPC_S_NOT_LISTENING
//
// MessageText:
//
//  The RPC server is not listening.
//
C_Define RPC_S_NOT_LISTENING              1715

//
// MessageId: RPC_S_UNKNOWN_MGR_TYPE
//
// MessageText:
//
//  The manager type is unknown.
//
C_Define RPC_S_UNKNOWN_MGR_TYPE           1716

//
// MessageId: RPC_S_UNKNOWN_IF
//
// MessageText:
//
//  The interface is unknown.
//
C_Define RPC_S_UNKNOWN_IF                 1717

//
// MessageId: RPC_S_NO_BINDINGS
//
// MessageText:
//
//  There are no bindings.
//
C_Define RPC_S_NO_BINDINGS                1718

//
// MessageId: RPC_S_NO_PROTSEQS
//
// MessageText:
//
//  There are no protocol sequences.
//
C_Define RPC_S_NO_PROTSEQS                1719

//
// MessageId: RPC_S_CANT_CREATE_ENDPOINT
//
// MessageText:
//
//  The endpoint cannot be created.
//
C_Define RPC_S_CANT_CREATE_ENDPOINT       1720

//
// MessageId: RPC_S_OUT_OF_RESOURCES
//
// MessageText:
//
//  Not enough resources are available to complete this operation.
//
C_Define RPC_S_OUT_OF_RESOURCES           1721

//
// MessageId: RPC_S_SERVER_UNAVAILABLE
//
// MessageText:
//
//  The RPC server is unavailable.
//
C_Define RPC_S_SERVER_UNAVAILABLE         1722

//
// MessageId: RPC_S_SERVER_TOO_BUSY
//
// MessageText:
//
//  The RPC server is too busy to complete this operation.
//
C_Define RPC_S_SERVER_TOO_BUSY            1723

//
// MessageId: RPC_S_INVALID_NETWORK_OPTIONS
//
// MessageText:
//
//  The network options are invalid.
//
C_Define RPC_S_INVALID_NETWORK_OPTIONS    1724

//
// MessageId: RPC_S_NO_CALL_ACTIVE
//
// MessageText:
//
//  There are no remote procedure calls active on this thread.
//
C_Define RPC_S_NO_CALL_ACTIVE             1725

//
// MessageId: RPC_S_CALL_FAILED
//
// MessageText:
//
//  The remote procedure call failed.
//
C_Define RPC_S_CALL_FAILED                1726

//
// MessageId: RPC_S_CALL_FAILED_DNE
//
// MessageText:
//
//  The remote procedure call failed and did not execute.
//
C_Define RPC_S_CALL_FAILED_DNE            1727

//
// MessageId: RPC_S_PROTOCOL_ERROR
//
// MessageText:
//
//  A remote procedure call (RPC  protocol error occurred.
//
C_Define RPC_S_PROTOCOL_ERROR             1728

//
// MessageId: RPC_S_UNSUPPORTED_TRANS_SYN
//
// MessageText:
//
//  The transfer syntax is not supported by the RPC server.
//
C_Define RPC_S_UNSUPPORTED_TRANS_SYN      1730

//
// MessageId: RPC_S_UNSUPPORTED_TYPE
//
// MessageText:
//
//  The universal unique identifier (UUID  type is not supported.
//
C_Define RPC_S_UNSUPPORTED_TYPE           1732

//
// MessageId: RPC_S_INVALID_TAG
//
// MessageText:
//
//  The tag is invalid.
//
C_Define RPC_S_INVALID_TAG                1733

//
// MessageId: RPC_S_INVALID_BOUND
//
// MessageText:
//
//  The array bounds are invalid.
//
C_Define RPC_S_INVALID_BOUND              1734

//
// MessageId: RPC_S_NO_ENTRY_NAME
//
// MessageText:
//
//  The binding does not contain an entry name.
//
C_Define RPC_S_NO_ENTRY_NAME              1735

//
// MessageId: RPC_S_INVALID_NAME_SYNTAX
//
// MessageText:
//
//  The name syntax is invalid.
//
C_Define RPC_S_INVALID_NAME_SYNTAX        1736

//
// MessageId: RPC_S_UNSUPPORTED_NAME_SYNTAX
//
// MessageText:
//
//  The name syntax is not supported.
//
C_Define RPC_S_UNSUPPORTED_NAME_SYNTAX    1737

//
// MessageId: RPC_S_UUID_NO_ADDRESS
//
// MessageText:
//
//  No network address is available to use to construct a universal
//  unique identifier (UUID .
//
C_Define RPC_S_UUID_NO_ADDRESS            1739

//
// MessageId: RPC_S_DUPLICATE_ENDPOINT
//
// MessageText:
//
//  The endpoint is a duplicate.
//
C_Define RPC_S_DUPLICATE_ENDPOINT         1740

//
// MessageId: RPC_S_UNKNOWN_AUTHN_TYPE
//
// MessageText:
//
//  The authentication type is unknown.
//
C_Define RPC_S_UNKNOWN_AUTHN_TYPE         1741

//
// MessageId: RPC_S_MAX_CALLS_TOO_SMALL
//
// MessageText:
//
//  The maximum number of calls is too small.
//
C_Define RPC_S_MAX_CALLS_TOO_SMALL        1742

//
// MessageId: RPC_S_STRING_TOO_LONG
//
// MessageText:
//
//  The string is too long.
//
C_Define RPC_S_STRING_TOO_LONG            1743

//
// MessageId: RPC_S_PROTSEQ_NOT_FOUND
//
// MessageText:
//
//  The RPC protocol sequence was not found.
//
C_Define RPC_S_PROTSEQ_NOT_FOUND          1744

//
// MessageId: RPC_S_PROCNUM_OUT_OF_RANGE
//
// MessageText:
//
//  The procedure number is out of range.
//
C_Define RPC_S_PROCNUM_OUT_OF_RANGE       1745

//
// MessageId: RPC_S_BINDING_HAS_NO_AUTH
//
// MessageText:
//
//  The binding does not contain any authentication information.
//
C_Define RPC_S_BINDING_HAS_NO_AUTH        1746

//
// MessageId: RPC_S_UNKNOWN_AUTHN_SERVICE
//
// MessageText:
//
//  The authentication service is unknown.
//
C_Define RPC_S_UNKNOWN_AUTHN_SERVICE      1747

//
// MessageId: RPC_S_UNKNOWN_AUTHN_LEVEL
//
// MessageText:
//
//  The authentication level is unknown.
//
C_Define RPC_S_UNKNOWN_AUTHN_LEVEL        1748

//
// MessageId: RPC_S_INVALID_AUTH_IDENTITY
//
// MessageText:
//
//  The security context is invalid.
//
C_Define RPC_S_INVALID_AUTH_IDENTITY      1749

//
// MessageId: RPC_S_UNKNOWN_AUTHZ_SERVICE
//
// MessageText:
//
//  The authorization service is unknown.
//
C_Define RPC_S_UNKNOWN_AUTHZ_SERVICE      1750

//
// MessageId: EPT_S_INVALID_ENTRY
//
// MessageText:
//
//  The entry is invalid.
//
C_Define EPT_S_INVALID_ENTRY              1751

//
// MessageId: EPT_S_CANT_PERFORM_OP
//
// MessageText:
//
//  The server endpoint cannot perform the operation.
//
C_Define EPT_S_CANT_PERFORM_OP            1752

//
// MessageId: EPT_S_NOT_REGISTERED
//
// MessageText:
//
//  There are no more endpoints available from the endpoint mapper.
//
C_Define EPT_S_NOT_REGISTERED             1753

//
// MessageId: RPC_S_NOTHING_TO_EXPORT
//
// MessageText:
//
//  No interfaces have been exported.
//
C_Define RPC_S_NOTHING_TO_EXPORT          1754

//
// MessageId: RPC_S_INCOMPLETE_NAME
//
// MessageText:
//
//  The entry name is incomplete.
//
C_Define RPC_S_INCOMPLETE_NAME            1755

//
// MessageId: RPC_S_INVALID_VERS_OPTION
//
// MessageText:
//
//  The version option is invalid.
//
C_Define RPC_S_INVALID_VERS_OPTION        1756

//
// MessageId: RPC_S_NO_MORE_MEMBERS
//
// MessageText:
//
//  There are no more members.
//
C_Define RPC_S_NO_MORE_MEMBERS            1757

//
// MessageId: RPC_S_NOT_ALL_OBJS_UNEXPORTED
//
// MessageText:
//
//  There is nothing to unexport.
//
C_Define RPC_S_NOT_ALL_OBJS_UNEXPORTED    1758

//
// MessageId: RPC_S_INTERFACE_NOT_FOUND
//
// MessageText:
//
//  The interface was not found.
//
C_Define RPC_S_INTERFACE_NOT_FOUND        1759

//
// MessageId: RPC_S_ENTRY_ALREADY_EXISTS
//
// MessageText:
//
//  The entry already exists.
//
C_Define RPC_S_ENTRY_ALREADY_EXISTS       1760

//
// MessageId: RPC_S_ENTRY_NOT_FOUND
//
// MessageText:
//
//  The entry is not found.
//
C_Define RPC_S_ENTRY_NOT_FOUND            1761

//
// MessageId: RPC_S_NAME_SERVICE_UNAVAILABLE
//
// MessageText:
//
//  The name service is unavailable.
//
C_Define RPC_S_NAME_SERVICE_UNAVAILABLE   1762

//
// MessageId: RPC_S_INVALID_NAF_ID
//
// MessageText:
//
//  The network address family is invalid.
//
C_Define RPC_S_INVALID_NAF_ID             1763

//
// MessageId: RPC_S_CANNOT_SUPPORT
//
// MessageText:
//
//  The requested operation is not supported.
//
C_Define RPC_S_CANNOT_SUPPORT             1764

//
// MessageId: RPC_S_NO_CONTEXT_AVAILABLE
//
// MessageText:
//
//  No security context is available to allow impersonation.
//
C_Define RPC_S_NO_CONTEXT_AVAILABLE       1765

//
// MessageId: RPC_S_INTERNAL_ERROR
//
// MessageText:
//
//  An internal error occurred in a remote procedure call (RPC .
//
C_Define RPC_S_INTERNAL_ERROR             1766

//
// MessageId: RPC_S_ZERO_DIVIDE
//
// MessageText:
//
//  The RPC server attempted an integer division by zero.
//
C_Define RPC_S_ZERO_DIVIDE                1767

//
// MessageId: RPC_S_ADDRESS_ERROR
//
// MessageText:
//
//  An addressing error occurred in the RPC server.
//
C_Define RPC_S_ADDRESS_ERROR              1768

//
// MessageId: RPC_S_FP_DIV_ZERO
//
// MessageText:
//
//  A floating-point operation at the RPC server caused a division by zero.
//
C_Define RPC_S_FP_DIV_ZERO                1769

//
// MessageId: RPC_S_FP_UNDERFLOW
//
// MessageText:
//
//  A floating-point underflow occurred at the RPC server.
//
C_Define RPC_S_FP_UNDERFLOW               1770

//
// MessageId: RPC_S_FP_OVERFLOW
//
// MessageText:
//
//  A floating-point overflow occurred at the RPC server.
//
C_Define RPC_S_FP_OVERFLOW                1771

//
// MessageId: RPC_X_NO_MORE_ENTRIES
//
// MessageText:
//
//  The list of RPC servers available for the binding of auto handles
//  has been exhausted.
//
C_Define RPC_X_NO_MORE_ENTRIES            1772

//
// MessageId: RPC_X_SS_CHAR_TRANS_OPEN_FAIL
//
// MessageText:
//
//  Unable to open the character translation table file.
//
C_Define RPC_X_SS_CHAR_TRANS_OPEN_FAIL    1773

//
// MessageId: RPC_X_SS_CHAR_TRANS_SHORT_FILE
//
// MessageText:
//
//  The file containing the character translation table has fewer than
//  512 bytes.
//
C_Define RPC_X_SS_CHAR_TRANS_SHORT_FILE   1774

//
// MessageId: RPC_X_SS_IN_NULL_CONTEXT
//
// MessageText:
//
//  A null context handle was passed from the client to the host during
//  a remote procedure call.
//
C_Define RPC_X_SS_IN_NULL_CONTEXT         1775

//
// MessageId: RPC_X_SS_CONTEXT_DAMAGED
//
// MessageText:
//
//  The context handle changed during a remote procedure call.
//
C_Define RPC_X_SS_CONTEXT_DAMAGED         1777

//
// MessageId: RPC_X_SS_HANDLES_MISMATCH
//
// MessageText:
//
//  The binding handles passed to a remote procedure call do not match.
//
C_Define RPC_X_SS_HANDLES_MISMATCH        1778

//
// MessageId: RPC_X_SS_CANNOT_GET_CALL_HANDLE
//
// MessageText:
//
//  The stub is unable to get the remote procedure call handle.
//
C_Define RPC_X_SS_CANNOT_GET_CALL_HANDLE  1779

//
// MessageId: RPC_X_NULL_REF_POINTER
//
// MessageText:
//
//  A null reference pointer was passed to the stub.
//
C_Define RPC_X_NULL_REF_POINTER           1780

//
// MessageId: RPC_X_ENUM_VALUE_OUT_OF_RANGE
//
// MessageText:
//
//  The enumeration value is out of range.
//
C_Define RPC_X_ENUM_VALUE_OUT_OF_RANGE    1781

//
// MessageId: RPC_X_BYTE_COUNT_TOO_SMALL
//
// MessageText:
//
//  The byte count is too small.
//
C_Define RPC_X_BYTE_COUNT_TOO_SMALL       1782

//
// MessageId: RPC_X_BAD_STUB_DATA
//
// MessageText:
//
//  The stub received bad data.
//
C_Define RPC_X_BAD_STUB_DATA              1783

//
// MessageId: ERROR_INVALID_USER_BUFFER
//
// MessageText:
//
//  The supplied user buffer is not valid for the requested operation.
//
C_Define ERROR_INVALID_USER_BUFFER        1784

//
// MessageId: ERROR_UNRECOGNIZED_MEDIA
//
// MessageText:
//
//  The disk media is not recognized.  It may not be formatted.
//
C_Define ERROR_UNRECOGNIZED_MEDIA         1785

//
// MessageId: ERROR_NO_TRUST_LSA_SECRET
//
// MessageText:
//
//  The workstation does not have a trust secret.
//
C_Define ERROR_NO_TRUST_LSA_SECRET        1786

//
// MessageId: ERROR_NO_TRUST_SAM_ACCOUNT
//
// MessageText:
//
//  The SAM database on the Windows NT Server does not have a computer
//  account for this workstation trust relationship.
//
C_Define ERROR_NO_TRUST_SAM_ACCOUNT       1787

//
// MessageId: ERROR_TRUSTED_DOMAIN_FAILURE
//
// MessageText:
//
//  The trust relationship between the primary domain and the trusted
//  domain failed.
//
C_Define ERROR_TRUSTED_DOMAIN_FAILURE     1788

//
// MessageId: ERROR_TRUSTED_RELATIONSHIP_FAILURE
//
// MessageText:
//
//  The trust relationship between this workstation and the primary
//  domain failed.
//
C_Define ERROR_TRUSTED_RELATIONSHIP_FAILURE 1789

//
// MessageId: ERROR_TRUST_FAILURE
//
// MessageText:
//
//  The network logon failed.
//
C_Define ERROR_TRUST_FAILURE              1790

//
// MessageId: RPC_S_CALL_IN_PROGRESS
//
// MessageText:
//
//  A remote procedure call is already in progress for this thread.
//
C_Define RPC_S_CALL_IN_PROGRESS           1791

//
// MessageId: ERROR_NETLOGON_NOT_STARTED
//
// MessageText:
//
//  An attempt was made to logon, but the network logon service was not started.
//
C_Define ERROR_NETLOGON_NOT_STARTED       1792

//
// MessageId: ERROR_ACCOUNT_EXPIRED
//
// MessageText:
//
//  The user's account has expired.
//
C_Define ERROR_ACCOUNT_EXPIRED            1793

//
// MessageId: ERROR_REDIRECTOR_HAS_OPEN_HANDLES
//
// MessageText:
//
//  The redirector is in use and cannot be unloaded.
//
C_Define ERROR_REDIRECTOR_HAS_OPEN_HANDLES 1794

//
// MessageId: ERROR_PRINTER_DRIVER_ALREADY_INSTALLED
//
// MessageText:
//
//  The specified printer driver is already installed.
//
C_Define ERROR_PRINTER_DRIVER_ALREADY_INSTALLED 1795

//
// MessageId: ERROR_UNKNOWN_PORT
//
// MessageText:
//
//  The specified port is unknown.
//
C_Define ERROR_UNKNOWN_PORT               1796

//
// MessageId: ERROR_UNKNOWN_PRINTER_DRIVER
//
// MessageText:
//
//  The printer driver is unknown.
//
C_Define ERROR_UNKNOWN_PRINTER_DRIVER     1797

//
// MessageId: ERROR_UNKNOWN_PRINTPROCESSOR
//
// MessageText:
//
//  The print processor is unknown.
//
C_Define ERROR_UNKNOWN_PRINTPROCESSOR     1798

//
// MessageId: ERROR_INVALID_SEPARATOR_FILE
//
// MessageText:
//
//  The specified separator file is invalid.
//
C_Define ERROR_INVALID_SEPARATOR_FILE     1799

//
// MessageId: ERROR_INVALID_PRIORITY
//
// MessageText:
//
//  The specified priority is invalid.
//
C_Define ERROR_INVALID_PRIORITY           1800

//
// MessageId: ERROR_INVALID_PRINTER_NAME
//
// MessageText:
//
//  The printer name is invalid.
//
C_Define ERROR_INVALID_PRINTER_NAME       1801

//
// MessageId: ERROR_PRINTER_ALREADY_EXISTS
//
// MessageText:
//
//  The printer already exists.
//
C_Define ERROR_PRINTER_ALREADY_EXISTS     1802

//
// MessageId: ERROR_INVALID_PRINTER_COMMAND
//
// MessageText:
//
//  The printer command is invalid.
//
C_Define ERROR_INVALID_PRINTER_COMMAND    1803

//
// MessageId: ERROR_INVALID_DATATYPE
//
// MessageText:
//
//  The specified datatype is invalid.
//
C_Define ERROR_INVALID_DATATYPE           1804

//
// MessageId: ERROR_INVALID_ENVIRONMENT
//
// MessageText:
//
//  The environment specified is invalid.
//
C_Define ERROR_INVALID_ENVIRONMENT        1805

//
// MessageId: RPC_S_NO_MORE_BINDINGS
//
// MessageText:
//
//  There are no more bindings.
//
C_Define RPC_S_NO_MORE_BINDINGS           1806

//
// MessageId: ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT
//
// MessageText:
//
//  The account used is an interdomain trust account.  Use your global user account or local user account to access this server.
//
C_Define ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT 1807

//
// MessageId: ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT
//
// MessageText:
//
//  The account used is a computer account.  Use your global user account or local user account to access this server.
//
C_Define ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT 1808

//
// MessageId: ERROR_NOLOGON_SERVER_TRUST_ACCOUNT
//
// MessageText:
//
//  The account used is a server trust account. Use your global user account or local user account to access this server.
//
C_Define ERROR_NOLOGON_SERVER_TRUST_ACCOUNT 1809

//
// MessageId: ERROR_DOMAIN_TRUST_INCONSISTENT
//
// MessageText:
//
//  The name or security ID (SID  of the domain specified is inconsistent
//  with the trust information for that domain.
//
C_Define ERROR_DOMAIN_TRUST_INCONSISTENT  1810

//
// MessageId: ERROR_SERVER_HAS_OPEN_HANDLES
//
// MessageText:
//
//  The server is in use and cannot be unloaded.
//
C_Define ERROR_SERVER_HAS_OPEN_HANDLES    1811

//
// MessageId: ERROR_RESOURCE_DATA_NOT_FOUND
//
// MessageText:
//
//  The specified image file did not contain a resource section.
//
C_Define ERROR_RESOURCE_DATA_NOT_FOUND    1812

//
// MessageId: ERROR_RESOURCE_TYPE_NOT_FOUND
//
// MessageText:
//
//  The specified resource type cannot be found in the image file.
//
C_Define ERROR_RESOURCE_TYPE_NOT_FOUND    1813

//
// MessageId: ERROR_RESOURCE_NAME_NOT_FOUND
//
// MessageText:
//
//  The specified resource name cannot be found in the image file.
//
C_Define ERROR_RESOURCE_NAME_NOT_FOUND    1814

//
// MessageId: ERROR_RESOURCE_LANG_NOT_FOUND
//
// MessageText:
//
//  The specified resource language ID cannot be found in the image file.
//
C_Define ERROR_RESOURCE_LANG_NOT_FOUND    1815

//
// MessageId: ERROR_NOT_ENOUGH_QUOTA
//
// MessageText:
//
//  Not enough quota is available to process this command.
//
C_Define ERROR_NOT_ENOUGH_QUOTA           1816

//
// MessageId: RPC_S_NO_INTERFACES
//
// MessageText:
//
//  No interfaces have been registered.
//
C_Define RPC_S_NO_INTERFACES              1817

//
// MessageId: RPC_S_CALL_CANCELLED
//
// MessageText:
//
//  The remote procedure call was cancelled.
//
C_Define RPC_S_CALL_CANCELLED             1818

//
// MessageId: RPC_S_BINDING_INCOMPLETE
//
// MessageText:
//
//  The binding handle does not contain all required information.
//
C_Define RPC_S_BINDING_INCOMPLETE         1819

//
// MessageId: RPC_S_COMM_FAILURE
//
// MessageText:
//
//  A communications failure occurred during a remote procedure call.
//
C_Define RPC_S_COMM_FAILURE               1820

//
// MessageId: RPC_S_UNSUPPORTED_AUTHN_LEVEL
//
// MessageText:
//
//  The requested authentication level is not supported.
//
C_Define RPC_S_UNSUPPORTED_AUTHN_LEVEL    1821

//
// MessageId: RPC_S_NO_PRINC_NAME
//
// MessageText:
//
//  No principal name registered.
//
C_Define RPC_S_NO_PRINC_NAME              1822

//
// MessageId: RPC_S_NOT_RPC_ERROR
//
// MessageText:
//
//  The error specified is not a valid Windows RPC error code.
//
C_Define RPC_S_NOT_RPC_ERROR              1823

//
// MessageId: RPC_S_UUID_LOCAL_ONLY
//
// MessageText:
//
//  A UUID that is valid only on this computer has been allocated.
//
C_Define RPC_S_UUID_LOCAL_ONLY            1824

//
// MessageId: RPC_S_SEC_PKG_ERROR
//
// MessageText:
//
//  A security package specific error occurred.
//
C_Define RPC_S_SEC_PKG_ERROR              1825

//
// MessageId: RPC_S_NOT_CANCELLED
//
// MessageText:
//
//  Thread is not canceled.
//
C_Define RPC_S_NOT_CANCELLED              1826

//
// MessageId: RPC_X_INVALID_ES_ACTION
//
// MessageText:
//
//  Invalid operation on the encoding/decoding handle.
//
C_Define RPC_X_INVALID_ES_ACTION          1827

//
// MessageId: RPC_X_WRONG_ES_VERSION
//
// MessageText:
//
//  Incompatible version of the serializing package.
//
C_Define RPC_X_WRONG_ES_VERSION           1828

//
// MessageId: RPC_X_WRONG_STUB_VERSION
//
// MessageText:
//
//  Incompatible version of the RPC stub.
//
C_Define RPC_X_WRONG_STUB_VERSION         1829

//
// MessageId: RPC_X_INVALID_PIPE_OBJECT
//
// MessageText:
//
//  The RPC pipe object is invalid or corrupted.
//
C_Define RPC_X_INVALID_PIPE_OBJECT        1830

//
// MessageId: RPC_X_WRONG_PIPE_ORDER
//
// MessageText:
//
//  An invalid operation was attempted on an RPC pipe object.
//
C_Define RPC_X_WRONG_PIPE_ORDER           1831

//
// MessageId: RPC_X_WRONG_PIPE_VERSION
//
// MessageText:
//
//  Unsupported RPC pipe version.
//
C_Define RPC_X_WRONG_PIPE_VERSION         1832

//
// MessageId: RPC_S_GROUP_MEMBER_NOT_FOUND
//
// MessageText:
//
//  The group member was not found.
//
C_Define RPC_S_GROUP_MEMBER_NOT_FOUND     1898

//
// MessageId: EPT_S_CANT_CREATE
//
// MessageText:
//
//  The endpoint mapper database entry could not be created.
//
C_Define EPT_S_CANT_CREATE                1899

//
// MessageId: RPC_S_INVALID_OBJECT
//
// MessageText:
//
//  The object universal unique identifier (UUID  is the nil UUID.
//
C_Define RPC_S_INVALID_OBJECT             1900

//
// MessageId: ERROR_INVALID_TIME
//
// MessageText:
//
//  The specified time is invalid.
//
C_Define ERROR_INVALID_TIME               1901

//
// MessageId: ERROR_INVALID_FORM_NAME
//
// MessageText:
//
//  The specified form name is invalid.
//
C_Define ERROR_INVALID_FORM_NAME          1902

//
// MessageId: ERROR_INVALID_FORM_SIZE
//
// MessageText:
//
//  The specified form size is invalid.
//
C_Define ERROR_INVALID_FORM_SIZE          1903

//
// MessageId: ERROR_ALREADY_WAITING
//
// MessageText:
//
//  The specified printer handle is already being waited on
//
C_Define ERROR_ALREADY_WAITING            1904

//
// MessageId: ERROR_PRINTER_DELETED
//
// MessageText:
//
//  The specified printer has been deleted.
//
C_Define ERROR_PRINTER_DELETED            1905

//
// MessageId: ERROR_INVALID_PRINTER_STATE
//
// MessageText:
//
//  The state of the printer is invalid.
//
C_Define ERROR_INVALID_PRINTER_STATE      1906

//
// MessageId: ERROR_PASSWORD_MUST_CHANGE
//
// MessageText:
//
//  The user must change his password before he logs on the first time.
//
C_Define ERROR_PASSWORD_MUST_CHANGE       1907

//
// MessageId: ERROR_DOMAIN_CONTROLLER_NOT_FOUND
//
// MessageText:
//
//  Could not find the domain controller for this domain.
//
C_Define ERROR_DOMAIN_CONTROLLER_NOT_FOUND 1908

//
// MessageId: ERROR_ACCOUNT_LOCKED_OUT
//
// MessageText:
//
//  The referenced account is currently locked out and may not be logged on to.
//
C_Define ERROR_ACCOUNT_LOCKED_OUT         1909

//
// MessageId: OR_INVALID_OXID
//
// MessageText:
//
//  The object exporter specified was not found.
//
C_Define OR_INVALID_OXID                  1910

//
// MessageId: OR_INVALID_OID
//
// MessageText:
//
//  The object specified was not found.
//
C_Define OR_INVALID_OID                   1911

//
// MessageId: OR_INVALID_SET
//
// MessageText:
//
//  The object resolver set specified was not found.
//
C_Define OR_INVALID_SET                   1912

//
// MessageId: RPC_S_SEND_INCOMPLETE
//
// MessageText:
//
//  Some data remains to be sent in the request buffer.
//
C_Define RPC_S_SEND_INCOMPLETE            1913

//
// MessageId: RPC_S_INVALID_ASYNC_HANDLE
//
// MessageText:
//
//  Invalid asynchronous remote procedure call handle.
//
C_Define RPC_S_INVALID_ASYNC_HANDLE       1914

//
// MessageId: RPC_S_INVALID_ASYNC_CALL
//
// MessageText:
//
//  Invalid asynchronous RPC call handle for this operation.
//
C_Define RPC_S_INVALID_ASYNC_CALL         1915

//
// MessageId: RPC_X_PIPE_CLOSED
//
// MessageText:
//
//  The RPC pipe object has already been closed.
//
C_Define RPC_X_PIPE_CLOSED                1916

//
// MessageId: RPC_X_PIPE_DISCIPLINE_ERROR
//
// MessageText:
//
//  The RPC call completed before all pipes were processed.
//
C_Define RPC_X_PIPE_DISCIPLINE_ERROR      1917

//
// MessageId: RPC_X_PIPE_EMPTY
//
// MessageText:
//
//  No more data is available from the RPC pipe.
//
C_Define RPC_X_PIPE_EMPTY                 1918

//
// MessageId: ERROR_NO_SITENAME
//
// MessageText:
//
//  No site name is available for this machine.
//
C_Define ERROR_NO_SITENAME                1919

//
// MessageId: ERROR_CANT_ACCESS_FILE
//
// MessageText:
//
//  The file can not be accessed by the system.
//
C_Define ERROR_CANT_ACCESS_FILE           1920

//
// MessageId: ERROR_CANT_RESOLVE_FILENAME
//
// MessageText:
//
//  The name of the file cannot be resolved by the system.
//
C_Define ERROR_CANT_RESOLVE_FILENAME      1921

//
// MessageId: ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY
//
// MessageText:
//
//  The directory service evaluated group memberships locally.
//
C_Define ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY 1922

//
// MessageId: ERROR_DS_NO_ATTRIBUTE_OR_VALUE
//
// MessageText:
//
//  The specified directory service attribute or value does not exist.
//
C_Define ERROR_DS_NO_ATTRIBUTE_OR_VALUE   1923

//
// MessageId: ERROR_DS_INVALID_ATTRIBUTE_SYNTAX
//
// MessageText:
//
//  The attribute syntax specified to the directory service is invalid.
//
C_Define ERROR_DS_INVALID_ATTRIBUTE_SYNTAX 1924

//
// MessageId: ERROR_DS_ATTRIBUTE_TYPE_UNC_DefineD
//
// MessageText:
//
//  The attribute type specified to the directory service is not C_Defined.
//
C_Define ERROR_DS_ATTRIBUTE_TYPE_UNC_DefineD 1925

//
// MessageId: ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS
//
// MessageText:
//
//  The specified directory service attribute or value already exists.
//
C_Define ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS 1926

//
// MessageId: ERROR_DS_BUSY
//
// MessageText:
//
//  The directory service is busy.
//
C_Define ERROR_DS_BUSY                    1927

//
// MessageId: ERROR_DS_UNAVAILABLE
//
// MessageText:
//
//  The directory service is unavailable.
//
C_Define ERROR_DS_UNAVAILABLE             1928

//
// MessageId: ERROR_DS_NO_RIDS_ALLOCATED
//
// MessageText:
//
//  The directory service was unable to allocate a relative identifier.
//
C_Define ERROR_DS_NO_RIDS_ALLOCATED       1929

//
// MessageId: ERROR_DS_NO_MORE_RIDS
//
// MessageText:
//
//  The directory service has exhausted the pool of relative identifiers.
//
C_Define ERROR_DS_NO_MORE_RIDS            1930

//
// MessageId: ERROR_DS_INCORRECT_ROLE_OWNER
//
// MessageText:
//
//  The requested operation could not be performed because the directory service is not the
//  master for that type of operation.
//
C_Define ERROR_DS_INCORRECT_ROLE_OWNER    1931

//
// MessageId: ERROR_DS_RIDMGR_INIT_ERROR
//
// MessageText:
//
//  The directory service was unable to initialize the subsystem that allocates relative identifiers.
//
C_Define ERROR_DS_RIDMGR_INIT_ERROR       1932

//
// MessageId: ERROR_DS_OBJ_CLASS_VIOLATION
//
// MessageText:
//
//  The requested operation did not satisfy one or more constraints associated with the class of the object.
//
C_Define ERROR_DS_OBJ_CLASS_VIOLATION     1933

//
// MessageId: ERROR_DS_CANT_ON_NON_LEAF
//
// MessageText:
//
//  The directory service can perform the requested operation only on a leaf object.
//
C_Define ERROR_DS_CANT_ON_NON_LEAF        1934

//
// MessageId: ERROR_DS_CANT_ON_RDN
//
// MessageText:
//
//  The directory service cannot perform the requested operation on the RDN attribute of an object.
//
C_Define ERROR_DS_CANT_ON_RDN             1935

//
// MessageId: ERROR_DS_CANT_MOD_OBJ_CLASS
//
// MessageText:
//
//  The directory service detected an attempt to modify the object class of an object.
//
C_Define ERROR_DS_CANT_MOD_OBJ_CLASS      1936

//
// MessageId: ERROR_DS_CROSS_DOM_MOVE_ERROR
//
// MessageText:
//
//  The requested cross domain move operation could not be performed.
//
C_Define ERROR_DS_CROSS_DOM_MOVE_ERROR    1937

//
// MessageId: ERROR_DS_GC_NOT_AVAILABLE
//
// MessageText:
//
//  Unable to contact the global catalog server.
//
C_Define ERROR_DS_GC_NOT_AVAILABLE        1938

//
// MessageId: ERROR_NO_BROWSER_SERVERS_FOUND
//
// MessageText:
//
//  The list of servers for this workgroup is not currently available
//
C_Define ERROR_NO_BROWSER_SERVERS_FOUND   6118




///////////////////////////
//                       //
//   OpenGL Error Code   //
//                       //
///////////////////////////


//
// MessageId: ERROR_INVALID_PIXEL_FORMAT
//
// MessageText:
//
//  The pixel format is invalid.
//
C_Define ERROR_INVALID_PIXEL_FORMAT       2000

//
// MessageId: ERROR_BAD_DRIVER
//
// MessageText:
//
//  The specified driver is invalid.
//
C_Define ERROR_BAD_DRIVER                 2001

//
// MessageId: ERROR_INVALID_WINDOW_STYLE
//
// MessageText:
//
//  The window style or class attribute is invalid for this operation.
//
C_Define ERROR_INVALID_WINDOW_STYLE       2002

//
// MessageId: ERROR_METAFILE_NOT_SUPPORTED
//
// MessageText:
//
//  The requested metafile operation is not supported.
//
C_Define ERROR_METAFILE_NOT_SUPPORTED     2003

//
// MessageId: ERROR_TRANSFORM_NOT_SUPPORTED
//
// MessageText:
//
//  The requested transformation operation is not supported.
//
C_Define ERROR_TRANSFORM_NOT_SUPPORTED    2004

//
// MessageId: ERROR_CLIPPING_NOT_SUPPORTED
//
// MessageText:
//
//  The requested clipping operation is not supported.
//
C_Define ERROR_CLIPPING_NOT_SUPPORTED     2005

// End of OpenGL error codes



///////////////////////////////////////////
//                                       //
//   Image Color Management Error Code   //
//                                       //
///////////////////////////////////////////


//
// MessageId: ERROR_INVALID_CMM
//
// MessageText:
//
//  The specified color management module is invalid.
//
C_Define ERROR_INVALID_CMM                2300

//
// MessageId: ERROR_INVALID_PROFILE
//
// MessageText:
//
//  The specified color profile is invalid.
//
C_Define ERROR_INVALID_PROFILE            2301

//
// MessageId: ERROR_TAG_NOT_FOUND
//
// MessageText:
//
//  The specified tag was not found.
//
C_Define ERROR_TAG_NOT_FOUND              2302

//
// MessageId: ERROR_TAG_NOT_PRESENT
//
// MessageText:
//
//  A required tag is not present.
//
C_Define ERROR_TAG_NOT_PRESENT            2303

//
// MessageId: ERROR_DUPLICATE_TAG
//
// MessageText:
//
//  The specified tag is already present.
//
C_Define ERROR_DUPLICATE_TAG              2304

//
// MessageId: ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE
//
// MessageText:
//
//  The specified color profile is not associated with any device.
//
C_Define ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE 2305

//
// MessageId: ERROR_PROFILE_NOT_FOUND
//
// MessageText:
//
//  The specified color profile was not found.
//
C_Define ERROR_PROFILE_NOT_FOUND          2306

//
// MessageId: ERROR_INVALID_COLORSPACE
//
// MessageText:
//
//  The specified color space is invalid.
//
C_Define ERROR_INVALID_COLORSPACE         2307

//
// MessageId: ERROR_ICM_NOT_ENABLED
//
// MessageText:
//
//  Image Color Management is not enabled.
//
C_Define ERROR_ICM_NOT_ENABLED            2308

//
// MessageId: ERROR_DELETING_ICM_XFORM
//
// MessageText:
//
//  There was an error while deleting the color transform.
//
C_Define ERROR_DELETING_ICM_XFORM         2309

//
// MessageId: ERROR_INVALID_TRANSFORM
//
// MessageText:
//
//  The specified color transform is invalid.
//
C_Define ERROR_INVALID_TRANSFORM          2310


////////////////////////////////////
//                                //
//     Win32 Spooler Error Codes  //
//                                //
////////////////////////////////////
//
// MessageId: ERROR_UNKNOWN_PRINT_MONITOR
//
// MessageText:
//
//  The specified print monitor is unknown.
//
C_Define ERROR_UNKNOWN_PRINT_MONITOR      3000

//
// MessageId: ERROR_PRINTER_DRIVER_IN_USE
//
// MessageText:
//
//  The specified printer driver is currently in use.
//
C_Define ERROR_PRINTER_DRIVER_IN_USE      3001

//
// MessageId: ERROR_SPOOL_FILE_NOT_FOUND
//
// MessageText:
//
//  The spool file was not found.
//
C_Define ERROR_SPOOL_FILE_NOT_FOUND       3002

//
// MessageId: ERROR_SPL_NO_STARTDOC
//
// MessageText:
//
//  A StartDocPrinter call was not issued.
//
C_Define ERROR_SPL_NO_STARTDOC            3003

//
// MessageId: ERROR_SPL_NO_ADDJOB
//
// MessageText:
//
//  An AddJob call was not issued.
//
C_Define ERROR_SPL_NO_ADDJOB              3004

//
// MessageId: ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED
//
// MessageText:
//
//  The specified print processor has already been installed.
//
C_Define ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED 3005

//
// MessageId: ERROR_PRINT_MONITOR_ALREADY_INSTALLED
//
// MessageText:
//
//  The specified print monitor has already been installed.
//
C_Define ERROR_PRINT_MONITOR_ALREADY_INSTALLED 3006

//
// MessageId: ERROR_INVALID_PRINT_MONITOR
//
// MessageText:
//
//  The specified print monitor does not have the required functions.
//
C_Define ERROR_INVALID_PRINT_MONITOR      3007

//
// MessageId: ERROR_PRINT_MONITOR_IN_USE
//
// MessageText:
//
//  The specified print monitor is currently in use.
//
C_Define ERROR_PRINT_MONITOR_IN_USE       3008

//
// MessageId: ERROR_PRINTER_HAS_JOBS_QUEUED
//
// MessageText:
//
//  The requested operation is not allowed when there are jobs queued to the printer.
//
C_Define ERROR_PRINTER_HAS_JOBS_QUEUED    3009

//
// MessageId: ERROR_SUCCESS_REBOOT_REQUIRED
//
// MessageText:
//
//  The requested operation is successful.  Changes will not be effective until the system is rebooted.
//
C_Define ERROR_SUCCESS_REBOOT_REQUIRED    3010

//
// MessageId: ERROR_SUCCESS_RESTART_REQUIRED
//
// MessageText:
//
//  The requested operation is successful.  Changes will not be effective until the service is restarted.
//
C_Define ERROR_SUCCESS_RESTART_REQUIRED   3011

////////////////////////////////////
//                                //
//     Wins Error Codes           //
//                                //
////////////////////////////////////
//
// MessageId: ERROR_WINS_INTERNAL
//
// MessageText:
//
//  WINS encountered an error while processing the command.
//
C_Define ERROR_WINS_INTERNAL              4000

//
// MessageId: ERROR_CAN_NOT_DEL_LOCAL_WINS
//
// MessageText:
//
//  The local WINS can not be deleted.
//
C_Define ERROR_CAN_NOT_DEL_LOCAL_WINS     4001

//
// MessageId: ERROR_STATIC_INIT
//
// MessageText:
//
//  The importation from the file failed.
//
C_Define ERROR_STATIC_INIT                4002

//
// MessageId: ERROR_INC_BACKUP
//
// MessageText:
//
//  The backup failed. Was a full backup done before?
//
C_Define ERROR_INC_BACKUP                 4003

//
// MessageId: ERROR_FULL_BACKUP
//
// MessageText:
//
//  The backup failed. Check the directory to which you are backing the database.
//
C_Define ERROR_FULL_BACKUP                4004

//
// MessageId: ERROR_REC_NON_EXISTENT
//
// MessageText:
//
//  The name does not exist in the WINS database.
//
C_Define ERROR_REC_NON_EXISTENT           4005

//
// MessageId: ERROR_RPL_NOT_ALLOWED
//
// MessageText:
//
//  Replication with a nonconfigured partner is not allowed.
//
C_Define ERROR_RPL_NOT_ALLOWED            4006

////////////////////////////////////
//                                //
//     DHCP Error Codes           //
//                                //
////////////////////////////////////
//
// MessageId: ERROR_DHCP_ADDRESS_CONFLICT
//
// MessageText:
//
//  The DHCP client has obtained an IP address that is already in use on the network.  The local interface will be disabled until the DHCP client can obtain a new address.
//
C_Define ERROR_DHCP_ADDRESS_CONFLICT      4100

////////////////////////////////////
//                                //
//     WMI Error Codes            //
//                                //
////////////////////////////////////
//
// MessageId: ERROR_WMI_GUID_NOT_FOUND
//
// MessageText:
//
//  The GUID passed was not recognized as valid by a WMI data provider.
//
C_Define ERROR_WMI_GUID_NOT_FOUND         4200

//
// MessageId: ERROR_WMI_INSTANCE_NOT_FOUND
//
// MessageText:
//
//  The instance name passed was not recognized as valid by a WMI data provider.
//
C_Define ERROR_WMI_INSTANCE_NOT_FOUND     4201

//
// MessageId: ERROR_WMI_ITEMID_NOT_FOUND
//
// MessageText:
//
//  The data item ID passed was not recognized as valid by a WMI data provider.
//
C_Define ERROR_WMI_ITEMID_NOT_FOUND       4202

//
// MessageId: ERROR_WMI_TRY_AGAIN
//
// MessageText:
//
//  The WMI request could not be completed and should be retried.
//
C_Define ERROR_WMI_TRY_AGAIN              4203

//
// MessageId: ERROR_WMI_DP_NOT_FOUND
//
// MessageText:
//
//  The WMI data provider could not be located.
//
C_Define ERROR_WMI_DP_NOT_FOUND           4204

//
// MessageId: ERROR_WMI_UNRESOLVED_INSTANCE_REF
//
// MessageText:
//
//  The WMI data provider references an instance set that has not been registered.
//
C_Define ERROR_WMI_UNRESOLVED_INSTANCE_REF 4205

//
// MessageId: ERROR_WMI_ALREADY_ENABLED
//
// MessageText:
//
//  The WMI data block or event notification has already been enabled.
//
C_Define ERROR_WMI_ALREADY_ENABLED        4206

//
// MessageId: ERROR_WMI_GUID_DISCONNECTED
//
// MessageText:
//
//  The WMI data block is no longer available.
//
C_Define ERROR_WMI_GUID_DISCONNECTED      4207

//
// MessageId: ERROR_WMI_SERVER_UNAVAILABLE
//
// MessageText:
//
//  The WMI data service is not available.
//
C_Define ERROR_WMI_SERVER_UNAVAILABLE     4208

//
// MessageId: ERROR_WMI_DP_FAILED
//
// MessageText:
//
//  The WMI data provider failed to carry out the request.
//
C_Define ERROR_WMI_DP_FAILED              4209

//
// MessageId: ERROR_WMI_INVALID_MOF
//
// MessageText:
//
//  The WMI MOF information is not valid.
//
C_Define ERROR_WMI_INVALID_MOF            4210

//
// MessageId: ERROR_WMI_INVALID_REGINFO
//
// MessageText:
//
//  The WMI registration information is not valid.
//
C_Define ERROR_WMI_INVALID_REGINFO        4211

////////////////////////////////////
//                                //
// NT Media Services Error Codes  //
//                                //
////////////////////////////////////
//
// MessageId: ERROR_INVALID_MEDIA
//
// MessageText:
//
//  The media identifier does not represent a valid medium.
//
C_Define ERROR_INVALID_MEDIA              4300

//
// MessageId: ERROR_INVALID_LIBRARY
//
// MessageText:
//
//  The library identifier does not represent a valid library.
//
C_Define ERROR_INVALID_LIBRARY            4301

//
// MessageId: ERROR_INVALID_MEDIA_POOL
//
// MessageText:
//
//  The media pool identifier does not represent a valid media pool.
//
C_Define ERROR_INVALID_MEDIA_POOL         4302

//
// MessageId: ERROR_DRIVE_MEDIA_MISMATCH
//
// MessageText:
//
//  The drive and medium are not compatible or exist in different libraries.
//
C_Define ERROR_DRIVE_MEDIA_MISMATCH       4303

//
// MessageId: ERROR_MEDIA_OFFLINE
//
// MessageText:
//
//  The medium currently exists in an offline library and must be online to perform this operation.
//
C_Define ERROR_MEDIA_OFFLINE              4304

//
// MessageId: ERROR_LIBRARY_OFFLINE
//
// MessageText:
//
//  The operation cannot be performed on an offline library.
//
C_Define ERROR_LIBRARY_OFFLINE            4305

//
// MessageId: ERROR_EMPTY
//
// MessageText:
//
//  The library, drive, or media pool is empty.
//
C_Define ERROR_EMPTY                      4306

//
// MessageId: ERROR_NOT_EMPTY
//
// MessageText:
//
//  The library, drive, or media pool must be empty to perform this operation.
//
C_Define ERROR_NOT_EMPTY                  4307

//
// MessageId: ERROR_MEDIA_UNAVAILABLE
//
// MessageText:
//
//  No media is currently available in this media pool or library.
//
C_Define ERROR_MEDIA_UNAVAILABLE          4308

//
// MessageId: ERROR_RESOURCE_DISABLED
//
// MessageText:
//
//  A resource required for this operation is disabled.
//
C_Define ERROR_RESOURCE_DISABLED          4309

//
// MessageId: ERROR_INVALID_CLEANER
//
// MessageText:
//
//  The media identifier does not represent a valid cleaner.
//
C_Define ERROR_INVALID_CLEANER            4310

//
// MessageId: ERROR_UNABLE_TO_CLEAN
//
// MessageText:
//
//  The drive cannot be cleaned or does not support cleaning.
//
C_Define ERROR_UNABLE_TO_CLEAN            4311

//
// MessageId: ERROR_OBJECT_NOT_FOUND
//
// MessageText:
//
//  The object identifier does not represent a valid object.
//
C_Define ERROR_OBJECT_NOT_FOUND           4312

//
// MessageId: ERROR_DATABASE_FAILURE
//
// MessageText:
//
//  Unable to read from or write to the database.
//
C_Define ERROR_DATABASE_FAILURE           4313

//
// MessageId: ERROR_DATABASE_FULL
//
// MessageText:
//
//  The database is full.
//
C_Define ERROR_DATABASE_FULL              4314

//
// MessageId: ERROR_MEDIA_INCOMPATIBLE
//
// MessageText:
//
//  The medium is not compatible with the device or media pool.
//
C_Define ERROR_MEDIA_INCOMPATIBLE         4315

//
// MessageId: ERROR_RESOURCE_NOT_PRESENT
//
// MessageText:
//
//  The resource required for this operation does not exist.
//
C_Define ERROR_RESOURCE_NOT_PRESENT       4316

//
// MessageId: ERROR_INVALID_OPERATION
//
// MessageText:
//
//  The operation identifier is not valid.
//
C_Define ERROR_INVALID_OPERATION          4317

//
// MessageId: ERROR_MEDIA_NOT_AVAILABLE
//
// MessageText:
//
//  The media is not mounted or ready for use.
//
C_Define ERROR_MEDIA_NOT_AVAILABLE        4318

//
// MessageId: ERROR_DEVICE_NOT_AVAILABLE
//
// MessageText:
//
//  The device is not ready for use.
//
C_Define ERROR_DEVICE_NOT_AVAILABLE       4319

//
// MessageId: ERROR_REQUEST_REFUSED
//
// MessageText:
//
//  The operator or administrator has refused the request.
//
C_Define ERROR_REQUEST_REFUSED            4320

////////////////////////////////////////////
//                                        //
// NT Remote Storage Service Error Codes  //
//                                        //
////////////////////////////////////////////
//
// MessageId: ERROR_FILE_OFFLINE
//
// MessageText:
//
//  The remote storage service was not able to recall the file.
//
C_Define ERROR_FILE_OFFLINE               4350

//
// MessageId: ERROR_REMOTE_STORAGE_NOT_ACTIVE
//
// MessageText:
//
//  The remote storage service is not operational at this time.
//
C_Define ERROR_REMOTE_STORAGE_NOT_ACTIVE  4351

//
// MessageId: ERROR_REMOTE_STORAGE_MEDIA_ERROR
//
// MessageText:
//
//  The remote storage service encountered a media error.
//
C_Define ERROR_REMOTE_STORAGE_MEDIA_ERROR 4352

////////////////////////////////////////////
//                                        //
// NT Reparse Points Error Codes          //
//                                        //
////////////////////////////////////////////
//
// MessageId: ERROR_NOT_A_REPARSE_POINT
//
// MessageText:
//
//  The file or directory is not a reparse point.
//
C_Define ERROR_NOT_A_REPARSE_POINT        4390

//
// MessageId: ERROR_REPARSE_ATTRIBUTE_CONFLICT
//
// MessageText:
//
//  The reparse point attribute cannot be set because it conflicts with an existing attribute.
//
C_Define ERROR_REPARSE_ATTRIBUTE_CONFLICT 4391

////////////////////////////////////
//                                //
//     Cluster Error Codes        //
//                                //
////////////////////////////////////
//
// MessageId: ERROR_DEPENDENT_RESOURCE_EXISTS
//
// MessageText:
//
//  The cluster resource cannot be moved to another group because other resources are dependent on it.
//
C_Define ERROR_DEPENDENT_RESOURCE_EXISTS  5001

//
// MessageId: ERROR_DEPENDENCY_NOT_FOUND
//
// MessageText:
//
//  The cluster resource dependency cannot be found.
//
C_Define ERROR_DEPENDENCY_NOT_FOUND       5002

//
// MessageId: ERROR_DEPENDENCY_ALREADY_EXISTS
//
// MessageText:
//
//  The cluster resource cannot be made dependent on the specified resource because it is already dependent.
//
C_Define ERROR_DEPENDENCY_ALREADY_EXISTS  5003

//
// MessageId: ERROR_RESOURCE_NOT_ONLINE
//
// MessageText:
//
//  The cluster resource is not online.
//
C_Define ERROR_RESOURCE_NOT_ONLINE        5004

//
// MessageId: ERROR_HOST_NODE_NOT_AVAILABLE
//
// MessageText:
//
//  A cluster node is not available for this operation.
//
C_Define ERROR_HOST_NODE_NOT_AVAILABLE    5005

//
// MessageId: ERROR_RESOURCE_NOT_AVAILABLE
//
// MessageText:
//
//  The cluster resource is not available.
//
C_Define ERROR_RESOURCE_NOT_AVAILABLE     5006

//
// MessageId: ERROR_RESOURCE_NOT_FOUND
//
// MessageText:
//
//  The cluster resource could not be found.
//
C_Define ERROR_RESOURCE_NOT_FOUND         5007

//
// MessageId: ERROR_SHUTDOWN_CLUSTER
//
// MessageText:
//
//  The cluster is being shut down.
//
C_Define ERROR_SHUTDOWN_CLUSTER           5008

//
// MessageId: ERROR_CANT_EVICT_ACTIVE_NODE
//
// MessageText:
//
//  A cluster node cannot be evicted from the cluster while it is online.
//
C_Define ERROR_CANT_EVICT_ACTIVE_NODE     5009

//
// MessageId: ERROR_OBJECT_ALREADY_EXISTS
//
// MessageText:
//
//  The object already exists.
//
C_Define ERROR_OBJECT_ALREADY_EXISTS      5010

//
// MessageId: ERROR_OBJECT_IN_LIST
//
// MessageText:
//
//  The object is already in the list.
//
C_Define ERROR_OBJECT_IN_LIST             5011

//
// MessageId: ERROR_GROUP_NOT_AVAILABLE
//
// MessageText:
//
//  The cluster group is not available for any new requests.
//
C_Define ERROR_GROUP_NOT_AVAILABLE        5012

//
// MessageId: ERROR_GROUP_NOT_FOUND
//
// MessageText:
//
//  The cluster group could not be found.
//
C_Define ERROR_GROUP_NOT_FOUND            5013

//
// MessageId: ERROR_GROUP_NOT_ONLINE
//
// MessageText:
//
//  The operation could not be completed because the cluster group is not online.
//
C_Define ERROR_GROUP_NOT_ONLINE           5014

//
// MessageId: ERROR_HOST_NODE_NOT_RESOURCE_OWNER
//
// MessageText:
//
//  The cluster node is not the owner of the resource.
//
C_Define ERROR_HOST_NODE_NOT_RESOURCE_OWNER 5015

//
// MessageId: ERROR_HOST_NODE_NOT_GROUP_OWNER
//
// MessageText:
//
//  The cluster node is not the owner of the group.
//
C_Define ERROR_HOST_NODE_NOT_GROUP_OWNER  5016

//
// MessageId: ERROR_RESMON_CREATE_FAILED
//
// MessageText:
//
//  The cluster resource could not be created in the specified resource monitor.
//
C_Define ERROR_RESMON_CREATE_FAILED       5017

//
// MessageId: ERROR_RESMON_ONLINE_FAILED
//
// MessageText:
//
//  The cluster resource could not be brought online by the resource monitor.
//
C_Define ERROR_RESMON_ONLINE_FAILED       5018

//
// MessageId: ERROR_RESOURCE_ONLINE
//
// MessageText:
//
//  The operation could not be completed because the cluster resource is online.
//
C_Define ERROR_RESOURCE_ONLINE            5019

//
// MessageId: ERROR_QUORUM_RESOURCE
//
// MessageText:
//
//  The cluster resource could not be deleted or brought offline because it is the quorum resource.
//
C_Define ERROR_QUORUM_RESOURCE            5020

//
// MessageId: ERROR_NOT_QUORUM_CAPABLE
//
// MessageText:
//
//  The cluster could not make the specified resource a quorum resource because it is not capable of being a quorum resource.
//
C_Define ERROR_NOT_QUORUM_CAPABLE         5021

//
// MessageId: ERROR_CLUSTER_SHUTTING_DOWN
//
// MessageText:
//
//  The cluster software is shutting down.
//
C_Define ERROR_CLUSTER_SHUTTING_DOWN      5022

//
// MessageId: ERROR_INVALID_STATE
//
// MessageText:
//
//  The group or resource is not in the correct state to perform the requested operation.
//
C_Define ERROR_INVALID_STATE              5023

//
// MessageId: ERROR_RESOURCE_PROPERTIES_STORED
//
// MessageText:
//
//  The properties were stored but not all changes will take effect until the next
//  time the resource is brought online.
//
C_Define ERROR_RESOURCE_PROPERTIES_STORED 5024

//
// MessageId: ERROR_NOT_QUORUM_CLASS
//
// MessageText:
//
//  The cluster could not make the specified resource a quorum resource because it does not belong to a shared storage class.
//
C_Define ERROR_NOT_QUORUM_CLASS           5025

//
// MessageId: ERROR_CORE_RESOURCE
//
// MessageText:
//
//  The cluster resource could not be deleted since it is a core resource.
//
C_Define ERROR_CORE_RESOURCE              5026

//
// MessageId: ERROR_QUORUM_RESOURCE_ONLINE_FAILED
//
// MessageText:
//
//  The quorum resource failed to come online.
//
C_Define ERROR_QUORUM_RESOURCE_ONLINE_FAILED 5027

//
// MessageId: ERROR_QUORUMLOG_OPEN_FAILED
//
// MessageText:
//
//  The quorum log could not be created or mounted successfully.
//
C_Define ERROR_QUORUMLOG_OPEN_FAILED      5028

//
// MessageId: ERROR_CLUSTERLOG_CORRUPT
//
// MessageText:
//
//  The cluster log is corrupt.
//
C_Define ERROR_CLUSTERLOG_CORRUPT         5029

//
// MessageId: ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE
//
// MessageText:
//
//  The record could not be written to the cluster log since it exceeds the maximum size.
//
C_Define ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE 5030

//
// MessageId: ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE
//
// MessageText:
//
//  The cluster log exceeds its maximum size.
//
C_Define ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE 5031

//
// MessageId: ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND
//
// MessageText:
//
//  No checkpoint record was found in the cluster log.
//
C_Define ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND 5032

//
// MessageId: ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE
//
// MessageText:
//
//  The minimum required disk space needed for logging is not available.
//
C_Define ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE 5033

////////////////////////////////////
//                                //
//     EFS Error Codes            //
//                                //
////////////////////////////////////
//
// MessageId: ERROR_ENCRYPTION_FAILED
//
// MessageText:
//
//  The specified file could not be encrypted.
//
C_Define ERROR_ENCRYPTION_FAILED          6000

//
// MessageId: ERROR_DECRYPTION_FAILED
//
// MessageText:
//
//  The specified file could not be decrypted.
//
C_Define ERROR_DECRYPTION_FAILED          6001

//
// MessageId: ERROR_FILE_ENCRYPTED
//
// MessageText:
//
//  The specified file is encrypted and the user does not have the ability to decrypt it.
//
C_Define ERROR_FILE_ENCRYPTED             6002

//
// MessageId: ERROR_NO_RECOVERY_POLICY
//
// MessageText:
//
//  There is no encryption recovery policy configured for this system.
//
C_Define ERROR_NO_RECOVERY_POLICY         6003

//
// MessageId: ERROR_NO_EFS
//
// MessageText:
//
//  The required encryption driver is not loaded for this system.
//
C_Define ERROR_NO_EFS                     6004

//
// MessageId: ERROR_WRONG_EFS
//
// MessageText:
//
//  The file was encrypted with a different encryption driver than is currently loaded.
//
C_Define ERROR_WRONG_EFS                  6005

//
// MessageId: ERROR_NO_USER_KEYS
//
// MessageText:
//
//  There are no EFS keys C_Defined for the user.
//
C_Define ERROR_NO_USER_KEYS               6006

//
// MessageId: ERROR_FILE_NOT_ENCRYPTED
//
// MessageText:
//
//  The specified file is not encrypted.
//
C_Define ERROR_FILE_NOT_ENCRYPTED         6007

//
// MessageId: ERROR_NOT_EXPORT_FORMAT
//
// MessageText:
//
//  The specified file is not in the C_Defined EFS export format.
//
C_Define ERROR_NOT_EXPORT_FORMAT          6008

////////////////////////////////////
//                                //
//     OLE Error Codes            //
//                                //
////////////////////////////////////

//
// OLE error definitions and values
//
// The return value of OLE APIs and methods is an HRESULT.
// This is not a handle to anything, but is merely a 32-bit value
// with several fields encoded in the value.  The parts of an
// HRESULT are shown below.
//
// Many of the macros and functions below were orginally C_Defined to
// operate on SCODEs.  SCODEs are no longer used.  The macros are
// still present for compatibility and easy porting of Win16 code.
// Newly written code should use the HRESULT macros and functions.
//

//
//  HRESULTs are 32 bit values layed out as follows:
//
//   3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
//   1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0
//  +-+-+-+-+-+---------------------+-------------------------------+
//  |S|R|C|N|r|    Facility         |               Code            |
//  +-+-+-+-+-+---------------------+-------------------------------+
//
//  where
//
//      S - Severity - indicates success/fail
//
//          0 - Success
//          1 - Fail (COERROR 
//
//      R - reserved portion of the facility code, corresponds to NT's
//              second severity bit.
//
//      C - reserved portion of the facility code, corresponds to NT's
//              C field.
//
//      N - reserved portion of the facility code. Used to indicate a
//              mapped NT status value.
//
//      r - reserved portion of the facility code. Reserved for internal
//              use. Used to indicate HRESULT values that are not status
//              values, but are instead message ids for display strings.
//
//      Facility - is the facility code
//
//      Code - is the facility's status code
//

//
// Severity values
//

C_Define SEVERITY_SUCCESS    0
C_Define SEVERITY_ERROR      1


//
// Generic test for success on any status value (non-negative numbers
// indicate success.
//

//C_Define SUCCEEDED(Status  ((HRESULT (Status  >= 0 

//
// and the inverse
//

//C_Define FAILED(Status  ((HRESULT (Status <0 


//
// Generic test for error on any status value.
//

//C_Define IS_ERROR(Status  ((unsigned long (Status  >> 31 == SEVERITY_ERROR 

//
// Return the code
//

//# C_Define HRESULT_CODE(hr     ((hr  & |CI$FFFF 
//# C_Define SCODE_CODE(sc       ((sc  & |CI$FFFF 

//
//  Return the facility
//

//C_Define HRESULT_FACILITY(hr   (((hr  >> 16  & |CI$1fff 
//C_Define SCODE_FACILITY(sc     (((sc  >> 16  & |CI$1fff 

//
//  Return the severity
//

//C_Define HRESULT_SEVERITY(hr   (((hr  >> 31  & |CI$1 
//C_Define SCODE_SEVERITY(sc     (((sc  >> 31  & |CI$1 

//
// Create an HRESULT value from component pieces
//

//#C_Define MAKE_HRESULT(sev,fac,code  \
//#    ((HRESULT  (((unsigned long (sev <<31  | ((unsigned long (fac <<16  | ((unsigned long (code     
//#C_Define MAKE_SCODE(sev,fac,code  \
//#    ((SCODE  (((unsigned long (sev <<31  | ((unsigned long (fac <<16  | ((unsigned long (code     


//
// Map a WIN32 error value into a HRESULT
// Note: This assumes that WIN32 errors fall in the range -32k to 32k.
//
// C_Define bits here so macros are guaranteed to work

C_Define FACILITY_NT_BIT                 |CI$10000000
//#C_Define HRESULT_FROM_WIN32(x    (x ? ((HRESULT  (((x  & |CI$0000FFFF  | (FACILITY_WIN32 << 16  | |CI$80000000   : 0  

//
// Map an NT status value into a HRESULT
//

//#C_Define HRESULT_FROM_NT(x       ((HRESULT  ((x  | FACILITY_NT_BIT  


// ****** OBSOLETE functions

// HRESULT functions
// As noted above, these functions are obsolete and should not be used.


// Extract the SCODE from a HRESULT

//#C_Define GetScode(hr  ((SCODE  (hr  

// Convert an SCODE into an HRESULT.

//#C_Define ResultFromScode(sc  ((HRESULT  (sc  


// PropagateResult is a noop
//#C_Define PropagateResult(hrPrevious, scBase  ((HRESULT  scBase 


// ****** End of OBSOLETE functions.


// ---------------------- HRESULT value definitions -----------------
//
// HRESULT definitions
//

C_Define NOERROR             0

//
// Error definitions follow
//

//
// Codes |CI$4000-|CI$40ff are reserved for OLE
//
//
// Error codes
//
//
// MessageId: E_UNEXPECTED
//
// MessageText:
//
//  Catastrophic failure
//
C_Define E_UNEXPECTED                     |CI$8000FFFF

//
// MessageId: E_NOTIMPL
//
// MessageText:
//
//  Not implemented
//
C_Define E_NOTIMPL                        |CI$80004001

//
// MessageId: E_OUTOFMEMORY
//
// MessageText:
//
//  Ran out of memory
//
C_Define E_OUTOFMEMORY                    |CI$8007000E

 


//
// MessageId: E_INVALIDARG
//
// MessageText:
//
//  One or more arguments are invalid
//
C_Define E_INVALIDARG                     |CI$80070057

//
// MessageId: E_NOINTERFACE
//
// MessageText:
//
//  No such interface supported
//
C_Define E_NOINTERFACE                    |CI$80004002

//
// MessageId: E_POINTER
//
// MessageText:
//
//  Invalid pointer
//
C_Define E_POINTER                        |CI$80004003

//
// MessageId: E_HANDLE
//
// MessageText:
//
//  Invalid handle
//
C_Define E_HANDLE                         |CI$80070006

//
// MessageId: E_ABORT
//
// MessageText:
//
//  Operation aborted
//
C_Define E_ABORT                          |CI$80004004

//
// MessageId: E_FAIL
//
// MessageText:
//
//  Unspecified error
//
C_Define E_FAIL                           |CI$80004005

//
// MessageId: E_ACCESSDENIED
//
// MessageText:
//
//  General access denied error
//
C_Define E_ACCESSDENIED                   |CI$80070005

#ELSE
//
// MessageId: E_NOTIMPL
//
// MessageText:
//
//  Not implemented
//
C_Define E_NOTIMPL                        |CI$80000001

//
// MessageId: E_OUTOFMEMORY
//
// MessageText:
//
//  Ran out of memory
//
C_Define E_OUTOFMEMORY                    |CI$80000002

//
// MessageId: E_INVALIDARG
//
// MessageText:
//
//  One or more arguments are invalid
//
C_Define E_INVALIDARG                     |CI$80000003

//
// MessageId: E_NOINTERFACE
//
// MessageText:
//
//  No such interface supported
//
C_Define E_NOINTERFACE                    |CI$80000004

//
// MessageId: E_POINTER
//
// MessageText:
//
//  Invalid pointer
//
C_Define E_POINTER                        |CI$80000005

//
// MessageId: E_HANDLE
//
// MessageText:
//
//  Invalid handle
//
C_Define E_HANDLE                         |CI$80000006

//
// MessageId: E_ABORT
//
// MessageText:
//
//  Operation aborted
//
C_Define E_ABORT                          |CI$80000007

//
// MessageId: E_FAIL
//
// MessageText:
//
//  Unspecified error
//
C_Define E_FAIL                           |CI$80000008

//
// MessageId: E_ACCESSDENIED
//
// MessageText:
//
//  General access denied error
//
C_Define E_ACCESSDENIED                   |CI$80000009

#ENDIF //WIN32
//
// MessageId: E_PENDING
//
// MessageText:
//
//  The data necessary to complete this operation is not yet available.
//
C_Define E_PENDING                        |CI$8000000A

//
// MessageId: CO_E_INIT_TLS
//
// MessageText:
//
//  Thread local storage failure
//
C_Define CO_E_INIT_TLS                    |CI$80004006

//
// MessageId: CO_E_INIT_SHARED_ALLOCATOR
//
// MessageText:
//
//  Get shared memory allocator failure
//
C_Define CO_E_INIT_SHARED_ALLOCATOR       |CI$80004007

//
// MessageId: CO_E_INIT_MEMORY_ALLOCATOR
//
// MessageText:
//
//  Get memory allocator failure
//
C_Define CO_E_INIT_MEMORY_ALLOCATOR       |CI$80004008

//
// MessageId: CO_E_INIT_CLASS_CACHE
//
// MessageText:
//
//  Unable to initialize class cache
//
C_Define CO_E_INIT_CLASS_CACHE            |CI$80004009

//
// MessageId: CO_E_INIT_RPC_CHANNEL
//
// MessageText:
//
//  Unable to initialize RPC services
//
C_Define CO_E_INIT_RPC_CHANNEL            |CI$8000400AL

//
// MessageId: CO_E_INIT_TLS_SET_CHANNEL_CONTROL
//
// MessageText:
//
//  Cannot set thread local storage channel control
//
C_Define CO_E_INIT_TLS_SET_CHANNEL_CONTROL |CI$8000400B

//
// MessageId: CO_E_INIT_TLS_CHANNEL_CONTROL
//
// MessageText:
//
//  Could not allocate thread local storage channel control
//
C_Define CO_E_INIT_TLS_CHANNEL_CONTROL    |CI$8000400C

//
// MessageId: CO_E_INIT_UNACCEPTED_USER_ALLOCATOR
//
// MessageText:
//
//  The user supplied memory allocator is unacceptable
//
C_Define CO_E_INIT_UNACCEPTED_USER_ALLOCATOR |CI$8000400D

//
// MessageId: CO_E_INIT_SCM_MUTEX_EXISTS
//
// MessageText:
//
//  The OLE service mutex already exists
//
C_Define CO_E_INIT_SCM_MUTEX_EXISTS       |CI$8000400E

//
// MessageId: CO_E_INIT_SCM_FILE_MAPPING_EXISTS
//
// MessageText:
//
//  The OLE service file mapping already exists
//
C_Define CO_E_INIT_SCM_FILE_MAPPING_EXISTS |CI$8000400F

//
// MessageId: CO_E_INIT_SCM_MAP_VIEW_OF_FILE
//
// MessageText:
//
//  Unable to map view of file for OLE service
//
C_Define CO_E_INIT_SCM_MAP_VIEW_OF_FILE   |CI$80004010

//
// MessageId: CO_E_INIT_SCM_EXEC_FAILURE
//
// MessageText:
//
//  Failure attempting to launch OLE service
//
C_Define CO_E_INIT_SCM_EXEC_FAILURE       |CI$80004011

//
// MessageId: CO_E_INIT_ONLY_SINGLE_THREADED
//
// MessageText:
//
//  There was an attempt to call CoInitialize a second time while single threaded
//
C_Define CO_E_INIT_ONLY_SINGLE_THREADED   |CI$80004012

//
// MessageId: CO_E_CANT_REMOTE
//
// MessageText:
//
//  A Remote activation was necessary but was not allowed
//
C_Define CO_E_CANT_REMOTE                 |CI$80004013

//
// MessageId: CO_E_BAD_SERVER_NAME
//
// MessageText:
//
//  A Remote activation was necessary but the server name provided was invalid
//
C_Define CO_E_BAD_SERVER_NAME             |CI$80004014

//
// MessageId: CO_E_WRONG_SERVER_IDENTITY
//
// MessageText:
//
//  The class is configured to run as a security id different from the caller
//
C_Define CO_E_WRONG_SERVER_IDENTITY       |CI$80004015

//
// MessageId: CO_E_OLE1DDE_DISABLED
//
// MessageText:
//
//  Use of Ole1 services requiring DDE windows is disabled
//
C_Define CO_E_OLE1DDE_DISABLED            |CI$80004016

//
// MessageId: CO_E_RUNAS_SYNTAX
//
// MessageText:
//
//  A RunAs specification must be <domain name>\<user name> or simply <user name>
//
C_Define CO_E_RUNAS_SYNTAX                |CI$80004017

//
// MessageId: CO_E_CREATEPROCESS_FAILURE
//
// MessageText:
//
//  The server process could not be started.  The pathname may be incorrect.
//
C_Define CO_E_CREATEPROCESS_FAILURE       |CI$80004018

//
// MessageId: CO_E_RUNAS_CREATEPROCESS_FAILURE
//
// MessageText:
//
//  The server process could not be started as the configured identity.  The pathname may be incorrect or unavailable.
//
C_Define CO_E_RUNAS_CREATEPROCESS_FAILURE |CI$80004019

//
// MessageId: CO_E_RUNAS_LOGON_FAILURE
//
// MessageText:
//
//  The server process could not be started because the configured identity is incorrect.  Check the username and password.
//
C_Define CO_E_RUNAS_LOGON_FAILURE         |CI$8000401A

//
// MessageId: CO_E_LAUNCH_PERMSSION_DENIED
//
// MessageText:
//
//  The client is not allowed to launch this server.
//
C_Define CO_E_LAUNCH_PERMSSION_DENIED     |CI$8000401B

//
// MessageId: CO_E_START_SERVICE_FAILURE
//
// MessageText:
//
//  The service providing this server could not be started.
//
C_Define CO_E_START_SERVICE_FAILURE       |CI$8000401C

//
// MessageId: CO_E_REMOTE_COMMUNICATION_FAILURE
//
// MessageText:
//
//  This computer was unable to communicate with the computer providing the server.
//
C_Define CO_E_REMOTE_COMMUNICATION_FAILURE |CI$8000401D

//
// MessageId: CO_E_SERVER_START_TIMEOUT
//
// MessageText:
//
//  The server did not respond after being launched.
//
C_Define CO_E_SERVER_START_TIMEOUT        |CI$8000401E

//
// MessageId: CO_E_CLSREG_INCONSISTENT
//
// MessageText:
//
//  The registration information for this server is inconsistent or incomplete.
//
C_Define CO_E_CLSREG_INCONSISTENT         |CI$8000401F

//
// MessageId: CO_E_IIDREG_INCONSISTENT
//
// MessageText:
//
//  The registration information for this interface is inconsistent or incomplete.
//
C_Define CO_E_IIDREG_INCONSISTENT         |CI$80004020

//
// MessageId: CO_E_NOT_SUPPORTED
//
// MessageText:
//
//  The operation attempted is not supported.
//
C_Define CO_E_NOT_SUPPORTED               |CI$80004021

//
// MessageId: CO_E_RELOAD_DLL
//
// MessageText:
//
//  A dll must be loaded.
//
C_Define CO_E_RELOAD_DLL                  |CI$80004022

//
// MessageId: CO_E_MSI_ERROR
//
// MessageText:
//
//  A Microsoft Software Installer error was encountered.
//
C_Define CO_E_MSI_ERROR                   |CI$80004023


//
// Success codes
//
C_Define S_OK                                   |CI$00000000
C_Define S_FALSE                                |CI$00000001

// ******************
// FACILITY_ITF
// ******************

//
// Codes |CI$0-|CI$01ff are reserved for the OLE group of
// interfaces.
//


//
// Generic OLE errors that may be returned by many inerfaces
//

C_Define OLE_E_FIRST |CI$80040000
C_Define OLE_E_LAST  |CI$800400FF
C_Define OLE_S_FIRST |CI$00040000
C_Define OLE_S_LAST  |CI$000400FF

//
// Old OLE errors
//
//
// MessageId: OLE_E_OLEVERB
//
// MessageText:
//
//  Invalid OLEVERB structure
//
C_Define OLE_E_OLEVERB                    |CI$80040000

//
// MessageId: OLE_E_ADVF
//
// MessageText:
//
//  Invalid advise flags
//
C_Define OLE_E_ADVF                       |CI$80040001

//
// MessageId: OLE_E_ENUM_NOMORE
//
// MessageText:
//
//  Can't enumerate any more, because the associated data is missing
//
C_Define OLE_E_ENUM_NOMORE                |CI$80040002

//
// MessageId: OLE_E_ADVISENOTSUPPORTED
//
// MessageText:
//
//  This implementation doesn't take advises
//
C_Define OLE_E_ADVISENOTSUPPORTED         |CI$80040003

//
// MessageId: OLE_E_NOCONNECTION
//
// MessageText:
//
//  There is no connection for this connection ID
//
C_Define OLE_E_NOCONNECTION               |CI$80040004

//
// MessageId: OLE_E_NOTRUNNING
//
// MessageText:
//
//  Need to run the object to perform this operation
//
C_Define OLE_E_NOTRUNNING                 |CI$80040005

//
// MessageId: OLE_E_NOCACHE
//
// MessageText:
//
//  There is no cache to operate on
//
C_Define OLE_E_NOCACHE                    |CI$80040006

//
// MessageId: OLE_E_BLANK
//
// MessageText:
//
//  Uninitialized object
//
C_Define OLE_E_BLANK                      |CI$80040007

//
// MessageId: OLE_E_CLASSDIFF
//
// MessageText:
//
//  Linked object's source class has changed
//
C_Define OLE_E_CLASSDIFF                  |CI$80040008

//
// MessageId: OLE_E_CANT_GETMONIKER
//
// MessageText:
//
//  Not able to get the moniker of the object
//
C_Define OLE_E_CANT_GETMONIKER            |CI$80040009

//
// MessageId: OLE_E_CANT_BINDTOSOURCE
//
// MessageText:
//
//  Not able to bind to the source
//
C_Define OLE_E_CANT_BINDTOSOURCE          |CI$8004000A

//
// MessageId: OLE_E_STATIC
//
// MessageText:
//
//  Object is static; operation not allowed
//
C_Define OLE_E_STATIC                     |CI$8004000B

//
// MessageId: OLE_E_PROMPTSAVECANCELLED
//
// MessageText:
//
//  User canceled out of save dialog
//
C_Define OLE_E_PROMPTSAVECANCELLED        |CI$8004000C

//
// MessageId: OLE_E_INVALIDRECT
//
// MessageText:
//
//  Invalid rectangle
//
C_Define OLE_E_INVALIDRECT                |CI$8004000D

//
// MessageId: OLE_E_WRONGCOMPOBJ
//
// MessageText:
//
//  compobj.dll is too old for the ole2.dll initialized
//
C_Define OLE_E_WRONGCOMPOBJ               |CI$8004000E

//
// MessageId: OLE_E_INVALIDHWND
//
// MessageText:
//
//  Invalid window handle
//
C_Define OLE_E_INVALIDHWND                |CI$8004000F

//
// MessageId: OLE_E_NOT_INPLACEACTIVE
//
// MessageText:
//
//  Object is not in any of the inplace active states
//
C_Define OLE_E_NOT_INPLACEACTIVE          |CI$80040010

//
// MessageId: OLE_E_CANTCONVERT
//
// MessageText:
//
//  Not able to convert object
//
C_Define OLE_E_CANTCONVERT                |CI$80040011

//
// MessageId: OLE_E_NOSTORAGE
//
// MessageText:
//
//  Not able to perform the operation because object is not given storage yet
//  
//
C_Define OLE_E_NOSTORAGE                  |CI$80040012

//
// MessageId: DV_E_FORMATETC
//
// MessageText:
//
//  Invalid FORMATETC structure
//
C_Define DV_E_FORMATETC                   |CI$80040064

//
// MessageId: DV_E_DVTARGETDEVICE
//
// MessageText:
//
//  Invalid DVTARGETDEVICE structure
//
C_Define DV_E_DVTARGETDEVICE              |CI$80040065

//
// MessageId: DV_E_STGMEDIUM
//
// MessageText:
//
//  Invalid STDGMEDIUM structure
//
C_Define DV_E_STGMEDIUM                   |CI$80040066

//
// MessageId: DV_E_STATDATA
//
// MessageText:
//
//  Invalid STATDATA structure
//
C_Define DV_E_STATDATA                    |CI$80040067

//
// MessageId: DV_E_LINDEX
//
// MessageText:
//
//  Invalid lindex
//
C_Define DV_E_LINDEX                      |CI$80040068

//
// MessageId: DV_E_TYMED
//
// MessageText:
//
//  Invalid tymed
//
C_Define DV_E_TYMED                       |CI$80040069

//
// MessageId: DV_E_CLIPFORMAT
//
// MessageText:
//
//  Invalid clipboard format
//
C_Define DV_E_CLIPFORMAT                  |CI$8004006A

//
// MessageId: DV_E_DVASPECT
//
// MessageText:
//
//  Invalid aspect(s 
//
C_Define DV_E_DVASPECT                    |CI$8004006B

//
// MessageId: DV_E_DVTARGETDEVICE_SIZE
//
// MessageText:
//
//  tdSize parameter of the DVTARGETDEVICE structure is invalid
//
C_Define DV_E_DVTARGETDEVICE_SIZE         |CI$8004006C

//
// MessageId: DV_E_NOIVIEWOBJECT
//
// MessageText:
//
//  Object doesn't support IViewObject interface
//
C_Define DV_E_NOIVIEWOBJECT               |CI$8004006D

C_Define DRAGDROP_E_FIRST |CI$80040100
C_Define DRAGDROP_E_LAST  |CI$8004010FL
C_Define DRAGDROP_S_FIRST |CI$00040100
C_Define DRAGDROP_S_LAST  |CI$0004010FL
//
// MessageId: DRAGDROP_E_NOTREGISTERED
//
// MessageText:
//
//  Trying to revoke a drop target that has not been registered
//
C_Define DRAGDROP_E_NOTREGISTERED         |CI$80040100

//
// MessageId: DRAGDROP_E_ALREADYREGISTERED
//
// MessageText:
//
//  This window has already been registered as a drop target
//
C_Define DRAGDROP_E_ALREADYREGISTERED     |CI$80040101

//
// MessageId: DRAGDROP_E_INVALIDHWND
//
// MessageText:
//
//  Invalid window handle
//
C_Define DRAGDROP_E_INVALIDHWND           |CI$80040102

C_Define CLASSFACTORY_E_FIRST  |CI$80040110
C_Define CLASSFACTORY_E_LAST   |CI$8004011FL
C_Define CLASSFACTORY_S_FIRST  |CI$00040110
C_Define CLASSFACTORY_S_LAST   |CI$0004011FL
//
// MessageId: CLASS_E_NOAGGREGATION
//
// MessageText:
//
//  Class does not support aggregation (or class object is remote
//
C_Define CLASS_E_NOAGGREGATION            |CI$80040110

//
// MessageId: CLASS_E_CLASSNOTAVAILABLE
//
// MessageText:
//
//  ClassFactory cannot supply requested class
//
C_Define CLASS_E_CLASSNOTAVAILABLE        |CI$80040111

//
// MessageId: CLASS_E_NOTLICENSED
//
// MessageText:
//
//  Class is not licensed for use
//
C_Define CLASS_E_NOTLICENSED              |CI$80040112

C_Define MARSHAL_E_FIRST  |CI$80040120
C_Define MARSHAL_E_LAST   |CI$8004012FL
C_Define MARSHAL_S_FIRST  |CI$00040120
C_Define MARSHAL_S_LAST   |CI$0004012FL
C_Define DATA_E_FIRST     |CI$80040130
C_Define DATA_E_LAST      |CI$8004013FL
C_Define DATA_S_FIRST     |CI$00040130
C_Define DATA_S_LAST      |CI$0004013FL
C_Define VIEW_E_FIRST     |CI$80040140
C_Define VIEW_E_LAST      |CI$8004014FL
C_Define VIEW_S_FIRST     |CI$00040140
C_Define VIEW_S_LAST      |CI$0004014FL
//
// MessageId: VIEW_E_DRAW
//
// MessageText:
//
//  Error drawing view
//
C_Define VIEW_E_DRAW                      |CI$80040140

C_Define REGDB_E_FIRST     |CI$80040150
C_Define REGDB_E_LAST      |CI$8004015FL
C_Define REGDB_S_FIRST     |CI$00040150
C_Define REGDB_S_LAST      |CI$0004015FL
//
// MessageId: REGDB_E_READREGDB
//
// MessageText:
//
//  Could not read key from registry
//
C_Define REGDB_E_READREGDB                |CI$80040150

//
// MessageId: REGDB_E_WRITEREGDB
//
// MessageText:
//
//  Could not write key to registry
//
C_Define REGDB_E_WRITEREGDB               |CI$80040151

//
// MessageId: REGDB_E_KEYMISSING
//
// MessageText:
//
//  Could not find the key in the registry
//
C_Define REGDB_E_KEYMISSING               |CI$80040152

//
// MessageId: REGDB_E_INVALIDVALUE
//
// MessageText:
//
//  Invalid value for registry
//
C_Define REGDB_E_INVALIDVALUE             |CI$80040153

//
// MessageId: REGDB_E_CLASSNOTREG
//
// MessageText:
//
//  Class not registered
//
C_Define REGDB_E_CLASSNOTREG              |CI$80040154

//
// MessageId: REGDB_E_IIDNOTREG
//
// MessageText:
//
//  Interface not registered
//
C_Define REGDB_E_IIDNOTREG                |CI$80040155

C_Define CAT_E_FIRST     |CI$80040160
C_Define CAT_E_LAST      |CI$80040161
//
// MessageId: CAT_E_CATIDNOEXIST
//
// MessageText:
//
//  CATID does not exist
//
C_Define CAT_E_CATIDNOEXIST               |CI$80040160

//
// MessageId: CAT_E_NODESCRIPTION
//
// MessageText:
//
//  Description not found
//
C_Define CAT_E_NODESCRIPTION              |CI$80040161

////////////////////////////////////
//                                //
//     Class Store Error Codes    //
//                                //
////////////////////////////////////
C_Define CS_E_FIRST     |CI$80040164
C_Define CS_E_LAST      |CI$80040168
//
// MessageId: CS_E_PACKAGE_NOTFOUND
//
// MessageText:
//
//  No package in Class Store meets this criteria
//
C_Define CS_E_PACKAGE_NOTFOUND            |CI$80040164

//
// MessageId: CS_E_NOT_DELETABLE
//
// MessageText:
//
//  Deleting this will break referential integrity
//
C_Define CS_E_NOT_DELETABLE               |CI$80040165

//
// MessageId: CS_E_CLASS_NOTFOUND
//
// MessageText:
//
//  No such CLSID in Class Store
//
C_Define CS_E_CLASS_NOTFOUND              |CI$80040166

//
// MessageId: CS_E_INVALID_VERSION
//
// MessageText:
//
//  The Class Store is corrupted or has a version that is no more supported
//
C_Define CS_E_INVALID_VERSION             |CI$80040167

//
// MessageId: CS_E_NO_CLASSSTORE
//
// MessageText:
//
//  No such Class Store
//
C_Define CS_E_NO_CLASSSTORE               |CI$80040168

C_Define CACHE_E_FIRST     |CI$80040170
C_Define CACHE_E_LAST      |CI$8004017FL
C_Define CACHE_S_FIRST     |CI$00040170
C_Define CACHE_S_LAST      |CI$0004017FL
//
// MessageId: CACHE_E_NOCACHE_UPDATED
//
// MessageText:
//
//  Cache not updated
//
C_Define CACHE_E_NOCACHE_UPDATED          |CI$80040170

C_Define OLEOBJ_E_FIRST     |CI$80040180
C_Define OLEOBJ_E_LAST      |CI$8004018FL
C_Define OLEOBJ_S_FIRST     |CI$00040180
C_Define OLEOBJ_S_LAST      |CI$0004018FL
//
// MessageId: OLEOBJ_E_NOVERBS
//
// MessageText:
//
//  No verbs for OLE object
//
C_Define OLEOBJ_E_NOVERBS                 |CI$80040180

//
// MessageId: OLEOBJ_E_INVALIDVERB
//
// MessageText:
//
//  Invalid verb for OLE object
//
C_Define OLEOBJ_E_INVALIDVERB             |CI$80040181

C_Define CLIENTSITE_E_FIRST     |CI$80040190
C_Define CLIENTSITE_E_LAST      |CI$8004019FL
C_Define CLIENTSITE_S_FIRST     |CI$00040190
C_Define CLIENTSITE_S_LAST      |CI$0004019FL
//
// MessageId: INPLACE_E_NOTUNDOABLE
//
// MessageText:
//
//  Undo is not available
//
C_Define INPLACE_E_NOTUNDOABLE            |CI$800401A0

//
// MessageId: INPLACE_E_NOTOOLSPACE
//
// MessageText:
//
//  Space for tools is not available
//
C_Define INPLACE_E_NOTOOLSPACE            |CI$800401A1 

C_Define INPLACE_E_FIRST     |CI$800401A0
C_Define INPLACE_E_LAST      |CI$800401AFL
C_Define INPLACE_S_FIRST     |CI$000401A0
C_Define INPLACE_S_LAST      |CI$000401AFL
C_Define ENUM_E_FIRST        |CI$800401B0
C_Define ENUM_E_LAST         |CI$800401BFL
C_Define ENUM_S_FIRST        |CI$000401B0
C_Define ENUM_S_LAST         |CI$000401BFL
C_Define CONVERT10_E_FIRST        |CI$800401C0
C_Define CONVERT10_E_LAST         |CI$800401CFL
C_Define CONVERT10_S_FIRST        |CI$000401C0
C_Define CONVERT10_S_LAST         |CI$000401CFL
//
// MessageId: CONVERT10_E_OLESTREAM_GET
//
// MessageText:
//
//  OLESTREAM Get method failed
//
C_Define CONVERT10_E_OLESTREAM_GET        |CI$800401C0 

//
// MessageId: CONVERT10_E_OLESTREAM_PUT
//
// MessageText:
//
//  OLESTREAM Put method failed
//
C_Define CONVERT10_E_OLESTREAM_PUT        |CI$800401C1 

//
// MessageId: CONVERT10_E_OLESTREAM_FMT
//
// MessageText:
//
//  Contents of the OLESTREAM not in correct format
//
C_Define CONVERT10_E_OLESTREAM_FMT        |CI$800401C2 

//
// MessageId: CONVERT10_E_OLESTREAM_BITMAP_TO_DIB
//
// MessageText:
//
//  There was an error in a Windows GDI call while converting the bitmap to a DIB
//
C_Define CONVERT10_E_OLESTREAM_BITMAP_TO_DIB |CI$800401C3 

//
// MessageId: CONVERT10_E_STG_FMT
//
// MessageText:
//
//  Contents of the IStorage not in correct format
//
C_Define CONVERT10_E_STG_FMT              |CI$800401C4 

//
// MessageId: CONVERT10_E_STG_NO_STD_STREAM
//
// MessageText:
//
//  Contents of IStorage is missing one of the standard streams
//
C_Define CONVERT10_E_STG_NO_STD_STREAM    |CI$800401C5 

//
// MessageId: CONVERT10_E_STG_DIB_TO_BITMAP
//
// MessageText:
//
//  There was an error in a Windows GDI call while converting the DIB to a bitmap.
//  
//
C_Define CONVERT10_E_STG_DIB_TO_BITMAP    |CI$800401C6 

C_Define CLIPBRD_E_FIRST        |CI$800401D0
C_Define CLIPBRD_E_LAST         |CI$800401DFL
C_Define CLIPBRD_S_FIRST        |CI$000401D0
C_Define CLIPBRD_S_LAST         |CI$000401DFL
//
// MessageId: CLIPBRD_E_CANT_OPEN
//
// MessageText:
//
//  OpenClipboard Failed
//
C_Define CLIPBRD_E_CANT_OPEN              |CI$800401D0 

//
// MessageId: CLIPBRD_E_CANT_EMPTY
//
// MessageText:
//
//  EmptyClipboard Failed
//
C_Define CLIPBRD_E_CANT_EMPTY             |CI$800401D1 

//
// MessageId: CLIPBRD_E_CANT_SET
//
// MessageText:
//
//  SetClipboard Failed
//
C_Define CLIPBRD_E_CANT_SET               |CI$800401D2 

//
// MessageId: CLIPBRD_E_BAD_DATA
//
// MessageText:
//
//  Data on clipboard is invalid
//
C_Define CLIPBRD_E_BAD_DATA               |CI$800401D3 

//
// MessageId: CLIPBRD_E_CANT_CLOSE
//
// MessageText:
//
//  CloseClipboard Failed
//
C_Define CLIPBRD_E_CANT_CLOSE             |CI$800401D4 

C_Define MK_E_FIRST        |CI$800401E0
C_Define MK_E_LAST         |CI$800401EFL
C_Define MK_S_FIRST        |CI$000401E0
C_Define MK_S_LAST         |CI$000401EFL
//
// MessageId: MK_E_CONNECTMANUALLY
//
// MessageText:
//
//  Moniker needs to be connected manually
//
C_Define MK_E_CONNECTMANUALLY             |CI$800401E0 

//
// MessageId: MK_E_EXCEEDEDDEADLINE
//
// MessageText:
//
//  Operation exceeded deadline
//
C_Define MK_E_EXCEEDEDDEADLINE            |CI$800401E1 

//
// MessageId: MK_E_NEEDGENERIC
//
// MessageText:
//
//  Moniker needs to be generic
//
C_Define MK_E_NEEDGENERIC                 |CI$800401E2 

//
// MessageId: MK_E_UNAVAILABLE
//
// MessageText:
//
//  Operation unavailable
//
C_Define MK_E_UNAVAILABLE                 |CI$800401E3 

//
// MessageId: MK_E_SYNTAX
//
// MessageText:
//
//  Invalid syntax
//
C_Define MK_E_SYNTAX                      |CI$800401E4 

//
// MessageId: MK_E_NOOBJECT
//
// MessageText:
//
//  No object for moniker
//
C_Define MK_E_NOOBJECT                    |CI$800401E5 

//
// MessageId: MK_E_INVALIDEXTENSION
//
// MessageText:
//
//  Bad extension for file
//
C_Define MK_E_INVALIDEXTENSION            |CI$800401E6 

//
// MessageId: MK_E_INTERMEDIATEINTERFACENOTSUPPORTED
//
// MessageText:
//
//  Intermediate operation failed
//
C_Define MK_E_INTERMEDIATEINTERFACENOTSUPPORTED |CI$800401E7 

//
// MessageId: MK_E_NOTBINDABLE
//
// MessageText:
//
//  Moniker is not bindable
//
C_Define MK_E_NOTBINDABLE                 |CI$800401E8 

//
// MessageId: MK_E_NOTBOUND
//
// MessageText:
//
//  Moniker is not bound
//
C_Define MK_E_NOTBOUND                    |CI$800401E9 

//
// MessageId: MK_E_CANTOPENFILE
//
// MessageText:
//
//  Moniker cannot open file
//
C_Define MK_E_CANTOPENFILE                |CI$800401EA

//
// MessageId: MK_E_MUSTBOTHERUSER
//
// MessageText:
//
//  User input required for operation to succeed
//
C_Define MK_E_MUSTBOTHERUSER              |CI$800401EB

//
// MessageId: MK_E_NOINVERSE
//
// MessageText:
//
//  Moniker class has no inverse
//
C_Define MK_E_NOINVERSE                   |CI$800401EC

//
// MessageId: MK_E_NOSTORAGE
//
// MessageText:
//
//  Moniker does not refer to storage
//
C_Define MK_E_NOSTORAGE                   |CI$800401ED

//
// MessageId: MK_E_NOPREFIX
//
// MessageText:
//
//  No common prefix
//
C_Define MK_E_NOPREFIX                    |CI$800401EE

//
// MessageId: MK_E_ENUMERATION_FAILED
//
// MessageText:
//
//  Moniker could not be enumerated
//
C_Define MK_E_ENUMERATION_FAILED          |CI$800401EF

C_Define CO_E_FIRST        |CI$800401F0
C_Define CO_E_LAST         |CI$800401FFL
C_Define CO_S_FIRST        |CI$000401F0
C_Define CO_S_LAST         |CI$000401FFL
//
// MessageId: CO_E_NOTINITIALIZED
//
// MessageText:
//
//  CoInitialize has not been called.
//
C_Define CO_E_NOTINITIALIZED              |CI$800401F0 

//
// MessageId: CO_E_ALREADYINITIALIZED
//
// MessageText:
//
//  CoInitialize has already been called.
//
C_Define CO_E_ALREADYINITIALIZED          |CI$800401F1 

//
// MessageId: CO_E_CANTDETERMINECLASS
//
// MessageText:
//
//  Class of object cannot be determined
//
C_Define CO_E_CANTDETERMINECLASS          |CI$800401F2 

//
// MessageId: CO_E_CLASSSTRING
//
// MessageText:
//
//  Invalid class string
//
C_Define CO_E_CLASSSTRING                 |CI$800401F3 

//
// MessageId: CO_E_IIDSTRING
//
// MessageText:
//
//  Invalid interface string
//
C_Define CO_E_IIDSTRING                   |CI$800401F4 

//
// MessageId: CO_E_APPNOTFOUND
//
// MessageText:
//
//  Application not found
//
C_Define CO_E_APPNOTFOUND                 |CI$800401F5 

//
// MessageId: CO_E_APPSINGLEUSE
//
// MessageText:
//
//  Application cannot be run more than once
//
C_Define CO_E_APPSINGLEUSE                |CI$800401F6 

//
// MessageId: CO_E_ERRORINAPP
//
// MessageText:
//
//  Some error in application program
//
C_Define CO_E_ERRORINAPP                  |CI$800401F7 

//
// MessageId: CO_E_DLLNOTFOUND
//
// MessageText:
//
//  DLL for class not found
//
C_Define CO_E_DLLNOTFOUND                 |CI$800401F8 

//
// MessageId: CO_E_ERRORINDLL
//
// MessageText:
//
//  Error in the DLL
//
C_Define CO_E_ERRORINDLL                  |CI$800401F9 

//
// MessageId: CO_E_WRONGOSFORAPP
//
// MessageText:
//
//  Wrong OS or OS version for application
//
C_Define CO_E_WRONGOSFORAPP               |CI$800401FA

//
// MessageId: CO_E_OBJNOTREG
//
// MessageText:
//
//  Object is not registered
//
C_Define CO_E_OBJNOTREG                   |CI$800401FB

//
// MessageId: CO_E_OBJISREG
//
// MessageText:
//
//  Object is already registered
//
C_Define CO_E_OBJISREG                    |CI$800401FC

//
// MessageId: CO_E_OBJNOTCONNECTED
//
// MessageText:
//
//  Object is not connected to server
//
C_Define CO_E_OBJNOTCONNECTED             |CI$800401FD

//
// MessageId: CO_E_APPDIDNTREG
//
// MessageText:
//
//  Application was launched but it didn't register a class factory
//
C_Define CO_E_APPDIDNTREG                 |CI$800401FE

//
// MessageId: CO_E_RELEASED
//
// MessageText:
//
//  Object has been released
//
C_Define CO_E_RELEASED                    |CI$800401FF

//
// MessageId: CO_E_FAILEDTOIMPERSONATE
//
// MessageText:
//
//  Unable to impersonate DCOM client
//
C_Define CO_E_FAILEDTOIMPERSONATE         |CI$80040200 

//
// MessageId: CO_E_FAILEDTOGETSECCTX
//
// MessageText:
//
//  Unable to obtain server's security context
//
C_Define CO_E_FAILEDTOGETSECCTX           |CI$80040201 

//
// MessageId: CO_E_FAILEDTOOPENTHREADTOKEN
//
// MessageText:
//
//  Unable to open the access token of the current thread
//
C_Define CO_E_FAILEDTOOPENTHREADTOKEN     |CI$80040202 

//
// MessageId: CO_E_FAILEDTOGETTOKENINFO
//
// MessageText:
//
//  Unable to obtain user info from an access token
//
C_Define CO_E_FAILEDTOGETTOKENINFO        |CI$80040203 

//
// MessageId: CO_E_TRUSTEEDOESNTMATCHCLIENT
//
// MessageText:
//
//  The client who called IAccessControl::IsAccessPermitted was the trustee provided tot he method
//
C_Define CO_E_TRUSTEEDOESNTMATCHCLIENT    |CI$80040204 

//
// MessageId: CO_E_FAILEDTOQUERYCLIENTBLANKET
//
// MessageText:
//
//  Unable to obtain the client's security blanket
//
C_Define CO_E_FAILEDTOQUERYCLIENTBLANKET  |CI$80040205 

//
// MessageId: CO_E_FAILEDTOSETDACL
//
// MessageText:
//
//  Unable to set a discretionary ACL into a security descriptor
//
C_Define CO_E_FAILEDTOSETDACL             |CI$80040206 

//
// MessageId: CO_E_ACCESSCHECKFAILED
//
// MessageText:
//
//  The system function, AccessCheck, returned false
//
C_Define CO_E_ACCESSCHECKFAILED           |CI$80040207 

//
// MessageId: CO_E_NETACCESSAPIFAILED
//
// MessageText:
//
//  Either NetAccessDel or NetAccessAdd returned an error code.
//
C_Define CO_E_NETACCESSAPIFAILED          |CI$80040208 

//
// MessageId: CO_E_WRONGTRUSTEENAMESYNTAX
//
// MessageText:
//
//  One of the trustee strings provided by the user did not conform to the <Domain>\<Name> syntax and it was not the "*" string
//
C_Define CO_E_WRONGTRUSTEENAMESYNTAX      |CI$80040209 

//
// MessageId: CO_E_INVALIDSID
//
// MessageText:
//
//  One of the security identifiers provided by the user was invalid
//
C_Define CO_E_INVALIDSID                  |CI$8004020A

//
// MessageId: CO_E_CONVERSIONFAILED
//
// MessageText:
//
//  Unable to convert a wide character trustee string to a multibyte trustee string
//
C_Define CO_E_CONVERSIONFAILED            |CI$8004020B

//
// MessageId: CO_E_NOMATCHINGSIDFOUND
//
// MessageText:
//
//  Unable to find a security identifier that corresponds to a trustee string provided by the user
//
C_Define CO_E_NOMATCHINGSIDFOUND          |CI$8004020C

//
// MessageId: CO_E_LOOKUPACCSIDFAILED
//
// MessageText:
//
//  The system function, LookupAccountSID, failed
//
C_Define CO_E_LOOKUPACCSIDFAILED          |CI$8004020D

//
// MessageId: CO_E_NOMATCHINGNAMEFOUND
//
// MessageText:
//
//  Unable to find a trustee name that corresponds to a security identifier provided by the user
//
C_Define CO_E_NOMATCHINGNAMEFOUND         |CI$8004020E

//
// MessageId: CO_E_LOOKUPACCNAMEFAILED
//
// MessageText:
//
//  The system function, LookupAccountName, failed
//
C_Define CO_E_LOOKUPACCNAMEFAILED         |CI$8004020F

//
// MessageId: CO_E_SETSERLHNDLFAILED
//
// MessageText:
//
//  Unable to set or reset a serialization handle
//
C_Define CO_E_SETSERLHNDLFAILED           |CI$80040210 

//
// MessageId: CO_E_FAILEDTOGETWINDIR
//
// MessageText:
//
//  Unable to obtain the Windows directory
//
C_Define CO_E_FAILEDTOGETWINDIR           |CI$80040211 

//
// MessageId: CO_E_PATHTOOLONG
//
// MessageText:
//
//  Path too long
//
C_Define CO_E_PATHTOOLONG                 |CI$80040212 

//
// MessageId: CO_E_FAILEDTOGENUUID
//
// MessageText:
//
//  Unable to generate a uuid.
//
C_Define CO_E_FAILEDTOGENUUID             |CI$80040213 

//
// MessageId: CO_E_FAILEDTOCREATEFILE
//
// MessageText:
//
//  Unable to create file
//
C_Define CO_E_FAILEDTOCREATEFILE          |CI$80040214 

//
// MessageId: CO_E_FAILEDTOCLOSEHANDLE
//
// MessageText:
//
//  Unable to close a serialization handle or a file handle.
//
C_Define CO_E_FAILEDTOCLOSEHANDLE         |CI$80040215 

//
// MessageId: CO_E_EXCEEDSYSACLLIMIT
//
// MessageText:
//
//  The number of ACEs in an ACL exceeds the system limit
//
C_Define CO_E_EXCEEDSYSACLLIMIT           |CI$80040216 

//
// MessageId: CO_E_ACESINWRONGORDER
//
// MessageText:
//
//  Not all the DENY_ACCESS ACEs are arranged in front of the GRANT_ACCESS ACEs in the stream
//
C_Define CO_E_ACESINWRONGORDER            |CI$80040217 

//
// MessageId: CO_E_INCOMPATIBLESTREAMVERSION
//
// MessageText:
//
//  The version of ACL format in the stream is not supported by this implementation of IAccessControl
//
C_Define CO_E_INCOMPATIBLESTREAMVERSION   |CI$80040218 

//
// MessageId: CO_E_FAILEDTOOPENPROCESSTOKEN
//
// MessageText:
//
//  Unable to open the access token of the server process
//
C_Define CO_E_FAILEDTOOPENPROCESSTOKEN    |CI$80040219 

//
// MessageId: CO_E_DECODEFAILED
//
// MessageText:
//
//  Unable to decode the ACL in the stream provided by the user
//
C_Define CO_E_DECODEFAILED                |CI$8004021A

//
// MessageId: CO_E_ACNOTINITIALIZED
//
// MessageText:
//
//  The COM IAccessControl object is not initialized
//
C_Define CO_E_ACNOTINITIALIZED            |CI$8004021B

//
// Old OLE Success Codes
//
//
// MessageId: OLE_S_USEREG
//
// MessageText:
//
//  Use the registry database to provide the requested information
//
C_Define OLE_S_USEREG                     |CI$00040000 

//
// MessageId: OLE_S_STATIC
//
// MessageText:
//
//  Success, but static
//
C_Define OLE_S_STATIC                     |CI$00040001 

//
// MessageId: OLE_S_MAC_CLIPFORMAT
//
// MessageText:
//
//  Macintosh clipboard format
//
C_Define OLE_S_MAC_CLIPFORMAT             |CI$00040002 

//
// MessageId: DRAGDROP_S_DROP
//
// MessageText:
//
//  Successful drop took place
//
C_Define DRAGDROP_S_DROP                  |CI$00040100 

//
// MessageId: DRAGDROP_S_CANCEL
//
// MessageText:
//
//  Drag-drop operation canceled
//
C_Define DRAGDROP_S_CANCEL                |CI$00040101 

//
// MessageId: DRAGDROP_S_USEDEFAULTCURSORS
//
// MessageText:
//
//  Use the default cursor
//
C_Define DRAGDROP_S_USEDEFAULTCURSORS     |CI$00040102 

//
// MessageId: DATA_S_SAMEFORMATETC
//
// MessageText:
//
//  Data has same FORMATETC
//
C_Define DATA_S_SAMEFORMATETC             |CI$00040130 

//
// MessageId: VIEW_S_ALREADY_FROZEN
//
// MessageText:
//
//  View is already frozen
//
C_Define VIEW_S_ALREADY_FROZEN            |CI$00040140 

//
// MessageId: CACHE_S_FORMATETC_NOTSUPPORTED
//
// MessageText:
//
//  FORMATETC not supported
//
C_Define CACHE_S_FORMATETC_NOTSUPPORTED   |CI$00040170 

//
// MessageId: CACHE_S_SAMECACHE
//
// MessageText:
//
//  Same cache
//
C_Define CACHE_S_SAMECACHE                |CI$00040171 

//
// MessageId: CACHE_S_SOMECACHES_NOTUPDATED
//
// MessageText:
//
//  Some cache(s  not updated
//
C_Define CACHE_S_SOMECACHES_NOTUPDATED    |CI$00040172 

//
// MessageId: OLEOBJ_S_INVALIDVERB
//
// MessageText:
//
//  Invalid verb for OLE object
//
C_Define OLEOBJ_S_INVALIDVERB             |CI$00040180 

//
// MessageId: OLEOBJ_S_CANNOT_DOVERB_NOW
//
// MessageText:
//
//  Verb number is valid but verb cannot be done now
//
C_Define OLEOBJ_S_CANNOT_DOVERB_NOW       |CI$00040181 

//
// MessageId: OLEOBJ_S_INVALIDHWND
//
// MessageText:
//
//  Invalid window handle passed
//
C_Define OLEOBJ_S_INVALIDHWND             |CI$00040182 

//
// MessageId: INPLACE_S_TRUNCATED
//
// MessageText:
//
//  Message is too long; some of it had to be truncated before displaying
//
C_Define INPLACE_S_TRUNCATED              |CI$000401A0 

//
// MessageId: CONVERT10_S_NO_PRESENTATION
//
// MessageText:
//
//  Unable to convert OLESTREAM to IStorage
//
C_Define CONVERT10_S_NO_PRESENTATION      |CI$000401C0 

//
// MessageId: MK_S_REDUCED_TO_SELF
//
// MessageText:
//
//  Moniker reduced to itself
//
C_Define MK_S_REDUCED_TO_SELF             |CI$000401E2 

//
// MessageId: MK_S_ME
//
// MessageText:
//
//  Common prefix is this moniker
//
C_Define MK_S_ME                          |CI$000401E4 

//
// MessageId: MK_S_HIM
//
// MessageText:
//
//  Common prefix is input moniker
//
C_Define MK_S_HIM                         |CI$000401E5 

//
// MessageId: MK_S_US
//
// MessageText:
//
//  Common prefix is both monikers
//
C_Define MK_S_US                          |CI$000401E6 

//
// MessageId: MK_S_MONIKERALREADYREGISTERED
//
// MessageText:
//
//  Moniker is already registered in running object table
//
C_Define MK_S_MONIKERALREADYREGISTERED    |CI$000401E7 

// ******************
// FACILITY_WINDOWS
// ******************
//
// Codes |CI$0-|CI$01ff are reserved for the OLE group of
// interfaces.
//
//
// MessageId: CO_E_CLASS_CREATE_FAILED
//
// MessageText:
//
//  Attempt to create a class object failed
//
C_Define CO_E_CLASS_CREATE_FAILED         |CI$80080001 

//
// MessageId: CO_E_SCM_ERROR
//
// MessageText:
//
//  OLE service could not bind object
//
C_Define CO_E_SCM_ERROR                   |CI$80080002 

//
// MessageId: CO_E_SCM_RPC_FAILURE
//
// MessageText:
//
//  RPC communication failed with OLE service
//
C_Define CO_E_SCM_RPC_FAILURE             |CI$80080003 

//
// MessageId: CO_E_BAD_PATH
//
// MessageText:
//
//  Bad path to object
//
C_Define CO_E_BAD_PATH                    |CI$80080004 

//
// MessageId: CO_E_SERVER_EXEC_FAILURE
//
// MessageText:
//
//  Server execution failed
//
C_Define CO_E_SERVER_EXEC_FAILURE         |CI$80080005 

//
// MessageId: CO_E_OBJSRV_RPC_FAILURE
//
// MessageText:
//
//  OLE service could not communicate with the object server
//
C_Define CO_E_OBJSRV_RPC_FAILURE          |CI$80080006 

//
// MessageId: MK_E_NO_NORMALIZED
//
// MessageText:
//
//  Moniker path could not be normalized
//
C_Define MK_E_NO_NORMALIZED               |CI$80080007 

//
// MessageId: CO_E_SERVER_STOPPING
//
// MessageText:
//
//  Object server is stopping when OLE service contacts it
//
C_Define CO_E_SERVER_STOPPING             |CI$80080008 

//
// MessageId: MEM_E_INVALID_ROOT
//
// MessageText:
//
//  An invalid root block pointer was specified
//
C_Define MEM_E_INVALID_ROOT               |CI$80080009 

//
// MessageId: MEM_E_INVALID_LINK
//
// MessageText:
//
//  An allocation chain contained an invalid link pointer
//
C_Define MEM_E_INVALID_LINK               |CI$80080010 

//
// MessageId: MEM_E_INVALID_SIZE
//
// MessageText:
//
//  The requested allocation size was too large
//
C_Define MEM_E_INVALID_SIZE               |CI$80080011 

//
// MessageId: CO_S_NOTALLINTERFACES
//
// MessageText:
//
//  Not all the requested interfaces were available
//
C_Define CO_S_NOTALLINTERFACES            |CI$00080012 

// ******************
// FACILITY_DISPATCH
// ******************
//
// MessageId: DISP_E_UNKNOWNINTERFACE
//
// MessageText:
//
//  Unknown interface.
//
C_Define DISP_E_UNKNOWNINTERFACE          |CI$80020001 

//
// MessageId: DISP_E_MEMBERNOTFOUND
//
// MessageText:
//
//  Member not found.
//
C_Define DISP_E_MEMBERNOTFOUND            |CI$80020003 

//
// MessageId: DISP_E_PARAMNOTFOUND
//
// MessageText:
//
//  Parameter not found.
//
C_Define DISP_E_PARAMNOTFOUND             |CI$80020004 

//
// MessageId: DISP_E_TYPEMISMATCH
//
// MessageText:
//
//  Type mismatch.
//
C_Define DISP_E_TYPEMISMATCH              |CI$80020005 

//
// MessageId: DISP_E_UNKNOWNNAME
//
// MessageText:
//
//  Unknown name.
//
C_Define DISP_E_UNKNOWNNAME               |CI$80020006 

//
// MessageId: DISP_E_NONAMEDARGS
//
// MessageText:
//
//  No named arguments.
//
C_Define DISP_E_NONAMEDARGS               |CI$80020007 

//
// MessageId: DISP_E_BADVARTYPE
//
// MessageText:
//
//  Bad variable type.
//
C_Define DISP_E_BADVARTYPE                |CI$80020008 

//
// MessageId: DISP_E_EXCEPTION
//
// MessageText:
//
//  Exception occurred.
//
C_Define DISP_E_EXCEPTION                 |CI$80020009 

//
// MessageId: DISP_E_OVERFLOW
//
// MessageText:
//
//  Out of present range.
//
C_Define DISP_E_OVERFLOW                  |CI$8002000A

//
// MessageId: DISP_E_BADINDEX
//
// MessageText:
//
//  Invalid index.
//
C_Define DISP_E_BADINDEX                  |CI$8002000B

//
// MessageId: DISP_E_UNKNOWNLCID
//
// MessageText:
//
//  Unknown language.
//
C_Define DISP_E_UNKNOWNLCID               |CI$8002000C

//
// MessageId: DISP_E_ARRAYISLOCKED
//
// MessageText:
//
//  Memory is locked.
//
C_Define DISP_E_ARRAYISLOCKED             |CI$8002000D

//
// MessageId: DISP_E_BADPARAMCOUNT
//
// MessageText:
//
//  Invalid number of parameters.
//
C_Define DISP_E_BADPARAMCOUNT             |CI$8002000E

//
// MessageId: DISP_E_PARAMNOTOPTIONAL
//
// MessageText:
//
//  Parameter not optional.
//
C_Define DISP_E_PARAMNOTOPTIONAL          |CI$8002000F

//
// MessageId: DISP_E_BADCALLEE
//
// MessageText:
//
//  Invalid callee.
//
C_Define DISP_E_BADCALLEE                 |CI$80020010 

//
// MessageId: DISP_E_NOTACOLLECTION
//
// MessageText:
//
//  Does not support a collection.
//
C_Define DISP_E_NOTACOLLECTION            |CI$80020011 

//
// MessageId: DISP_E_DIVBYZERO
//
// MessageText:
//
//  Division by zero.
//
C_Define DISP_E_DIVBYZERO                 |CI$80020012 

//
// MessageId: TYPE_E_BUFFERTOOSMALL
//
// MessageText:
//
//  Buffer too small.
//
C_Define TYPE_E_BUFFERTOOSMALL            |CI$80028016 

//
// MessageId: TYPE_E_FIELDNOTFOUND
//
// MessageText:
//
//  Field name not C_Defined in the record.
//
C_Define TYPE_E_FIELDNOTFOUND             |CI$80028017 

//
// MessageId: TYPE_E_INVDATAREAD
//
// MessageText:
//
//  Old format or invalid type library.
//
C_Define TYPE_E_INVDATAREAD               |CI$80028018 

//
// MessageId: TYPE_E_UNSUPFORMAT
//
// MessageText:
//
//  Old format or invalid type library.
//
C_Define TYPE_E_UNSUPFORMAT               |CI$80028019 

//
// MessageId: TYPE_E_REGISTRYACCESS
//
// MessageText:
//
//  Error accessing the OLE registry.
//
C_Define TYPE_E_REGISTRYACCESS            |CI$8002801C

//
// MessageId: TYPE_E_LIBNOTREGISTERED
//
// MessageText:
//
//  Library not registered.
//
C_Define TYPE_E_LIBNOTREGISTERED          |CI$8002801D

//
// MessageId: TYPE_E_UNC_DefineDTYPE
//
// MessageText:
//
//  Bound to unknown type.
//
C_Define TYPE_E_UNC_DefineDTYPE             |CI$80028027 

//
// MessageId: TYPE_E_QUALIFIEDNAMEDISALLOWED
//
// MessageText:
//
//  Qualified name disallowed.
//
C_Define TYPE_E_QUALIFIEDNAMEDISALLOWED   |CI$80028028 

//
// MessageId: TYPE_E_INVALIDSTATE
//
// MessageText:
//
//  Invalid forward reference, or reference to uncompiled type.
//
C_Define TYPE_E_INVALIDSTATE              |CI$80028029 

//
// MessageId: TYPE_E_WRONGTYPEKIND
//
// MessageText:
//
//  Type mismatch.
//
C_Define TYPE_E_WRONGTYPEKIND             |CI$8002802A

//
// MessageId: TYPE_E_ELEMENTNOTFOUND
//
// MessageText:
//
//  Element not found.
//
C_Define TYPE_E_ELEMENTNOTFOUND           |CI$8002802B

//
// MessageId: TYPE_E_AMBIGUOUSNAME
//
// MessageText:
//
//  Ambiguous name.
//
C_Define TYPE_E_AMBIGUOUSNAME             |CI$8002802C

//
// MessageId: TYPE_E_NAMECONFLICT
//
// MessageText:
//
//  Name already exists in the library.
//
C_Define TYPE_E_NAMECONFLICT              |CI$8002802D

//
// MessageId: TYPE_E_UNKNOWNLCID
//
// MessageText:
//
//  Unknown LCID.
//
C_Define TYPE_E_UNKNOWNLCID               |CI$8002802E

//
// MessageId: TYPE_E_DLLFUNCTIONNOTFOUND
//
// MessageText:
//
//  Function not C_Defined in specified DLL.
//
C_Define TYPE_E_DLLFUNCTIONNOTFOUND       |CI$8002802F

//
// MessageId: TYPE_E_BADMODULEKIND
//
// MessageText:
//
//  Wrong module kind for the operation.
//
C_Define TYPE_E_BADMODULEKIND             |CI$800288BD

//
// MessageId: TYPE_E_SIZETOOBIG
//
// MessageText:
//
//  Size may not exceed 64K.
//
C_Define TYPE_E_SIZETOOBIG                |CI$800288C5 

//
// MessageId: TYPE_E_DUPLICATEID
//
// MessageText:
//
//  Duplicate ID in inheritance hierarchy.
//
C_Define TYPE_E_DUPLICATEID               |CI$800288C6 

//
// MessageId: TYPE_E_INVALIDID
//
// MessageText:
//
//  Incorrect inheritance depth in standard OLE hmember.
//
C_Define TYPE_E_INVALIDID                 |CI$800288CF

//
// MessageId: TYPE_E_TYPEMISMATCH
//
// MessageText:
//
//  Type mismatch.
//
C_Define TYPE_E_TYPEMISMATCH              |CI$80028CA0 

//
// MessageId: TYPE_E_OUTOFBOUNDS
//
// MessageText:
//
//  Invalid number of arguments.
//
C_Define TYPE_E_OUTOFBOUNDS               |CI$80028CA1 

//
// MessageId: TYPE_E_IOERROR
//
// MessageText:
//
//  I/O Error.
//
C_Define TYPE_E_IOERROR                   |CI$80028CA2 

//
// MessageId: TYPE_E_CANTCREATETMPFILE
//
// MessageText:
//
//  Error creating unique tmp file.
//
C_Define TYPE_E_CANTCREATETMPFILE         |CI$80028CA3 

//
// MessageId: TYPE_E_CANTLOADLIBRARY
//
// MessageText:
//
//  Error loading type library/DLL.
//
C_Define TYPE_E_CANTLOADLIBRARY           |CI$80029C4A

//
// MessageId: TYPE_E_INCONSISTENTPROPFUNCS
//
// MessageText:
//
//  Inconsistent property functions.
//
C_Define TYPE_E_INCONSISTENTPROPFUNCS     |CI$80029C83 

//
// MessageId: TYPE_E_CIRCULARTYPE
//
// MessageText:
//
//  Circular dependency between types/modules.
//
C_Define TYPE_E_CIRCULARTYPE              |CI$80029C84 

// ******************
// FACILITY_STORAGE
// ******************
//
// MessageId: STG_E_INVALIDFUNCTION
//
// MessageText:
//
//  Unable to perform requested operation.
//
C_Define STG_E_INVALIDFUNCTION            |CI$80030001 

//
// MessageId: STG_E_FILENOTFOUND
//
// MessageText:
//
//  %1 could not be found.
//
C_Define STG_E_FILENOTFOUND               |CI$80030002 

//
// MessageId: STG_E_PATHNOTFOUND
//
// MessageText:
//
//  The path %1 could not be found.
//
C_Define STG_E_PATHNOTFOUND               |CI$80030003 

//
// MessageId: STG_E_TOOMANYOPENFILES
//
// MessageText:
//
//  There are insufficient resources to open another file.
//
C_Define STG_E_TOOMANYOPENFILES           |CI$80030004 

//
// MessageId: STG_E_ACCESSDENIED
//
// MessageText:
//
//  Access Denied.
//
C_Define STG_E_ACCESSDENIED               |CI$80030005 

//
// MessageId: STG_E_INVALIDHANDLE
//
// MessageText:
//
//  Attempted an operation on an invalid object.
//
C_Define STG_E_INVALIDHANDLE              |CI$80030006 

//
// MessageId: STG_E_INSUFFICIENTMEMORY
//
// MessageText:
//
//  There is insufficient memory available to complete operation.
//
C_Define STG_E_INSUFFICIENTMEMORY         |CI$80030008 

//
// MessageId: STG_E_INVALIDPOINTER
//
// MessageText:
//
//  Invalid pointer error.
//
C_Define STG_E_INVALIDPOINTER             |CI$80030009 

//
// MessageId: STG_E_NOMOREFILES
//
// MessageText:
//
//  There are no more entries to return.
//
C_Define STG_E_NOMOREFILES                |CI$80030012 

//
// MessageId: STG_E_DISKISWRITEPROTECTED
//
// MessageText:
//
//  Disk is write-protected.
//
C_Define STG_E_DISKISWRITEPROTECTED       |CI$80030013 

//
// MessageId: STG_E_SEEKERROR
//
// MessageText:
//
//  An error occurred during a seek operation.
//
C_Define STG_E_SEEKERROR                  |CI$80030019 

//
// MessageId: STG_E_WRITEFAULT
//
// MessageText:
//
//  A disk error occurred during a write operation.
//
C_Define STG_E_WRITEFAULT                 |CI$8003001D

//
// MessageId: STG_E_READFAULT
//
// MessageText:
//
//  A disk error occurred during a read operation.
//
C_Define STG_E_READFAULT                  |CI$8003001E

//
// MessageId: STG_E_SHAREVIOLATION
//
// MessageText:
//
//  A share violation has occurred.
//
C_Define STG_E_SHAREVIOLATION             |CI$80030020 

//
// MessageId: STG_E_LOCKVIOLATION
//
// MessageText:
//
//  A lock violation has occurred.
//
C_Define STG_E_LOCKVIOLATION              |CI$80030021 

//
// MessageId: STG_E_FILEALREADYEXISTS
//
// MessageText:
//
//  %1 already exists.
//
C_Define STG_E_FILEALREADYEXISTS          |CI$80030050 

//
// MessageId: STG_E_INVALIDPARAMETER
//
// MessageText:
//
//  Invalid parameter error.
//
C_Define STG_E_INVALIDPARAMETER           |CI$80030057 

//
// MessageId: STG_E_MEDIUMFULL
//
// MessageText:
//
//  There is insufficient disk space to complete operation.
//
C_Define STG_E_MEDIUMFULL                 |CI$80030070 

//
// MessageId: STG_E_PROPSETMISMATCHED
//
// MessageText:
//
//  Illegal write of non-simple property to simple property set.
//
C_Define STG_E_PROPSETMISMATCHED          |CI$800300F0 

//
// MessageId: STG_E_ABNORMALAPIEXIT
//
// MessageText:
//
//  An API call exited abnormally.
//
C_Define STG_E_ABNORMALAPIEXIT            |CI$800300FA

//
// MessageId: STG_E_INVALIDHEADER
//
// MessageText:
//
//  The file %1 is not a valid compound file.
//
C_Define STG_E_INVALIDHEADER              |CI$800300FB

//
// MessageId: STG_E_INVALIDNAME
//
// MessageText:
//
//  The name %1 is not valid.
//
C_Define STG_E_INVALIDNAME                |CI$800300FC

//
// MessageId: STG_E_UNKNOWN
//
// MessageText:
//
//  An unexpected error occurred.
//
C_Define STG_E_UNKNOWN                    |CI$800300FD

//
// MessageId: STG_E_UNIMPLEMENTEDFUNCTION
//
// MessageText:
//
//  That function is not implemented.
//
C_Define STG_E_UNIMPLEMENTEDFUNCTION      |CI$800300FE

//
// MessageId: STG_E_INVALIDFLAG
//
// MessageText:
//
//  Invalid flag error.
//
C_Define STG_E_INVALIDFLAG                |CI$800300FF

//
// MessageId: STG_E_INUSE
//
// MessageText:
//
//  Attempted to use an object that is busy.
//
C_Define STG_E_INUSE                      |CI$80030100 

//
// MessageId: STG_E_NOTCURRENT
//
// MessageText:
//
//  The storage has been changed since the last commit.
//
C_Define STG_E_NOTCURRENT                 |CI$80030101 

//
// MessageId: STG_E_REVERTED
//
// MessageText:
//
//  Attempted to use an object that has ceased to exist.
//
C_Define STG_E_REVERTED                   |CI$80030102 

//
// MessageId: STG_E_CANTSAVE
//
// MessageText:
//
//  Can't save.
//
C_Define STG_E_CANTSAVE                   |CI$80030103 

//
// MessageId: STG_E_OLDFORMAT
//
// MessageText:
//
//  The compound file %1 was produced with an incompatible version of storage.
//
C_Define STG_E_OLDFORMAT                  |CI$80030104 

//
// MessageId: STG_E_OLDDLL
//
// MessageText:
//
//  The compound file %1 was produced with a newer version of storage.
//
C_Define STG_E_OLDDLL                     |CI$80030105 

//
// MessageId: STG_E_SHAREREQUIRED
//
// MessageText:
//
//  Share.exe or equivalent is required for operation.
//
C_Define STG_E_SHAREREQUIRED              |CI$80030106 

//
// MessageId: STG_E_NOTFILEBASEDSTORAGE
//
// MessageText:
//
//  Illegal operation called on non-file based storage.
//
C_Define STG_E_NOTFILEBASEDSTORAGE        |CI$80030107 

//
// MessageId: STG_E_EXTANTMARSHALLINGS
//
// MessageText:
//
//  Illegal operation called on object with extant marshallings.
//
C_Define STG_E_EXTANTMARSHALLINGS         |CI$80030108 

//
// MessageId: STG_E_DOCFILECORRUPT
//
// MessageText:
//
//  The docfile has been corrupted.
//
C_Define STG_E_DOCFILECORRUPT             |CI$80030109 

//
// MessageId: STG_E_BADBASEADDRESS
//
// MessageText:
//
//  OLE32.DLL has been loaded at the wrong address.
//
C_Define STG_E_BADBASEADDRESS             |CI$80030110 

//
// MessageId: STG_E_INCOMPLETE
//
// MessageText:
//
//  The file download was aborted abnormally.  The file is incomplete.
//
C_Define STG_E_INCOMPLETE                 |CI$80030201 

//
// MessageId: STG_E_TERMINATED
//
// MessageText:
//
//  The file download has been terminated.
//
C_Define STG_E_TERMINATED                 |CI$80030202 

//
// MessageId: STG_S_CONVERTED
//
// MessageText:
//
//  The underlying file was converted to compound file format.
//
C_Define STG_S_CONVERTED                  |CI$00030200 

//
// MessageId: STG_S_BLOCK
//
// MessageText:
//
//  The storage operation should block until more data is available.
//
C_Define STG_S_BLOCK                      |CI$00030201 

//
// MessageId: STG_S_RETRYNOW
//
// MessageText:
//
//  The storage operation should retry immediately.
//
C_Define STG_S_RETRYNOW                   |CI$00030202 

//
// MessageId: STG_S_MONITORING
//
// MessageText:
//
//  The notified event sink will not influence the storage operation.
//
C_Define STG_S_MONITORING                 |CI$00030203 

//
// MessageId: STG_S_MULTIPLEOPENS
//
// MessageText:
//
//  Multiple opens prevent consolidated. (commit succeeded .
//
C_Define STG_S_MULTIPLEOPENS              |CI$00030204 

//
// MessageId: STG_S_CONSOLIDATIONFAILED
//
// MessageText:
//
//  Consolidation of the storage file failed. (commit succeeded .
//
C_Define STG_S_CONSOLIDATIONFAILED        |CI$00030205 

//
// MessageId: STG_S_CANNOTCONSOLIDATE
//
// MessageText:
//
//  Consolidation of the storage file is inappropriate. (commit succeeded .
//
C_Define STG_S_CANNOTCONSOLIDATE          |CI$00030206 

// ******************
// FACILITY_RPC
// ******************
//
// Codes |CI$0-|CI$11 are propagated from 16 bit OLE.
//
//
// MessageId: RPC_E_CALL_REJECTED
//
// MessageText:
//
//  Call was rejected by callee.
//
C_Define RPC_E_CALL_REJECTED              |CI$80010001 

//
// MessageId: RPC_E_CALL_CANCELED
//
// MessageText:
//
//  Call was canceled by the message filter.
//
C_Define RPC_E_CALL_CANCELED              |CI$80010002 

//
// MessageId: RPC_E_CANTPOST_INSENDCALL
//
// MessageText:
//
//  The caller is dispatching an intertask SendMessage call and
//  cannot call out via PostMessage.
//
C_Define RPC_E_CANTPOST_INSENDCALL        |CI$80010003 

//
// MessageId: RPC_E_CANTCALLOUT_INASYNCCALL
//
// MessageText:
//
//  The caller is dispatching an asynchronous call and cannot
//  make an outgoing call on behalf of this call.
//
C_Define RPC_E_CANTCALLOUT_INASYNCCALL    |CI$80010004 

//
// MessageId: RPC_E_CANTCALLOUT_INEXTERNALCALL
//
// MessageText:
//
//  It is illegal to call out while inside message filter.
//
C_Define RPC_E_CANTCALLOUT_INEXTERNALCALL |CI$80010005 

//
// MessageId: RPC_E_CONNECTION_TERMINATED
//
// MessageText:
//
//  The connection terminated or is in a bogus state
//  and cannot be used any more. Other connections
//  are still valid.
//
C_Define RPC_E_CONNECTION_TERMINATED      |CI$80010006 

//
// MessageId: RPC_E_SERVER_DIED
//
// MessageText:
//
//  The callee (server [not server application]  is not available
//  and disappeared; all connections are invalid.  The call may
//  have executed.
//
C_Define RPC_E_SERVER_DIED                |CI$80010007 

//
// MessageId: RPC_E_CLIENT_DIED
//
// MessageText:
//
//  The caller (client  disappeared while the callee (server  was
//  processing a call.
//
C_Define RPC_E_CLIENT_DIED                |CI$80010008 

//
// MessageId: RPC_E_INVALID_DATAPACKET
//
// MessageText:
//
//  The data packet with the marshalled parameter data is incorrect.
//
C_Define RPC_E_INVALID_DATAPACKET         |CI$80010009 

//
// MessageId: RPC_E_CANTTRANSMIT_CALL
//
// MessageText:
//
//  The call was not transmitted properly; the message queue
//  was full and was not emptied after yielding.
//
C_Define RPC_E_CANTTRANSMIT_CALL          |CI$8001000A

//
// MessageId: RPC_E_CLIENT_CANTMARSHAL_DATA
//
// MessageText:
//
//  The client (caller  cannot marshall the parameter data - low memory, etc.
//
C_Define RPC_E_CLIENT_CANTMARSHAL_DATA    |CI$8001000B

//
// MessageId: RPC_E_CLIENT_CANTUNMARSHAL_DATA
//
// MessageText:
//
//  The client (caller  cannot unmarshall the return data - low memory, etc.
//
C_Define RPC_E_CLIENT_CANTUNMARSHAL_DATA  |CI$8001000C

//
// MessageId: RPC_E_SERVER_CANTMARSHAL_DATA
//
// MessageText:
//
//  The server (callee  cannot marshall the return data - low memory, etc.
//
C_Define RPC_E_SERVER_CANTMARSHAL_DATA    |CI$8001000D

//
// MessageId: RPC_E_SERVER_CANTUNMARSHAL_DATA
//
// MessageText:
//
//  The server (callee  cannot unmarshall the parameter data - low memory, etc.
//
C_Define RPC_E_SERVER_CANTUNMARSHAL_DATA  |CI$8001000E

//
// MessageId: RPC_E_INVALID_DATA
//
// MessageText:
//
//  Received data is invalid; could be server or client data.
//
C_Define RPC_E_INVALID_DATA               |CI$8001000F

//
// MessageId: RPC_E_INVALID_PARAMETER
//
// MessageText:
//
//  A particular parameter is invalid and cannot be (un marshalled.
//
C_Define RPC_E_INVALID_PARAMETER          |CI$80010010 

//
// MessageId: RPC_E_CANTCALLOUT_AGAIN
//
// MessageText:
//
//  There is no second outgoing call on same channel in DDE conversation.
//
C_Define RPC_E_CANTCALLOUT_AGAIN          |CI$80010011 

//
// MessageId: RPC_E_SERVER_DIED_DNE
//
// MessageText:
//
//  The callee (server [not server application]  is not available
//  and disappeared; all connections are invalid.  The call did not execute.
//
C_Define RPC_E_SERVER_DIED_DNE            |CI$80010012 

//
// MessageId: RPC_E_SYS_CALL_FAILED
//
// MessageText:
//
//  System call failed.
//
C_Define RPC_E_SYS_CALL_FAILED            |CI$80010100 

//
// MessageId: RPC_E_OUT_OF_RESOURCES
//
// MessageText:
//
//  Could not allocate some required resource (memory, events, ... 
//
C_Define RPC_E_OUT_OF_RESOURCES           |CI$80010101 

//
// MessageId: RPC_E_ATTEMPTED_MULTITHREAD
//
// MessageText:
//
//  Attempted to make calls on more than one thread in single threaded mode.
//
C_Define RPC_E_ATTEMPTED_MULTITHREAD      |CI$80010102 

//
// MessageId: RPC_E_NOT_REGISTERED
//
// MessageText:
//
//  The requested interface is not registered on the server object.
//
C_Define RPC_E_NOT_REGISTERED             |CI$80010103 

//
// MessageId: RPC_E_FAULT
//
// MessageText:
//
//  RPC could not call the server or could not return the results of calling the server.
//
C_Define RPC_E_FAULT                      |CI$80010104 

//
// MessageId: RPC_E_SERVERFAULT
//
// MessageText:
//
//  The server threw an exception.
//
C_Define RPC_E_SERVERFAULT                |CI$80010105 

//
// MessageId: RPC_E_CHANGED_MODE
//
// MessageText:
//
//  Cannot change thread mode after it is set.
//
C_Define RPC_E_CHANGED_MODE               |CI$80010106 

//
// MessageId: RPC_E_INVALIDMETHOD
//
// MessageText:
//
//  The method called does not exist on the server.
//
C_Define RPC_E_INVALIDMETHOD              |CI$80010107 

//
// MessageId: RPC_E_DISCONNECTED
//
// MessageText:
//
//  The object invoked has disconnected from its clients.
//
C_Define RPC_E_DISCONNECTED               |CI$80010108 

//
// MessageId: RPC_E_RETRY
//
// MessageText:
//
//  The object invoked chose not to process the call now.  Try again later.
//
C_Define RPC_E_RETRY                      |CI$80010109 

//
// MessageId: RPC_E_SERVERCALL_RETRYLATER
//
// MessageText:
//
//  The message filter indicated that the application is busy.
//
C_Define RPC_E_SERVERCALL_RETRYLATER      |CI$8001010A

//
// MessageId: RPC_E_SERVERCALL_REJECTED
//
// MessageText:
//
//  The message filter rejected the call.
//
C_Define RPC_E_SERVERCALL_REJECTED        |CI$8001010B

//
// MessageId: RPC_E_INVALID_CALLDATA
//
// MessageText:
//
//  A call control interfaces was called with invalid data.
//
C_Define RPC_E_INVALID_CALLDATA           |CI$8001010C

//
// MessageId: RPC_E_CANTCALLOUT_ININPUTSYNCCALL
//
// MessageText:
//
//  An outgoing call cannot be made since the application is dispatching an input-synchronous call.
//
C_Define RPC_E_CANTCALLOUT_ININPUTSYNCCALL |CI$8001010D

//
// MessageId: RPC_E_WRONG_THREAD
//
// MessageText:
//
//  The application called an interface that was marshalled for a different thread.
//
C_Define RPC_E_WRONG_THREAD               |CI$8001010E

//
// MessageId: RPC_E_THREAD_NOT_INIT
//
// MessageText:
//
//  CoInitialize has not been called on the current thread.
//
C_Define RPC_E_THREAD_NOT_INIT            |CI$8001010F

//
// MessageId: RPC_E_VERSION_MISMATCH
//
// MessageText:
//
//  The version of OLE on the client and server machines does not match.
//
C_Define RPC_E_VERSION_MISMATCH           |CI$80010110 

//
// MessageId: RPC_E_INVALID_HEADER
//
// MessageText:
//
//  OLE received a packet with an invalid header.
//
C_Define RPC_E_INVALID_HEADER             |CI$80010111 

//
// MessageId: RPC_E_INVALID_EXTENSION
//
// MessageText:
//
//  OLE received a packet with an invalid extension.
//
C_Define RPC_E_INVALID_EXTENSION          |CI$80010112 

//
// MessageId: RPC_E_INVALID_IPID
//
// MessageText:
//
//  The requested object or interface does not exist.
//
C_Define RPC_E_INVALID_IPID               |CI$80010113 

//
// MessageId: RPC_E_INVALID_OBJECT
//
// MessageText:
//
//  The requested object does not exist.
//
C_Define RPC_E_INVALID_OBJECT             |CI$80010114 

//
// MessageId: RPC_S_CALLPENDING
//
// MessageText:
//
//  OLE has sent a request and is waiting for a reply.
//
C_Define RPC_S_CALLPENDING                |CI$80010115 

//
// MessageId: RPC_S_WAITONTIMER
//
// MessageText:
//
//  OLE is waiting before retrying a request.
//
C_Define RPC_S_WAITONTIMER                |CI$80010116 

//
// MessageId: RPC_E_CALL_COMPLETE
//
// MessageText:
//
//  Call context cannot be accessed after call completed.
//
C_Define RPC_E_CALL_COMPLETE              |CI$80010117 

//
// MessageId: RPC_E_UNSECURE_CALL
//
// MessageText:
//
//  Impersonate on unsecure calls is not supported.
//
C_Define RPC_E_UNSECURE_CALL              |CI$80010118 

//
// MessageId: RPC_E_TOO_LATE
//
// MessageText:
//
//  Security must be initialized before any interfaces are marshalled or
//  unmarshalled.  It cannot be changed once initialized.
//
C_Define RPC_E_TOO_LATE                   |CI$80010119 

//
// MessageId: RPC_E_NO_GOOD_SECURITY_PACKAGES
//
// MessageText:
//
//  No security packages are installed on this machine or the user is not logged
//  on or there are no compatible security packages between the client and server.
//
C_Define RPC_E_NO_GOOD_SECURITY_PACKAGES  |CI$8001011A

//
// MessageId: RPC_E_ACCESS_DENIED
//
// MessageText:
//
//  Access is denied.
//
C_Define RPC_E_ACCESS_DENIED              |CI$8001011B

//
// MessageId: RPC_E_REMOTE_DISABLED
//
// MessageText:
//
//  Remote calls are not allowed for this process.
//
C_Define RPC_E_REMOTE_DISABLED            |CI$8001011C

//
// MessageId: RPC_E_INVALID_OBJREF
//
// MessageText:
//
//  The marshaled interface data packet (OBJREF  has an invalid or unknown format.
//
C_Define RPC_E_INVALID_OBJREF             |CI$8001011D

//
// MessageId: RPC_E_NO_CONTEXT
//
// MessageText:
//
//  No context is associated with this call.  This happens for some custom
//  marshalled calls and on the client side of the call.
//
C_Define RPC_E_NO_CONTEXT                 |CI$8001011E

//
// MessageId: RPC_E_TIMEOUT
//
// MessageText:
//
//  This operation returned because the timeout period expired.
//
C_Define RPC_E_TIMEOUT                    |CI$8001011F

//
// MessageId: RPC_E_NO_SYNC
//
// MessageText:
//
//  There are no synchronize objects to wait on.
//
C_Define RPC_E_NO_SYNC                    |CI$80010120 

//
// MessageId: RPC_E_UNEXPECTED
//
// MessageText:
//
//  An internal error occurred.
//
C_Define RPC_E_UNEXPECTED                 |CI$8001FFFF


 /////////////////
 //
 //  FACILITY_SSPI
 //
 /////////////////

//
// MessageId: NTE_BAD_UID
//
// MessageText:
//
//  Bad UID.
//
C_Define NTE_BAD_UID                      |CI$80090001 

//
// MessageId: NTE_BAD_HASH
//
// MessageText:
//
//  Bad Hash.
//
C_Define NTE_BAD_HASH                     |CI$80090002 

//
// MessageId: NTE_BAD_KEY
//
// MessageText:
//
//  Bad Key.
//
C_Define NTE_BAD_KEY                      |CI$80090003 

//
// MessageId: NTE_BAD_LEN
//
// MessageText:
//
//  Bad Length.
//
C_Define NTE_BAD_LEN                      |CI$80090004 

//
// MessageId: NTE_BAD_DATA
//
// MessageText:
//
//  Bad Data.
//
C_Define NTE_BAD_DATA                     |CI$80090005 

//
// MessageId: NTE_BAD_SIGNATURE
//
// MessageText:
//
//  Invalid Signature.
//
C_Define NTE_BAD_SIGNATURE                |CI$80090006 

//
// MessageId: NTE_BAD_VER
//
// MessageText:
//
//  Bad Version of provider.
//
C_Define NTE_BAD_VER                      |CI$80090007 

//
// MessageId: NTE_BAD_ALGID
//
// MessageText:
//
//  Invalid algorithm specified.
//
C_Define NTE_BAD_ALGID                    |CI$80090008 

//
// MessageId: NTE_BAD_FLAGS
//
// MessageText:
//
//  Invalid flags specified.
//
C_Define NTE_BAD_FLAGS                    |CI$80090009 

//
// MessageId: NTE_BAD_TYPE
//
// MessageText:
//
//  Invalid type specified.
//
C_Define NTE_BAD_TYPE                     |CI$8009000A

//
// MessageId: NTE_BAD_KEY_STATE
//
// MessageText:
//
//  Key not valid for use in specified state.
//
C_Define NTE_BAD_KEY_STATE                |CI$8009000B

//
// MessageId: NTE_BAD_HASH_STATE
//
// MessageText:
//
//  Hash not valid for use in specified state.
//
C_Define NTE_BAD_HASH_STATE               |CI$8009000C

//
// MessageId: NTE_NO_KEY
//
// MessageText:
//
//  Key does not exist.
//
C_Define NTE_NO_KEY                       |CI$8009000D

//
// MessageId: NTE_NO_MEMORY
//
// MessageText:
//
//  Insufficient memory available for the operation.
//
C_Define NTE_NO_MEMORY                    |CI$8009000E

//
// MessageId: NTE_EXISTS
//
// MessageText:
//
//  Object already exists.
//
C_Define NTE_EXISTS                       |CI$8009000F

//
// MessageId: NTE_PERM
//
// MessageText:
//
//  Access denied.
//
C_Define NTE_PERM                         |CI$80090010 

//
// MessageId: NTE_NOT_FOUND
//
// MessageText:
//
//  Object was not found.
//
C_Define NTE_NOT_FOUND                    |CI$80090011 

//
// MessageId: NTE_DOUBLE_ENCRYPT
//
// MessageText:
//
//  Data already encrypted.
//
C_Define NTE_DOUBLE_ENCRYPT               |CI$80090012 

//
// MessageId: NTE_BAD_PROVIDER
//
// MessageText:
//
//  Invalid provider specified.
//
C_Define NTE_BAD_PROVIDER                 |CI$80090013 

//
// MessageId: NTE_BAD_PROV_TYPE
//
// MessageText:
//
//  Invalid provider type specified.
//
C_Define NTE_BAD_PROV_TYPE                |CI$80090014 

//
// MessageId: NTE_BAD_PUBLIC_KEY
//
// MessageText:
//
//  Provider's public key is invalid.
//
C_Define NTE_BAD_PUBLIC_KEY               |CI$80090015 

//
// MessageId: NTE_BAD_KEYSET
//
// MessageText:
//
//  Keyset does not exist
//
C_Define NTE_BAD_KEYSET                   |CI$80090016 

//
// MessageId: NTE_PROV_TYPE_NOT_DEF
//
// MessageText:
//
//  Provider type not C_Defined.
//
C_Define NTE_PROV_TYPE_NOT_DEF            |CI$80090017 

//
// MessageId: NTE_PROV_TYPE_ENTRY_BAD
//
// MessageText:
//
//  Provider type as registered is invalid.
//
C_Define NTE_PROV_TYPE_ENTRY_BAD          |CI$80090018 

//
// MessageId: NTE_KEYSET_NOT_DEF
//
// MessageText:
//
//  The keyset is not C_Defined.
//
C_Define NTE_KEYSET_NOT_DEF               |CI$80090019 

//
// MessageId: NTE_KEYSET_ENTRY_BAD
//
// MessageText:
//
//  Keyset as registered is invalid.
//
C_Define NTE_KEYSET_ENTRY_BAD             |CI$8009001A

//
// MessageId: NTE_PROV_TYPE_NO_MATCH
//
// MessageText:
//
//  Provider type does not match registered value.
//
C_Define NTE_PROV_TYPE_NO_MATCH           |CI$8009001B

//
// MessageId: NTE_SIGNATURE_FILE_BAD
//
// MessageText:
//
//  The digital signature file is corrupt.
//
C_Define NTE_SIGNATURE_FILE_BAD           |CI$8009001C

//
// MessageId: NTE_PROVIDER_DLL_FAIL
//
// MessageText:
//
//  Provider DLL failed to initialize correctly.
//
C_Define NTE_PROVIDER_DLL_FAIL            |CI$8009001D

//
// MessageId: NTE_PROV_DLL_NOT_FOUND
//
// MessageText:
//
//  Provider DLL could not be found.
//
C_Define NTE_PROV_DLL_NOT_FOUND           |CI$8009001E

//
// MessageId: NTE_BAD_KEYSET_PARAM
//
// MessageText:
//
//  The Keyset parameter is invalid.
//
C_Define NTE_BAD_KEYSET_PARAM             |CI$8009001F

//
// MessageId: NTE_FAIL
//
// MessageText:
//
//  An internal error occurred.
//
C_Define NTE_FAIL                         |CI$80090020 

//
// MessageId: NTE_SYS_ERR
//
// MessageText:
//
//  A base error occurred.
//
C_Define NTE_SYS_ERR                      |CI$80090021 

//
// MessageId: CRYPT_E_MSG_ERROR
//
// MessageText:
//
//  An error was encountered doing a cryptographic message operation.
//
C_Define CRYPT_E_MSG_ERROR                |CI$80091001 

//
// MessageId: CRYPT_E_UNKNOWN_ALGO
//
// MessageText:
//
//  The cryptographic algorithm is unknown.
//
C_Define CRYPT_E_UNKNOWN_ALGO             |CI$80091002 

//
// MessageId: CRYPT_E_OID_FORMAT
//
// MessageText:
//
//  The object identifier is badly formatted.
//
C_Define CRYPT_E_OID_FORMAT               |CI$80091003 

//
// MessageId: CRYPT_E_INVALID_MSG_TYPE
//
// MessageText:
//
//  The message type is invalid.
//
C_Define CRYPT_E_INVALID_MSG_TYPE         |CI$80091004 

//
// MessageId: CRYPT_E_UNEXPECTED_ENCODING
//
// MessageText:
//
//  The message is not encoded as expected.
//
C_Define CRYPT_E_UNEXPECTED_ENCODING      |CI$80091005 

//
// MessageId: CRYPT_E_AUTH_ATTR_MISSING
//
// MessageText:
//
//  The message does not contain an expected authenticated attribute.
//
C_Define CRYPT_E_AUTH_ATTR_MISSING        |CI$80091006 

//
// MessageId: CRYPT_E_HASH_VALUE
//
// MessageText:
//
//  The hash value is not correct.
//
C_Define CRYPT_E_HASH_VALUE               |CI$80091007 

//
// MessageId: CRYPT_E_INVALID_INDEX
//
// MessageText:
//
//  The index value is not valid.
//
C_Define CRYPT_E_INVALID_INDEX            |CI$80091008 

//
// MessageId: CRYPT_E_ALREADY_DECRYPTED
//
// MessageText:
//
//  The message content has already been decrypted.
//
C_Define CRYPT_E_ALREADY_DECRYPTED        |CI$80091009 

//
// MessageId: CRYPT_E_NOT_DECRYPTED
//
// MessageText:
//
//  The message content has not been decrypted yet.
//
C_Define CRYPT_E_NOT_DECRYPTED            |CI$8009100A

//
// MessageId: CRYPT_E_RECIPIENT_NOT_FOUND
//
// MessageText:
//
//  The enveloped-data message does not contain the specified recipient.
//
C_Define CRYPT_E_RECIPIENT_NOT_FOUND      |CI$8009100B

//
// MessageId: CRYPT_E_CONTROL_TYPE
//
// MessageText:
//
//  The control type is not valid.
//
C_Define CRYPT_E_CONTROL_TYPE             |CI$8009100C

//
// MessageId: CRYPT_E_ISSUER_SERIALNUMBER
//
// MessageText:
//
//  The issuer and/or serial number are/is not valid.
//
C_Define CRYPT_E_ISSUER_SERIALNUMBER      |CI$8009100D

//
// MessageId: CRYPT_E_SIGNER_NOT_FOUND
//
// MessageText:
//
//  The original signer is not found.
//
C_Define CRYPT_E_SIGNER_NOT_FOUND         |CI$8009100E

//
// MessageId: CRYPT_E_ATTRIBUTES_MISSING
//
// MessageText:
//
//  The message does not contain the requested attributes.
//
C_Define CRYPT_E_ATTRIBUTES_MISSING       |CI$8009100F

//
// MessageId: CRYPT_E_STREAM_MSG_NOT_READY
//
// MessageText:
//
//  The steamed message is note yet able to return the requested data.
//
C_Define CRYPT_E_STREAM_MSG_NOT_READY     |CI$80091010 

//
// MessageId: CRYPT_E_STREAM_INSUFFICIENT_DATA
//
// MessageText:
//
//  The streamed message needs more data before the decode can complete.
//
C_Define CRYPT_E_STREAM_INSUFFICIENT_DATA |CI$80091011 

//
// MessageId: CRYPT_E_BAD_LEN
//
// MessageText:
//
//  The length specified for the output data was insufficient.
//
C_Define CRYPT_E_BAD_LEN                  |CI$80092001 

//
// MessageId: CRYPT_E_BAD_ENCODE
//
// MessageText:
//
//  An error was encountered while encoding or decoding.
//
C_Define CRYPT_E_BAD_ENCODE               |CI$80092002 

//
// MessageId: CRYPT_E_FILE_ERROR
//
// MessageText:
//
//  An error occurred while reading or writing to the file
//
C_Define CRYPT_E_FILE_ERROR               |CI$80092003 

//
// MessageId: CRYPT_E_NOT_FOUND
//
// MessageText:
//
//  The object or property wasn't found
//
C_Define CRYPT_E_NOT_FOUND                |CI$80092004 

//
// MessageId: CRYPT_E_EXISTS
//
// MessageText:
//
//  The object or property already exists
//
C_Define CRYPT_E_EXISTS                   |CI$80092005 

//
// MessageId: CRYPT_E_NO_PROVIDER
//
// MessageText:
//
//  No provider was specified for the store or object
//
C_Define CRYPT_E_NO_PROVIDER              |CI$80092006 

//
// MessageId: CRYPT_E_SELF_SIGNED
//
// MessageText:
//
//  The specified certificate is self signed.
//
C_Define CRYPT_E_SELF_SIGNED              |CI$80092007 

//
// MessageId: CRYPT_E_DELETED_PREV
//
// MessageText:
//
//  The previous certificate or CRL context was deleted.
//
C_Define CRYPT_E_DELETED_PREV             |CI$80092008 

//
// MessageId: CRYPT_E_NO_MATCH
//
// MessageText:
//
//  No match when trying to find the object.
//
C_Define CRYPT_E_NO_MATCH                 |CI$80092009 

//
// MessageId: CRYPT_E_UNEXPECTED_MSG_TYPE
//
// MessageText:
//
//  The type of the cryptographic message being decoded is different than what was expected.
//
C_Define CRYPT_E_UNEXPECTED_MSG_TYPE      |CI$8009200A

//
// MessageId: CRYPT_E_NO_KEY_PROPERTY
//
// MessageText:
//
//  The certificate doesn't have a private key property
//
C_Define CRYPT_E_NO_KEY_PROPERTY          |CI$8009200B

//
// MessageId: CRYPT_E_NO_DECRYPT_CERT
//
// MessageText:
//
//  No certificate was found having a private key property to use for decrypting.
//
C_Define CRYPT_E_NO_DECRYPT_CERT          |CI$8009200C

//
// MessageId: CRYPT_E_BAD_MSG
//
// MessageText:
//
//  Either, not a cryptographic message or incorrectly formatted.
//
C_Define CRYPT_E_BAD_MSG                  |CI$8009200D

//
// MessageId: CRYPT_E_NO_SIGNER
//
// MessageText:
//
//  The signed message doesn't have a signer for the specified signer index
//
C_Define CRYPT_E_NO_SIGNER                |CI$8009200E

//
// MessageId: CRYPT_E_PENDING_CLOSE
//
// MessageText:
//
//  Final closure is pending until additional frees or closes.
//
C_Define CRYPT_E_PENDING_CLOSE            |CI$8009200F

//
// MessageId: CRYPT_E_REVOKED
//
// MessageText:
//
//  The certificate or signature has been revoked
//
C_Define CRYPT_E_REVOKED                  |CI$80092010 

//
// MessageId: CRYPT_E_NO_REVOCATION_DLL
//
// MessageText:
//
//  No Dll or exported function was found to verify revocation.
//
C_Define CRYPT_E_NO_REVOCATION_DLL        |CI$80092011 

//
// MessageId: CRYPT_E_NO_REVOCATION_CHECK
//
// MessageText:
//
//  The called function wasn't able to do a revocation check on the certificate or signature.
//
C_Define CRYPT_E_NO_REVOCATION_CHECK      |CI$80092012 

//
// MessageId: CRYPT_E_REVOCATION_OFFLINE
//
// MessageText:
//
//  Since the revocation server was offline, the called function wasn't able to complete the revocation check.
//
C_Define CRYPT_E_REVOCATION_OFFLINE       |CI$80092013 

//
// MessageId: CRYPT_E_NOT_IN_REVOCATION_DATABASE
//
// MessageText:
//
//  The certificate or signature to be checked was not found in the revocation servers database.
//
C_Define CRYPT_E_NOT_IN_REVOCATION_DATABASE |CI$80092014 

//
// MessageId: CRYPT_E_INVALID_NUMERIC_STRING
//
// MessageText:
//
//  The string contains a non-numeric character.
//
C_Define CRYPT_E_INVALID_NUMERIC_STRING   |CI$80092020 

//
// MessageId: CRYPT_E_INVALID_PRINTABLE_STRING
//
// MessageText:
//
//  The string contains a non-printable character.
//
C_Define CRYPT_E_INVALID_PRINTABLE_STRING |CI$80092021 

//
// MessageId: CRYPT_E_INVALID_IA5_STRING
//
// MessageText:
//
//  The string contains a character not in the 7 bit ASCII character set.
//
C_Define CRYPT_E_INVALID_IA5_STRING       |CI$80092022 

//
// MessageId: CRYPT_E_INVALID_X500_STRING
//
// MessageText:
//
//  The string contains an invalid X500 name attribute key, oid, value or delimiter.
//
C_Define CRYPT_E_INVALID_X500_STRING      |CI$80092023 

//
// MessageId: CRYPT_E_NOT_CHAR_STRING
//
// MessageText:
//
//  The dwValueType for the CERT_NAME_VALUE is not one of the character strings.  Most likely it is either a CERT_RDN_ENCODED_BLOB or CERT_TDN_OCTED_STRING.
//
C_Define CRYPT_E_NOT_CHAR_STRING          |CI$80092024 

//
// MessageId: CRYPT_E_FILERESIZED
//
// MessageText:
//
//  The Put operation can not continue.  The file needs to be resized.  However, there is already a signature present.  A complete signing operation must be done.
//
C_Define CRYPT_E_FILERESIZED              |CI$80092025 

//
// MessageId: CRYPT_E_SECURITY_SETTINGS
//
// MessageText:
//
//  The cryptography operation has failed due to a local security option setting.
//
C_Define CRYPT_E_SECURITY_SETTINGS        |CI$80092026 

//
// MessageId: CRYPT_E_NO_VERIFY_USAGE_DLL
//
// MessageText:
//
//  No DLL or exported function was found to verify subject usage.
//
C_Define CRYPT_E_NO_VERIFY_USAGE_DLL      |CI$80092027 

//
// MessageId: CRYPT_E_NO_VERIFY_USAGE_CHECK
//
// MessageText:
//
//  The called function wasn't able to do a usage check on the subject.
//
C_Define CRYPT_E_NO_VERIFY_USAGE_CHECK    |CI$80092028 

//
// MessageId: CRYPT_E_VERIFY_USAGE_OFFLINE
//
// MessageText:
//
//  Since the server was offline, the called function wasn't able to complete the usage check.
//
C_Define CRYPT_E_VERIFY_USAGE_OFFLINE     |CI$80092029 

//
// MessageId: CRYPT_E_NOT_IN_CTL
//
// MessageText:
//
//  The subject was not found in a Certificate Trust List (CT.
//
C_Define CRYPT_E_NOT_IN_CTL               |CI$8009202A

//
// MessageId: CRYPT_E_NO_TRUSTED_SIGNER
//
// MessageText:
//
//  No trusted signer was found to verify the signature of the message or trust list.
//
C_Define CRYPT_E_NO_TRUSTED_SIGNER        |CI$8009202B

//
// MessageId: CRYPT_E_OSS_ERROR
//
// MessageText:
//
//  OSS Certificate encode/decode error code base
//  
//  See asn1code.h for a definition of the OSS runtime errors. The OSS
//  error values are offset by CRYPT_E_OSS_ERROR.
//
C_Define CRYPT_E_OSS_ERROR                |CI$80093000 

//
// MessageId: CERTSRV_E_BAD_REQUESTSUBJECT
//
// MessageText:
//
//  The request subject name is invalid or too long.
//
C_Define CERTSRV_E_BAD_REQUESTSUBJECT     |CI$80094001 

//
// MessageId: CERTSRV_E_NO_REQUEST
//
// MessageText:
//
//  The request does not exist.
//
C_Define CERTSRV_E_NO_REQUEST             |CI$80094002 

//
// MessageId: CERTSRV_E_BAD_REQUESTSTATUS
//
// MessageText:
//
//  The request's current status does not allow this operation.
//
C_Define CERTSRV_E_BAD_REQUESTSTATUS      |CI$80094003 

//
// MessageId: CERTSRV_E_PROPERTY_EMPTY
//
// MessageText:
//
//  The requested property value is empty.
//
C_Define CERTSRV_E_PROPERTY_EMPTY         |CI$80094004 

//
// MessageId: CERTDB_E_JET_ERROR
//
// MessageText:
//
//  Jet error code base
//  
//  See jet.h for a definition of the Jet runtime errors.
//  Negative Jet error values are masked to three digits and offset by CERTDB_E_JET_ERROR.
//
C_Define CERTDB_E_JET_ERROR               |CI$80095000 

//
// MessageId: TRUST_E_SYSTEM_ERROR
//
// MessageText:
//
//  A system-level error occured while verifying trust.
//
C_Define TRUST_E_SYSTEM_ERROR             |CI$80096001 

//
// MessageId: TRUST_E_NO_SIGNER_CERT
//
// MessageText:
//
//  The certificate for the signer of the message is invalid or not found.
//
C_Define TRUST_E_NO_SIGNER_CERT           |CI$80096002 

//
// MessageId: TRUST_E_COUNTER_SIGNER
//
// MessageText:
//
//  One of the counter signers was invalid.
//
C_Define TRUST_E_COUNTER_SIGNER           |CI$80096003 

//
// MessageId: TRUST_E_CERT_SIGNATURE
//
// MessageText:
//
//  The signature of the certificate can not be verified.
//
C_Define TRUST_E_CERT_SIGNATURE           |CI$80096004 

//
// MessageId: TRUST_E_TIME_STAMP
//
// MessageText:
//
//  The time stamp signer and or certificate could not be verified or is malformed.
//
C_Define TRUST_E_TIME_STAMP               |CI$80096005 

//
// MessageId: TRUST_E_BAD_DIGEST
//
// MessageText:
//
//  The objects digest did not verify.
//
C_Define TRUST_E_BAD_DIGEST               |CI$80096010 

//
// MessageId: TRUST_E_BASIC_CONSTRAINTS
//
// MessageText:
//
//  The cerficates basic constraints are invalid or missing.
//
C_Define TRUST_E_BASIC_CONSTRAINTS        |CI$80096019 

//
// MessageId: TRUST_E_FINANCIAL_CRITERIA
//
// MessageText:
//
//  The certificate does not meet or contain the Authenticode financial extensions.
//
C_Define TRUST_E_FINANCIAL_CRITERIA       |CI$8009601E

C_Define NTE_OP_OK 0

//
// Note that additional FACILITY_SSPI errors are in issperr.h
//
// ******************
// FACILITY_CERT
// ******************
//
// MessageId: TRUST_E_PROVIDER_UNKNOWN
//
// MessageText:
//
//  The specified trust provider is not known on this system.
//
C_Define TRUST_E_PROVIDER_UNKNOWN         |CI$800B0001 

//
// MessageId: TRUST_E_ACTION_UNKNOWN
//
// MessageText:
//
//  The trust verification action specified is not supported by the specified trust provider.
//
C_Define TRUST_E_ACTION_UNKNOWN           |CI$800B0002 

//
// MessageId: TRUST_E_SUBJECT_FORM_UNKNOWN
//
// MessageText:
//
//  The form specified for the subject is not one supported or known by the specified trust provider.
//
C_Define TRUST_E_SUBJECT_FORM_UNKNOWN     |CI$800B0003 

//
// MessageId: TRUST_E_SUBJECT_NOT_TRUSTED
//
// MessageText:
//
//  The subject is not trusted for the specified action.
//
C_Define TRUST_E_SUBJECT_NOT_TRUSTED      |CI$800B0004 

//
// MessageId: DIGSIG_E_ENCODE
//
// MessageText:
//
//  Error due to problem in ASN.1 encoding process.
//
C_Define DIGSIG_E_ENCODE                  |CI$800B0005 

//
// MessageId: DIGSIG_E_DECODE
//
// MessageText:
//
//  Error due to problem in ASN.1 decoding process.
//
C_Define DIGSIG_E_DECODE                  |CI$800B0006 

//
// MessageId: DIGSIG_E_EXTENSIBILITY
//
// MessageText:
//
//  Reading / writing Extensions where Attributes are appropriate, and visa versa.
//
C_Define DIGSIG_E_EXTENSIBILITY           |CI$800B0007 

//
// MessageId: DIGSIG_E_CRYPTO
//
// MessageText:
//
//  Unspecified cryptographic failure.
//
C_Define DIGSIG_E_CRYPTO                  |CI$800B0008 

//
// MessageId: PERSIST_E_SIZEDEFINITE
//
// MessageText:
//
//  The size of the data could not be determined.
//
C_Define PERSIST_E_SIZEDEFINITE           |CI$800B0009 

//
// MessageId: PERSIST_E_SIZEINDEFINITE
//
// MessageText:
//
//  The size of the indefinite-sized data could not be determined.
//
C_Define PERSIST_E_SIZEINDEFINITE         |CI$800B000A

//
// MessageId: PERSIST_E_NOTSELFSIZING
//
// MessageText:
//
//  This object does not read and write self-sizing data.
//
C_Define PERSIST_E_NOTSELFSIZING          |CI$800B000B

//
// MessageId: TRUST_E_NOSIGNATURE
//
// MessageText:
//
//  No signature was present in the subject.
//
C_Define TRUST_E_NOSIGNATURE              |CI$800B0100 

//
// MessageId: CERT_E_EXPIRED
//
// MessageText:
//
//  A required certificate is not within its validity period.
//
C_Define CERT_E_EXPIRED                   |CI$800B0101 

//
// MessageId: CERT_E_VALIDITYPERIODNESTING
//
// MessageText:
//
//  The validity periods of the certification chain do not nest correctly.
//
C_Define CERT_E_VALIDITYPERIODNESTING     |CI$800B0102 

//
// MessageId: CERT_E_ROLE
//
// MessageText:
//
//  A certificate that can only be used as an end-entity is being used as a CA or visa versa.
//
C_Define CERT_E_ROLE                      |CI$800B0103 

//
// MessageId: CERT_E_PATHLENCONST
//
// MessageText:
//
//  A path length constraint in the certification chain has been violated.
//
C_Define CERT_E_PATHLENCONST              |CI$800B0104 

//
// MessageId: CERT_E_CRITICAL
//
// MessageText:
//
//  An extension of unknown type that is labeled 'critical' is present in a certificate.
//
C_Define CERT_E_CRITICAL                  |CI$800B0105 

//
// MessageId: CERT_E_PURPOSE
//
// MessageText:
//
//  A certificate is being used for a purpose other than that for which it is permitted.
//
C_Define CERT_E_PURPOSE                   |CI$800B0106 

//
// MessageId: CERT_E_ISSUERCHAINING
//
// MessageText:
//
//  A parent of a given certificate in fact did not issue that child certificate.
//
C_Define CERT_E_ISSUERCHAINING            |CI$800B0107 

//
// MessageId: CERT_E_MALFORMED
//
// MessageText:
//
//  A certificate is missing or has an empty value for an important field, such as a subject or issuer name.
//
C_Define CERT_E_MALFORMED                 |CI$800B0108 

//
// MessageId: CERT_E_UNTRUSTEDROOT
//
// MessageText:
//
//  A certification chain processed correctly, but terminated in a root certificate which isn't trusted by the trust provider.
//
C_Define CERT_E_UNTRUSTEDROOT             |CI$800B0109 

//
// MessageId: CERT_E_CHAINING
//
// MessageText:
//
//  A chain of certs didn't chain as they should in a certain application of chaining.
//
C_Define CERT_E_CHAINING                  |CI$800B010A

//
// MessageId: TRUST_E_FAIL
//
// MessageText:
//
//  Generic Trust Failure.
//
C_Define TRUST_E_FAIL                     |CI$800B010B

//
// MessageId: CERT_E_REVOKED
//
// MessageText:
//
//  A certificate was explicitly revoked by its issuer.
//
C_Define CERT_E_REVOKED                   |CI$800B010C

//
// MessageId: CERT_E_UNTRUSTEDTESTROOT
//
// MessageText:
//
//  The root certificate is a testing certificate and the policy settings disallow test certificates.
//
C_Define CERT_E_UNTRUSTEDTESTROOT         |CI$800B010D

//
// MessageId: CERT_E_REVOCATION_FAILURE
//
// MessageText:
//
//  The revocation process could not continue - the certificate(s  could not be checked.
//
C_Define CERT_E_REVOCATION_FAILURE        |CI$800B010E

//
// MessageId: CERT_E_CN_NO_MATCH
//
// MessageText:
//
//  The certificate's CN name does not match the passed value.
//
C_Define CERT_E_CN_NO_MATCH               |CI$800B010F

//
// MessageId: CERT_E_WRONG_USAGE
//
// MessageText:
//
//  The certificate is not valid for the requested usage.
//
C_Define CERT_E_WRONG_USAGE               |CI$800B0110 

// MessageId: SPAPI_E_EXPECTED_SECTION_NAME
//
// MessageText:
//
//  A non-empty line was encountered in the INF before the start of a section.
//
C_Define SPAPI_E_EXPECTED_SECTION_NAME    |CI$800F0000 

//
// MessageId: SPAPI_E_BAD_SECTION_NAME_LINE
//
// MessageText:
//
//  A section name marker in the INF is not complete, or does not exist on a line by itself.
//
C_Define SPAPI_E_BAD_SECTION_NAME_LINE    |CI$800F0001 

//
// MessageId: SPAPI_E_SECTION_NAME_TOO_LONG
//
// MessageText:
//
//  An INF section was encountered whose name exceeds the maximum section name length.
//
C_Define SPAPI_E_SECTION_NAME_TOO_LONG    |CI$800F0002 

//
// MessageId: SPAPI_E_GENERAL_SYNTAX
//
// MessageText:
//
//  The syntax of the INF is invalid.
//
C_Define SPAPI_E_GENERAL_SYNTAX           |CI$800F0003 

//
// MessageId: SPAPI_E_WRONG_INF_STYLE
//
// MessageText:
//
//  The style of the INF is different than what was requested.
//
C_Define SPAPI_E_WRONG_INF_STYLE          |CI$800F0100 

//
// MessageId: SPAPI_E_SECTION_NOT_FOUND
//
// MessageText:
//
//  The required section was not found in the INF.
//
C_Define SPAPI_E_SECTION_NOT_FOUND        |CI$800F0101 

//
// MessageId: SPAPI_E_LINE_NOT_FOUND
//
// MessageText:
//
//  The required line was not found in the INF.
//
C_Define SPAPI_E_LINE_NOT_FOUND           |CI$800F0102 

//
// MessageId: SPAPI_E_NO_ASSOCIATED_CLASS
//
// MessageText:
//
//  The INF or the device information set or element does not have an associated install class.
//
C_Define SPAPI_E_NO_ASSOCIATED_CLASS      |CI$800F0200 

//
// MessageId: SPAPI_E_CLASS_MISMATCH
//
// MessageText:
//
//  The INF or the device information set or element does not match the specified install class.
//
C_Define SPAPI_E_CLASS_MISMATCH           |CI$800F0201 

//
// MessageId: SPAPI_E_DUPLICATE_FOUND
//
// MessageText:
//
//  An existing device was found that is a duplicate of the device being manually installed.
//
C_Define SPAPI_E_DUPLICATE_FOUND          |CI$800F0202 

//
// MessageId: SPAPI_E_NO_DRIVER_SELECTED
//
// MessageText:
//
//  There is no driver selected for the device information set or element.
//
C_Define SPAPI_E_NO_DRIVER_SELECTED       |CI$800F0203 

//
// MessageId: SPAPI_E_KEY_DOES_NOT_EXIST
//
// MessageText:
//
//  The requested device registry key does not exist.
//
C_Define SPAPI_E_KEY_DOES_NOT_EXIST       |CI$800F0204 

//
// MessageId: SPAPI_E_INVALID_DEVINST_NAME
//
// MessageText:
//
//  The device instance name is invalid.
//
C_Define SPAPI_E_INVALID_DEVINST_NAME     |CI$800F0205 

//
// MessageId: SPAPI_E_INVALID_CLASS
//
// MessageText:
//
//  The install class is not present or is invalid.
//
C_Define SPAPI_E_INVALID_CLASS            |CI$800F0206 

//
// MessageId: SPAPI_E_DEVINST_ALREADY_EXISTS
//
// MessageText:
//
//  The device instance cannot be created because it already exists.
//
C_Define SPAPI_E_DEVINST_ALREADY_EXISTS   |CI$800F0207 

//
// MessageId: SPAPI_E_DEVINFO_NOT_REGISTERED
//
// MessageText:
//
//  The operation cannot be performed on a device information element that has not been registered.
//
C_Define SPAPI_E_DEVINFO_NOT_REGISTERED   |CI$800F0208 

//
// MessageId: SPAPI_E_INVALID_REG_PROPERTY
//
// MessageText:
//
//  The device property code is invalid.
//
C_Define SPAPI_E_INVALID_REG_PROPERTY     |CI$800F0209 

//
// MessageId: SPAPI_E_NO_INF
//
// MessageText:
//
//  The INF from which a driver list is to be built does not exist.
//
C_Define SPAPI_E_NO_INF                   |CI$800F020A

//
// MessageId: SPAPI_E_NO_SUCH_DEVINST
//
// MessageText:
//
//  The device instance does not exist in the hardware tree.
//
C_Define SPAPI_E_NO_SUCH_DEVINST          |CI$800F020B

//
// MessageId: SPAPI_E_CANT_LOAD_CLASS_ICON
//
// MessageText:
//
//  The icon representing this install class cannot be loaded.
//
C_Define SPAPI_E_CANT_LOAD_CLASS_ICON     |CI$800F020C

//
// MessageId: SPAPI_E_INVALID_CLASS_INSTALLER
//
// MessageText:
//
//  The class installer registry entry is invalid.
//
C_Define SPAPI_E_INVALID_CLASS_INSTALLER  |CI$800F020D

//
// MessageId: SPAPI_E_DI_DO_DEFAULT
//
// MessageText:
//
//  The class installer has indicated that the default action should be performed for this installation request.
//
C_Define SPAPI_E_DI_DO_DEFAULT            |CI$800F020E

//
// MessageId: SPAPI_E_DI_NOFILECOPY
//
// MessageText:
//
//  The operation does not require any files to be copied.
//
C_Define SPAPI_E_DI_NOFILECOPY            |CI$800F020F

//
// MessageId: SPAPI_E_INVALID_HWPROFILE
//
// MessageText:
//
//  The specified hardware profile does not exist.
//
C_Define SPAPI_E_INVALID_HWPROFILE        |CI$800F0210 

//
// MessageId: SPAPI_E_NO_DEVICE_SELECTED
//
// MessageText:
//
//  There is no device information element currently selected for this device information set.
//
C_Define SPAPI_E_NO_DEVICE_SELECTED       |CI$800F0211 

//
// MessageId: SPAPI_E_DEVINFO_LIST_LOCKED
//
// MessageText:
//
//  The operation cannot be performed because the device information set is locked.
//
C_Define SPAPI_E_DEVINFO_LIST_LOCKED      |CI$800F0212 

//
// MessageId: SPAPI_E_DEVINFO_DATA_LOCKED
//
// MessageText:
//
//  The operation cannot be performed because the device information element is locked.
//
C_Define SPAPI_E_DEVINFO_DATA_LOCKED      |CI$800F0213 

//
// MessageId: SPAPI_E_DI_BAD_PATH
//
// MessageText:
//
//  The specified path does not contain any applicable device INFs.
//
C_Define SPAPI_E_DI_BAD_PATH              |CI$800F0214 

//
// MessageId: SPAPI_E_NO_CLASSINSTALL_PARAMS
//
// MessageText:
//
//  No class installer parameters have been set for the device information set or element.
//
C_Define SPAPI_E_NO_CLASSINSTALL_PARAMS   |CI$800F0215 

//
// MessageId: SPAPI_E_FILEQUEUE_LOCKED
//
// MessageText:
//
//  The operation cannot be performed because the file queue is locked.
//
C_Define SPAPI_E_FILEQUEUE_LOCKED         |CI$800F0216 

//
// MessageId: SPAPI_E_BAD_SERVICE_INSTALLSECT
//
// MessageText:
//
//  A service installation section in this INF is invalid.
//
C_Define SPAPI_E_BAD_SERVICE_INSTALLSECT  |CI$800F0217 

//
// MessageId: SPAPI_E_NO_CLASS_DRIVER_LIST
//
// MessageText:
//
//  There is no class driver list for the device information element.
//
C_Define SPAPI_E_NO_CLASS_DRIVER_LIST     |CI$800F0218 

//
// MessageId: SPAPI_E_NO_ASSOCIATED_SERVICE
//
// MessageText:
//
//  The installation failed because a function driver was not specified for this device instance.
//
C_Define SPAPI_E_NO_ASSOCIATED_SERVICE    |CI$800F0219 

//
// MessageId: SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE
//
// MessageText:
//
//  There is presently no default device interface designated for this interface class.
//
C_Define SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE |CI$800F021A

//
// MessageId: SPAPI_E_DEVICE_INTERFACE_ACTIVE
//
// MessageText:
//
//  The operation cannot be performed because the device interface is currently active.
//
C_Define SPAPI_E_DEVICE_INTERFACE_ACTIVE  |CI$800F021B

//
// MessageId: SPAPI_E_DEVICE_INTERFACE_REMOVED
//
// MessageText:
//
//  The operation cannot be performed because the device interface has been removed from the system.
//
C_Define SPAPI_E_DEVICE_INTERFACE_REMOVED |CI$800F021C

//
// MessageId: SPAPI_E_BAD_INTERFACE_INSTALLSECT
//
// MessageText:
//
//  An interface installation section in this INF is invalid.
//
C_Define SPAPI_E_BAD_INTERFACE_INSTALLSECT |CI$800F021D

//
// MessageId: SPAPI_E_NO_SUCH_INTERFACE_CLASS
//
// MessageText:
//
//  This interface class does not exist in the system.
//
C_Define SPAPI_E_NO_SUCH_INTERFACE_CLASS  |CI$800F021E

//
// MessageId: SPAPI_E_INVALID_REFERENCE_STRING
//
// MessageText:
//
//  The reference string supplied for this interface device is invalid.
//
C_Define SPAPI_E_INVALID_REFERENCE_STRING |CI$800F021F

//
// MessageId: SPAPI_E_INVALID_MACHINENAME
//
// MessageText:
//
//  The specified machine name does not conform to UNC naming conventions.
//
C_Define SPAPI_E_INVALID_MACHINENAME      |CI$800F0220 

//
// MessageId: SPAPI_E_REMOTE_COMM_FAILURE
//
// MessageText:
//
//  A general remote communication error occurred.
//
C_Define SPAPI_E_REMOTE_COMM_FAILURE      |CI$800F0221 

//
// MessageId: SPAPI_E_MACHINE_UNAVAILABLE
//
// MessageText:
//
//  The machine selected for remote communication is not available at this time.
//
C_Define SPAPI_E_MACHINE_UNAVAILABLE      |CI$800F0222 

//
// MessageId: SPAPI_E_NO_CONFIGMGR_SERVICES
//
// MessageText:
//
//  The Plug and Play service is not available on the remote machine.
//
C_Define SPAPI_E_NO_CONFIGMGR_SERVICES    |CI$800F0223 

//
// MessageId: SPAPI_E_INVALID_PROPPAGE_PROVIDER
//
// MessageText:
//
//  The property page provider registry entry is invalid.
//
C_Define SPAPI_E_INVALID_PROPPAGE_PROVIDER |CI$800F0224 

//
// MessageId: SPAPI_E_NO_SUCH_DEVICE_INTERFACE
//
// MessageText:
//
//  The requested device interface is not present in the system.
//
C_Define SPAPI_E_NO_SUCH_DEVICE_INTERFACE |CI$800F0225 

//
// MessageId: SPAPI_E_DI_POSTPROCESSING_REQUIRED
//
// MessageText:
//
//  The device's co-installer has additional work to perform after installation is complete.
//
C_Define SPAPI_E_DI_POSTPROCESSING_REQUIRED |CI$800F0226 

//
// MessageId: SPAPI_E_INVALID_COINSTALLER
//
// MessageText:
//
//  The device's co-installer is invalid.
//
C_Define SPAPI_E_INVALID_COINSTALLER      |CI$800F0227 

//
// MessageId: SPAPI_E_NO_COMPAT_DRIVERS
//
// MessageText:
//
//  There are no compatible drivers for this device.
//
C_Define SPAPI_E_NO_COMPAT_DRIVERS        |CI$800F0228 

//
// MessageId: SPAPI_E_NO_DEVICE_ICON
//
// MessageText:
//
//  There is no icon that represents this device or device type.
//
C_Define SPAPI_E_NO_DEVICE_ICON           |CI$800F0229 

//
// MessageId: SPAPI_E_INVALID_INF_LOGCONFIG
//
// MessageText:
//
//  A logical configuration specified in this INF is invalid.
//
C_Define SPAPI_E_INVALID_INF_LOGCONFIG    |CI$800F022A

//
// MessageId: SPAPI_E_DI_DONT_INSTALL
//
// MessageText:
//
//  The class installer has denied the request to install or upgrade this device.
//
C_Define SPAPI_E_DI_DONT_INSTALL          |CI$800F022B

//
// MessageId: SPAPI_E_INVALID_FILTER_DRIVER
//
// MessageText:
//
//  One of the filter drivers installed for this device is invalid.
//
C_Define SPAPI_E_INVALID_FILTER_DRIVER    |CI$800F022C

//
// MessageId: SPAPI_E_ERROR_NOT_INSTALLED
//
// MessageText:
//
//  No installed components were detected.
//
C_Define SPAPI_E_ERROR_NOT_INSTALLED      |CI$800F1000 

