//*****************************************************************************************
// Copyright (c) 2000 Michael Kurz
// All rights reserved.
// If you want to use this source in your applications conatct: <MichaelKurz@gmx.at>
//
// $FileName    : cEditorEdit.Pkg
// $ProjectName : CODEMAX EDITOR
// $Author      : Michael Kurz <MichaelKurz@gmx.at>
// $Created     : 01-25-2001 @ 19:00
//
// Contents:
//      Properties for Editor, stored in an INI file, based on cIniHandler.
//
// $Rev History
//
//*****************************************************************************************

Use cIniManager.pkg                 // Class cIniManager
Use mPointer.pkg
Use mAssignFilesToExecuteable.Pkg   // To Assign extention to this program.
Use mEditorMacros.pkg               // Save and Load Macros.
Use mFiles.pkg
Use vWin32fh.pkg
#IFDEF TH_SCINTILLA
Use cSciCommandHotKeySupport.pkg
#ENDIF

#COMMAND PUT_POINTEREx R R R "TO" R "AT" R
    Local_Buffer !1 !2
    Move !3 To !1
    Move (Replaces("\n",!1,Character(10))) To !1
    GetAddress Of !1    To !2
    Put !2  To !5 At !7 !8
#ENDCOMMAND


    // Stores all Parameter which should been saved to disk.

    // Added Property piSaveLocal to speed-up the saving of a file on a network drive
    // 19.02.02 Bernhard
    // INI_GLOBAL
Class cEditorProperties Is a cIniProperties
    INI_Begin_Properties "CODEMAXEDIT.INI" INI_USER
        INI_Property        String  psFileTypes                 Public ""
        INI_Property        Integer piLineNumbering             Public False
        INI_Property        Integer pbLeftMargin                Public False
        INI_Property        String  psColors                    Public ""
        INI_Property        String  psReadOnlyColors            Public ""
        INI_Property        String  psHotKeys                   Public ""
        // By WvA 20170417 - Scintilla hot keys
        INI_Property        String  psEditorHotKeys             Public ""
        INI_Property        Integer piRecentFilesLimit          Public 0
        INI_Property        String  psRecentFiles               Public "" MULTI
        // By SVN 22-03-2017
        INI_Property        Integer piRecentWSLimit             Public 15
        INI_Property        String  psRecentWorkspaces          Public "" MULTI
        INI_Property.Sub    String  sDescription                Public ""
        INI_Property.Sub    String  sVersion                    Public ""
        //
        INI_Property        Integer piViewMode                  Public 0
        INI_Property        Integer piViewSize.Y                Public 0
        INI_Property        Integer piViewSize.X                Public 0
        INI_Property        Integer pbColorSyntax               Public 0
        INI_Property        String  psLanguage                  Public ""
        INI_Property        Integer pbScrollBarH                Public 0
        INI_Property        Integer pbScrollBarV                Public 0
        INI_Property        Integer pbSplitterH                 Public 0
        INI_Property        Integer pbSplitterV                 Public 0
        INI_Property        Integer pbSmoothScrolling           Public 0
        INI_Property        Integer pbLineToolTips              Public 0
        INI_Property        Integer pbDragDrop                  Public 0
        INI_Property        Integer pbColumnSel                 Public 0
        INI_Property        Integer piUndoLimit                 Public 0
        INI_Property        Integer piAutoIndentMode            Public 0
        INI_Property        Integer piTabSize                   Public 0
        INI_Property        Integer pbTabExpand                 Public 0
        INI_Property        Integer pbNormalizeCase             Public 0
        INI_Property        Integer pbPreserveCase              Public 0
        INI_Property        Integer pbSelBounds                 Public 0
        INI_Property        Integer pbWholeWord                 Public 0
        INI_Property        Integer pbCaseSensitive             Public 0
        INI_Property        String  psFont                      Public ""
        INI_Property        String  psLanguages                 Public "" MULTI
        INI_Property.Sub    Integer dwStyle                     Public 0
        INI_Property.Sub    Integer bIsCaseSensitive            Public 0
        INI_Property.Sub    String  szKeywords                  Public ""
        INI_Property.Sub    String  szOperators                 Public ""
        INI_Property.Sub    String  szSingleLineComments        Public ""
        INI_Property.Sub    String  szMultiLineComments1        Public ""
        INI_Property.Sub    String  szMultiLineComments2        Public ""
        INI_Property.Sub    String  szScopeKeywords1            Public ""
        INI_Property.Sub    String  szScopeKeywords2            Public ""
        INI_Property.Sub    String  szStringDelims              Public ""
        INI_Property.Sub    String  chEscape                    Public ""
        INI_Property.Sub    String  chTerminator                Public ""
        INI_Property.Sub    String  pszTagElementNames          Public ""
        INI_Property.Sub    String  pszTagAttributeNames        Public ""
        INI_Property.Sub    String  pszTagEntities              Public ""
        INI_Property        String  psFontStyles                Public ""
        INI_Property        Integer piUseWorkSpace              Public 0
        INI_Property        String  psCompiler                  Public ""
        INI_Property        String  psCompiler.CompOptions      Public ""
        INI_Property        String  psCompiler.PreCompOptions   Public ""
        INI_Property        String  psDebugger                  Public ""
        INI_Property        Integer piCompiler4Debug            Public ""
        INI_Property        String  psDebugCompiler             Public ""
        INI_Property        Integer piCompileShowErrorMsg       Public 0
        INI_Property        String  psStartUpPath               Public ""
        INI_Property        Integer piSaveLocal                 Public False
        INI_Property        Integer piErrorListHeight           Public 0
        INI_Property        Integer pbErrorListVisible          Public 0
        INI_Property        Integer piCodeViewWidth             Public 0
        INI_Property        Integer pbCodeViewVisible           Public 0
        INI_Property        String  psVDFRegistryVersion        Public ""
        // SVN 21-03-2017
        INI_Property        Integer pbToolsPaneVisible          Public True
        INI_Property        Integer pbOutputPaneVisible         Public False
        //
        // ** SVN 07/04-2017 -- TH3 New Tokens INI file
        INI_Property        String  psTokensIniFile             Public "tokens.ini"
        INI_Property        String  psCodeTipIniFile            Public ""
        INI_Property        Integer pbUseCodeTips               Public True
        INI_Property        Integer pbCodeTipAutoPopup          Public True
        INI_Property        String  pbCodeListUseBitmaps        Public True
        INI_Property        Integer pbShowClasses               Public True
        INI_Property        Integer pbShowObjects               Public True
        INI_Property        Integer pbShowMethods               Public True
        INI_Property        Integer pbShowKeys                  Public True
        INI_Property        Integer pbShowFields                Public True
        INI_Property        Integer pbShowIndexes               Public True
        INI_Property        Integer pbShowVariables             Public True
        INI_Property        Integer pbShowIDETags               Public True
        // ** SVN 07/04-2017 -- TH3 New CodeLists Auto Popup
        INI_Property        Integer pbShowStructures            Public True
        INI_Property        Integer pbShowCommands              Public True
        INI_Property        Integer pbShowTypes                 Public True
        INI_Property        Integer pbShowAttributes            Public True
        INI_Property        String  psIDEPath                   Public ""
        INI_Property        String  psDBBPath                   Public ""
        INI_Property        String  psDBEPath                   Public ""
        INI_Property        String  psMergePath                 Public ""
        INI_Property        String  psVCSPath                   Public ""
        INI_Property        String  psRptPath                   Public ""
        INI_Property        String  psDbcPath                   Public ""
        INI_Property        String  psDbuPath                   Public ""
        INI_Property        String  psCodeArtPath               Public ""
        INI_Property        String  psCodeSpyPath               Public ""
        INI_Property        String  psCodePubPath               Public ""
        INI_Property        String  psMenuPath                  Public ""
        // ** SVN -- CodeArt
        INI_Property        Integer pbCodeArtInsertErrors       Public False
        INI_Property        Integer pbCodeArtInsertDateTime     Public False
        INI_Property        Integer pbCodeArtInsertComments     Public True
        // ** SVN -- CodePub
        INI_Property        String  psCodePubHeaderFile         Public ""
        INI_Property        String  psCodePubFooterFile         Public ""
        //
        //
        INI_Property        String  psDfrun                     Public ""
        INI_Property        String  psLangAssign                Public "" MULTI
        INI_Property.Sub    String  Ext                         Public ""
        INI_Property.Sub    String  Language                    Public ""

        // BP -- Character translation
        INI_Property        String  psCharTranslation           Public ""

        // BP -- Watch Compiler Messages during Compile
        INI_Property        Integer piWatchCompiler             Public 0
        INI_Property        Integer piDisplayWatchAutomatic     Public 0
        INI_Property        Integer piDebugAlways               Public 0
        // By SVN -- 14-04-2017 Window
        // By SVN -- 14-04-2017 Skinning
        INI_Property        Integer piUseSkins                  Public 0
        INI_Property        String  psCurrentSkinFile           Public ""
        INI_Property        String  psCurrentSkinIni            Public ""
        // Tabs
        INI_Property        String  psFileTabsLocation          Public "Bottom"
        INI_Property        String  psFileTabsAppearance        Public ""
        INI_Property        String  psFileTabsColor             Public ""
        // Color Schemas (By SVN)
        INI_Property        String  psColorSchema               Public ""
        INI_Property        String  psColorSchemas              Public "" MULTI
        INI_Property.Sub    Integer psSchemaColors              Public ""
        INI_Property.Sub    Integer psSchemaFontStyles          Public ""
        INI_Property        String  psFontFace                  Public ""
        // Custom Utility (By SVN on 27-04-2017)
        INI_Property        String  psCustomMenuUtilities       Public "" MULTI // Code Maintenance...
        INI_Property.Sub    Integer psUtilityType               Public "" // DATABASE, SOURCE, TOOLS
        INI_Property.Sub    Integer psUtilityOrder              Public "" // 0, 1, 2, ...
        INI_Property.Sub    Integer psUtilityCommand            Public "" // C:\...\Bin\... .exe %1 etc
        //
        INI_Property        String  psSignAppPath               Public ""
        INI_Property        Integer pbExtCompilerOnly           Public 0
        INI_Property        Integer pbShowMatchingBraces        Public True
        INI_Property        Integer pbShowIndentGuides          Public True
        INI_Property        Integer pbSelectWholeLine           Public True
        //
    INI_End_Properties

        // Delivers the language for
    Function LanguageForFile String sFile Returns String
        Integer iCount iItem
        String  sExt sLangExt sLang
        
        Move (CString(sFile)) To sFile // Not sure if we need to do this?
        Get ParseFileExtension sFile To sExt
        Get psLangAssign.Count  To iCount
        For iItem From 0 To (iCount-1)
            Get psLangAssign.Ext item iItem    To sLangExt
            Move (CString(sLangExt))           To sLangExt
            Move (Replaces("*",sLangExt,""))   To sLangExt // If user enters "*.html" in language detection than it will never match the actual file extension
            Move (Replaces(".",sLangExt,""))   To sLangExt // same for .html
            Move (Trim(Uppercase(sExt)))       To sExt
            Move (Trim(Uppercase(sLangExt)))   To sLangExt
            If (sExt = sLangExt) Begin
                Get psLangAssign.Language Item iItem    To sLang
                Function_Return sLang
            End
        End
        Function_Return (psLanguage(Self))
    End_Function


    // Adds a Entry to the RecentFiles List, previous it tests
    // if the same file is already in the list and removes it.
    // By SVN on 22-03-2017
    Procedure AddRecentWorkspace String sWorkspace String sName String sVersion
        Integer iCount iC iLimit
        Move (Trim(sWorkspace))                 to sWorkspace
        Move (psRecentWorkspaces.Count(Self))   to iCount
        For iC from 0 to (iCount-1)
            If (Uppercase(psRecentWorkspaces(Self,iC))) Eq (Uppercase(sWorkspace)) Begin
                Send psRecentWorkspaces.DeleteItem iC
                Move iCount to iC
            End
        End
        Move (psRecentWorkspaces.Count(Self))           to iCount
        Set psRecentWorkspaces              item iCount to sWorkspace
        Set psRecentWorkspaces.sDescription item iCount to sName
        Set psRecentWorkspaces.sVersion     item iCount to sVersion

        // Limit to the max RecentFileList length
        Move (psRecentWorkspaces.Count(Self))    to iCount
        Move (piRecentWSLimit(Self))     to iLimit
        For iC from 0 to (iCount-1-iLimit)
            Send psRecentWorkspaces.DeleteItem iC
        End
    End_Procedure

    // Adds a Entry to the RecentFiles List, previous it tests
    // if the same file is already in the list and removes it.
    Procedure AddRecentFile String sFile
        Integer iCount iC iLimit
        Move (Trim(sFile))                  to sFile
        Move (psRecentFiles.Count(Self))    to iCount
        For iC from 0 to (iCount-1)
            If (Uppercase(psRecentFiles(Self,iC))) Eq (Uppercase(sFile)) Begin
                Send psRecentFiles.DeleteItem iC
                Move iCount to iC
            End
        End
        Move (psRecentFiles.Count(Self))    to iCount
        Set psRecentFiles item iCount       to sFile

        // Limit to the max RecentFileList length
        Move (psRecentFiles.Count(Self))    to iCount
        Move (piRecentFilesLimit(Self))     to iLimit
        For iC from 0 to (iCount-1-iLimit)
            Send psRecentFiles.DeleteItem iC
        Loop
    End_Procedure

        // Finds a language by Name...
    Function FindLanguage String sName Returns Integer
        Integer iC iCount
        String  sStr
        Move (Trim(sName))          to sName
        Get psLanguages.Count       to iCount
        For iC from 0 to (iCount-1)
            Get psLanguages item iC  to sStr
            If sStr Eq sName Function_Return iC
        End
        Function_Return -1
    End_Function

    Procedure DeleteLanguage String sName
        Integer iCount iC iLimit
        Move (Uppercase(Trim(sName)))       to sName
        Move (psLanguages.Count(Self))   to iCount
        For iC from 0 to (iCount-1)
            If (Uppercase(psLanguages(Self,iC))=sName) Begin
                Send psLanguages.DeleteItem iC
                Move iCount to iC
            End
        Loop
    End_Procedure

    // Finds a color schema by Name...
    Function FindColorSchema String sName Returns Integer
        Integer iC iCount
        String  sStr
        Move (Trim(sName))          to sName
        Get psColorSchemas.Count       to iCount
        For iC from 0 to (iCount-1)
            Get psColorSchemas item iC  to sStr
            If sStr Eq sName Function_Return iC
        Loop
        Function_Return -1
    End_Function

    Procedure DeleteColorSchema String sName
        Integer iCount iC iLimit
        Move (Uppercase(Trim(sName)))       to sName
        Move (psColorSchemas.Count(Self))   to iCount
        For iC from 0 to (iCount-1)
            If (Uppercase(psColorSchemas(Self,iC))=sName) Begin
                Send psColorSchemas.DeleteItem iC
                Move iCount to iC
            End
        Loop
    End_Procedure

        // Registers the language with the given item nr.
        // (for Highlighting)
    Procedure RegisterLanguage Integer iC
        Integer iRet
        #IFNDEF TH_SCINTILLA
        Local_BUFFER  sName pName
        Local_BUFFER sS pS 2000
        Local_BUFFER  sBuff pBuff CM_LANGUAGE_SIZE

        Get psLanguages Item iC   To sName
        GetAddress Of sName       To pName
        Put                       (psLanguages.dwStyle(Self,iC))               To sBuff At CM_LANGUAGE.dwStyle
        Put                       (psLanguages.bIsCaseSensitive(Self,iC))      To sBuff At CM_LANGUAGE.bIsCaseSensitive
        PUT_POINTEREx sTxt0  pTxt0  (psLanguages.szKeywords(Self,iC))            To sBuff At CM_LANGUAGE.pszKeywords
        PUT_POINTEREx sTxt1  pTxt1  (psLanguages.szOperators(Self,iC))           To sBuff At CM_LANGUAGE.pszOperators
        PUT_POINTEREx sTxt2  pTxt2  (psLanguages.szSingleLineComments(Self,iC))  To sBuff At CM_LANGUAGE.pszSingleLineComments
        PUT_POINTEREx sTxt3  pTxt3  (psLanguages.szMultiLineComments1(Self,iC))  To sBuff At CM_LANGUAGE.pszMultiLineComments1
        PUT_POINTEREx sTxt4  pTxt4  (psLanguages.szMultiLineComments2(Self,iC))  To sBuff At CM_LANGUAGE.pszMultiLineComments2
        PUT_POINTEREx sTxt5  pTxt5  (psLanguages.szScopeKeywords1(Self,iC))      To sBuff At CM_LANGUAGE.pszScopeKeywords1
        PUT_POINTEREx sTxt6  pTxt6  (psLanguages.szScopeKeywords2(Self,iC))      To sBuff At CM_LANGUAGE.pszScopeKeywords2
        PUT_POINTEREx sTxt7  pTxt7  (psLanguages.szStringDelims(Self,iC))        To sBuff At CM_LANGUAGE.pszStringDelims
        PUT_String                (psLanguages.chEscape(Self,iC))              To sBuff At CM_LANGUAGE.chEscape
        PUT_String                (psLanguages.chTerminator(Self,iC))          To sBuff At CM_LANGUAGE.chTerminator
        PUT_POINTEREx sTxt8  pTxt8  (psLanguages.pszTagElementNames(Self,iC))    To sBuff At CM_LANGUAGE.pszTagElementNames
        PUT_POINTEREx sTxt9  pTxt9  (psLanguages.pszTagAttributeNames(Self,iC))  To sBuff At CM_LANGUAGE.pszTagAttributeNames
        PUT_POINTEREx sTxt10 pTxt10 (psLanguages.pszTagEntities(Self,iC))        To sBuff At CM_LANGUAGE.pszTagEntities
        GetAddress Of sBuff To pBuff
        Move (CMRegisterLanguage(pName,pBuff))  To iRet
        #ENDIF        
    End_Procedure
        // Does a RegisterLanguage for every language.
        // (so all Languages are registerd <g>)
    Procedure RegisterAllLanguages
        Integer iC iCount
        Get psLanguages.Count To iCount
        For iC From 0 To (iCount-1)
            Send RegisterLanguage iC
        End
    End_Procedure

        // Overwritten to
    Procedure LoadIni
        Integer iRet
        String  sStartupPath sMessage
        Forward Send LoadIni
#IFDEF TH_SCINTILLA
        Get CMSetHotkeys (psEditorHotKeys(Self))  To iRet       // Sets the Hotkeys.
#ELSE        
        Get CMSetHotkeys (psHotKeys(Self))  To iRet             // Sets the Hotkeys.
#ENDIF        
        Send RegisterAllLanguages                               // Registers all Languages for Highlighting
        // **WvA: 05-03-03, Changed to eliminate a "RAW file Error"
        Get psStartUpPath To sStartUpPath

        If sStartUpPath Ne "" Begin
          Send DoChangeCurrentFolder sStartUpPath
        End

        Send Editor_LoadAllMacros gsUserName
    End_Procedure

    Procedure SaveIni
        Forward Send SaveIni
        Send Editor_SaveAllMacros gsUserName
    End_Procedure
End_Class

    // The out of this class created object is stored in this global Var.
Integer ghoEditorProperties
Object oEditorProperties Is a cEditorProperties
    Move Self to ghoEditorProperties
End_Object

#IFNDEF TH_SCINTILLA
    // Loads the Properties and registers the CodeMAx control first!
Move (CMRegisterControl(CM_VERSION))    To WindowIndex              // Registers the codemaxcontrol.
#ENDIF
Send LoadIni                            To ghoEditorProperties      // Loads the IniDate

    // Is a kind of WorkSpace Class which inserts things like, AppSrc directory etc.
    // into the open path.
Use cWorkSpaceHandlerEx.Pkg
Object oWorkSpaceHandlerEx is a cWorkSpaceHandlerEx

    Procedure StartWithLastWorkspace
      Boolean bHasDBDriver
      
      If (ghoWorkspaceHandlerEx=0) Begin
        Move Self to ghoWorkSpaceHandlerEx
      End
      
      Set psVDFVersion    to (psVDFRegistryVersion(ghoEditorProperties))
      If (piUseWorkSpace(ghoEditorProperties)) Begin
        Send InitWithCurrentWrkSpc
        Send LoadNonEmbeddedDriverAutoLoginPrompt
      End
    End_Procedure
    
    Send StartWithLastWorkspace
End_Object

    // Delivers the CmdLine of the Compiler.
    // if WorkSpaces are enabled -> from the CurrentWorkSpace
    // if not th entered value.
Function CompilerCmdLine For Desktop Returns String
    String sCmd
    String sVdfRootDir
    Move (psCompiler(ghoEditorProperties))                  To sCmd
    Get psVdfRootDir Of ghoWorkSpaceHandlerEx               To sVdfRootDir
    If sCmd Eq "" Begin
        Move (Trim(sVdfRootDir))                            To sCmd
        // The rootdir always ends with a "\"
        //If (Right(sCmd,1)) Ne "\" Append sCmd "\"
        Append sCMD "Bin\DFComp.Exe"
    End
    Else Begin
      If (Pos("@VDFROOT@",sCmd)>0) Begin
        Move (Replace("@VDFROOT@\",sCmd,sVdfRootDir)) To sCmd // We don't mind one extra folderseperator
        Move (Replace("@VDFROOT@",sCmd,sVdfRootDir)) To sCmd
      End
    End
    Function_Return sCmd
End_Function
    // Same for Debugger.
Function DebuggerCmdLine For Desktop Returns String
    String  sCmd
    String  sFileName
    String  sPath
    Integer iVdfVersion
    
    Get fnCurrentVdfVersion Of ghoWorkspaceHandlerEx        To iVdfVersion
    If (iVdfVersion<120) Begin
      Move (psDebugger(ghoEditorProperties))                To sCmd
      Get psVdfRootDir      Of ghoWorkSpaceHandlerEx        To sPath
      If sCmd Eq "" Begin
          Move (Trim(sPath))                                To sCmd
          Append sCMD "Bin\"
          If (psVDFRegistryVersion(ghoEditorProperties)) Eq "5" Append sCmd "DFSpy.Exe"
          Else                                                  Append sCmd "VDFBug.Exe"
      End
      Else Begin
        If (Pos("@VDFROOT@",sCmd)>0) Begin
          Move (Replace("@VDFROOT@\",sCmd,sPath)) To sCmd // We don't mind one extra folderseperator
          Move (Replace("@VDFROOT@",sCmd,sPath))  To sCmd
        End
      End
    End
    Else Begin
      Get ModuleExecuteable to sFileName  // returns path+filename to the hammer binary
      Get ParseFolderName sFileName to sPath
      Get vFolderFormat sPath To sPath
      Move (sPath+"VdfSplat.exe") To sCmd
    End
    Function_Return sCmd
End_Function

    // CmdLine for the DfRun.
Function DFrunCmdLine For Desktop Returns String
    String sCmd
    String sVdfRootDir
    Move (psDfrun(ghoEditorProperties))                     To sCmd
    Get psVdfRootDir Of ghoWorkSpaceHandlerEx               To sVdfRootDir
    If sCmd Eq "" Begin
        Move (Trim(sVdfRootDir))                            To sCmd
        Append sCMD "Bin\DFRun.Exe"
    End
    Else Begin
      If (Pos("@VDFROOT@",sCmd)>0) Begin
        Move (Replace("@VDFROOT@\",sCmd,sVdfRootDir)) To sCmd // We don't mind one extra folderseperator
        Move (Replace("@VDFROOT@",sCmd,sVdfRootDir)) To sCmd
      End
    End
    Function_Return sCmd
End_Function

Function ConvertPRGFile For Desktop String sFile Returns String
    String sCmd
    If (piUseWorkSpace(ghoEditorProperties)) Begin
        Get FileFromPath sFile                          To sFile
        Get CurrentProgramPath Of ghoWorkSpaceHandlerEx To sCmd
        Append sCmd "\" sFile
        Function_Return sCmd
    End
    Else Function_Return sFile
End_Function


    // Sets the VDF Version.
Procedure Set VDFVersion For Desktop String sVer
    Set psVDFVersion            Of ghoWorkSpaceHandlerEx   To sVer
    Set psVDFRegistryVersion    Of ghoEditorProperties     To sVer
    Send InitWithCurrentWrkSpc  To ghoWorkSpaceHandlerEx
End_Procedure



// This method will change the current windowsfolder for a given directory
//
// Just blindly checking the current folder using the Set_Directory command
// evokes a cryptic "RAW-file error"
//
Procedure DoChangeCurrentFolder Global String sFolder
  String sMessage
  If (vFolderExists(sFolder)) Begin
    Set_Directory sFolder       // Sets the current workfolder
  End
  Else Begin
    Move ("The Hammer tried to set the following folder as your current directory.\n\n") To sMessage
    Move (sMessage+"Folder: '"+sFolder+"'\n\n") To sMessage
    Move (sMessage+"This folder does not appear to exist on your system.\n\n") to sMessage
    //
    Get psHome of (phoWorkspace(ghoApplication)) to sFolder
    Move (sMessage+"Changing current directory to '"+sFolder+"' instead.") to sMessage
    Send Info_Box sMessage "Info"
  End
End_Procedure // DoChangeCurrentFolder



    // Selects the Working directory.
Procedure SelectWorkingDirectory For Desktop String sDirE
    String sDir
    If NUM_Arguments Gt 0 Move sDirE    To sDir
    Else Begin
        // Changed this call to preselect the current working directory
        // in the BrowseForFolder Window
        // 28.02.2003 BP
        get_directory sDir
        Get SelectFolderWithInit "Select Working Directory" sDir To sDir
    End
    If sDir Ne "" Begin
        If (Pos(";",sDir)) Ne 0 Move (Left(sDir,((Pos(";",sDir))-1) )) To sDir  // Changed to support multi-directory. 15.5.01 BP
        Set psStartUpPath Of  ghoEditorProperties To sDir
        Send DoChangeCurrentFolder sDir
    End
End_Procedure



    // Tries to init the WorkingDirectory to the AppSrc directory of the current WorkSpace in the Selected VDF version.
Send SelectWorkingDirectory To Desktop (CurrentAppSrcPath(ghoWorkSpaceHandlerEx))

    // ModuleExecuteable delivers the Path and Filename of the current executeable (i.E. c:\VDF7\BIN\DFRUN.EXE or c:\vdf9\projects\hammer\programs\hammer.exe
    // 2.1.2004 BP
Function ModuleExecuteable Global Returns String
    Handle hModule
    Integer iRet
    String sFile
    Pointer pFile
    Move (Repeat(Character(0),255))  To sFile
    Move (addressOf(sFile))          To pFile
    Move (GetModuleHandle(0))                   To hModule
    Move (GetModuleFileName(hModule,pFile,255)) To iRet
    Move (CString(sFile))                       To sFile
    Move (Lowercase(sFile))                     To sFile
    Function_Return (cString(sFile))
End_Function

    // Functions to associate filetypes to the Hammer.
Function MainRegistryTag Global Returns String
    Function_Return "The Hammer"
End_Function

    // Changed to work correct with VDF8 or higher
    // 2.1.2004 BP
Procedure RegisterSelfOpenTAG Global
    String  sPath
#IF (FMAC_VERSION < 8)
    Move (ModuleExecuteable()) To sPath
    Move (sPath + " " + (psStartupProgramPath(ghoWorkspace)) + "\Hammer -OPEN") To sPath
    Send AssignExecutableToTAG_OPEN (MainRegistryTag()) sPath (Append(psStartupBitmapPath(ghoWorkspace),"\Editor.Ico")) "The Hammer" 1
#ELSE
    Move (ModuleExecuteable()) To sPath
    Move (sPath + " -OPEN") To sPath
    Send AssignExecutableToTAG_OPEN (MainRegistryTag()) sPath (Append(psStartupBitmapPath(ghoApplication),"\Editor.Ico")) "The Hammer" 1
#ENDIF
End_Procedure

Procedure RegisterFileType Global String sExt
    Send AssignExtentionToTAG sExt (MainRegistryTag())
End_Procedure

Procedure AsociateAllFileTypes Global
    Integer hoID iC
    String  sExt sTmp
    Object oParser Is a cLineParser
        Move Self           To hoID
        Set psSepCharacter  To "|"
    End_Object
    Send RegisterSelfOpenTAG
    Send ParseLine                          To hoID (psFileTypes(ghoEditorProperties))
    For iC From 0 To (Item_Count(hoID)-1)
        Get value Of hoID Item (iC+1)   To sExt
        Move (Left(sExt,Pos(".",sExt))) To sTmp
        Move (Replace(sTmp,sExt,""))    To sExt
        If Not "*" In sExt If Not "." In sExt Begin
        	Move (Trim(sExt))		To sExt
        	Send RegisterFileType ("."+sExt)
        End
        Increment iC
    End
    Send Request_Destroy_Object             To hoID
    Send NofityShell_AssocChanged
End_Procedure

Procedure UnRegisterSelfOpenTAG Global
    String  sPath
#IF (FMAC_VERSION < 8)
    Move (ModuleExecuteable()) To sPath
    Move (sPath + " " + (psStartupProgramPath(ghoWorkspace)) + "\Hammer -OPEN") To sPath
    Send AssignExecutableToTAG_OPEN (MainRegistryTag()) sPath (Append(psStartupBitmapPath(ghoWorkspace),"\Editor.Ico")) "The Hammer" 1
#ELSE
    Move (ModuleExecuteable()) To sPath
    Move (sPath + " -OPEN") To sPath
    Send AssignExecutableToTAG_OPEN (MainRegistryTag()) sPath (Append(psStartupBitmapPath(ghoApplication),"\Editor.Ico")) "The Hammer" 1
#ENDIF
End_Procedure

Procedure UnRegisterFileType Global String sExt
    Send AssignExtentionToTAG sExt (MainRegistryTag())
End_Procedure

Procedure DeassociateAllFileTypes Global
    Integer hoID iC
    String  sExt sTmp
    Object oParser Is a cLineParser
        Move Self           To hoID
        Set psSepCharacter  To "|"
    End_Object
    Send UnRegisterSelfOpenTAG
    Send ParseLine                          To hoID (psFileTypes(ghoEditorProperties))
    For iC From 0 To (Item_Count(hoID)-1)
        Get value Of hoID Item (iC+1)   To sExt
        Move (Left(sExt,Pos(".",sExt))) To sTmp
        Move (Replace(sTmp,sExt,""))    To sExt
        If Not "*" In sExt If Not "." In sExt Begin
          Move (Trim(sExt))   To sExt
          Send UnRegisterFileType ("."+sExt)
        End
        Increment iC
    End
    Send Request_Destroy_Object             To hoID
    Send NofityShell_AssocChanged
End_Procedure // DeassociateAllFileTypes

